openapi: 3.0.0
info:
  version: '13'
  title: Frappe / ERPNext API
  license:
    name: GPL-3.0
    url: 'http://www.gnu.de/documents/gpl-3.0.en.html'
servers:
  - url: 'http://hrms-demo.assimilate.co.in'
    description: TODO
paths:
  /api/method/rename_doc:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: old_name
          in: path
          required: true
          schema:
            type: string
        - name: new_name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: old_name
          in: path
          required: true
          schema:
            type: string
        - name: new_name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/ping:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_translations_for_source:
    get:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: translation_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: translation_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_translations:
    get:
      parameters:
        - name: source_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_messages:
    get:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: search_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: search_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_source_additional_info:
    get:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contributions:
    get:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contribution_status:
    get:
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_all_languages:
    get:
      parameters:
        - name: with_language_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: with_language_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/download_file:
    get:
      parameters:
        - name: file_url
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file_url
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_attachments:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_follow:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: following
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: following
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/follow_document:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unfollow_document:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_follow_users:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/export_customizations:
    get:
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: sync_on_migrate
          in: path
          required: true
          schema:
            type: string
        - name: with_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: sync_on_migrate
          in: path
          required: true
          schema:
            type: string
        - name: with_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_transitions:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: workflow
          in: path
          required: true
          schema:
            type: string
        - name: raise_exception
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: workflow
          in: path
          required: true
          schema:
            type: string
        - name: raise_exception
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_workflow:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/can_cancel_document:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_workflow_approval:
    get:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_common_transition_actions:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search:
    get:
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/web_search:
    get:
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: scope
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: scope
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/submit:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state_fieldname
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state_fieldname
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rename:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
        - name: validate_rename
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
        - name: validate_rename
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_subscribed_documents:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/set_seen_value:
    get:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_notification_logs:
    get:
      parameters:
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_all_as_read:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/mark_as_read:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/trigger_indicator_hide:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/add:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: permlevel
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: permlevel
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_permission:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: permission_to
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: everyone
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: permission_to
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: everyone
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_users:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_access_log:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: document
          in: path
          required: true
          schema:
            type: string
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: file_type
          in: path
          required: true
          schema:
            type: string
        - name: report_name
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: string
        - name: columns
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: document
          in: path
          required: true
          schema:
            type: string
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: file_type
          in: path
          required: true
          schema:
            type: string
        - name: report_name
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: string
        - name: columns
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get:
    get:
      parameters:
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
        - name: chart
          in: path
          required: true
          schema:
            type: string
        - name: no_cache
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: timespan
          in: path
          required: true
          schema:
            type: string
        - name: time_interval
          in: path
          required: true
          schema:
            type: string
        - name: heatmap_year
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
        - name: chart
          in: path
          required: true
          schema:
            type: string
        - name: no_cache
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: timespan
          in: path
          required: true
          schema:
            type: string
        - name: time_interval
          in: path
          required: true
          schema:
            type: string
        - name: heatmap_year
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/wrapper_fn:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_report:
    get:
      parameters:
        - name: reference_report
          in: path
          required: true
          schema:
            type: string
        - name: report_name
          in: path
          required: true
          schema:
            type: string
        - name: columns
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reference_report
          in: path
          required: true
          schema:
            type: string
        - name: report_name
          in: path
          required: true
          schema:
            type: string
        - name: columns
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_report:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_items:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_filter_dashboard_data:
    get:
      parameters:
        - name: stats
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: stats
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_list:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: group_by
          in: path
          required: true
          schema:
            type: string
        - name: order_by
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: limit_page_length
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: or_filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: group_by
          in: path
          required: true
          schema:
            type: string
        - name: order_by
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: limit_page_length
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: or_filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_count:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: cache
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: cache
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_value:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_single_value:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_value:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/insert:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/insert_many:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete:
    get:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_update:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/has_permission:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: perm_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: perm_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_doc_permissions:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_password:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_js:
    get:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_time_zone:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/attach_file:
    get:
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
        - name: filedata
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: decode_base64
          in: path
          required: true
          schema:
            type: string
        - name: is_private
          in: path
          required: true
          schema:
            type: string
        - name: docfield
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
        - name: filedata
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: decode_base64
          in: path
          required: true
          schema:
            type: string
        - name: is_private
          in: path
          required: true
          schema:
            type: string
        - name: docfield
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_document_amended:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/validate_link:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/clear:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: ticket
          in: path
          required: true
          schema:
            type: string
        - name: comment
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: ticket
          in: path
          required: true
          schema:
            type: string
        - name: comment
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_boot_assets_json:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/send_csv_to_client:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/logout:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/web_logout:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/uploadfile:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/upload_file:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/status:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/start:
    get:
      parameters:
        - name: record_jobs
          in: path
          required: true
          schema:
            type: string
        - name: record_requests
          in: path
          required: true
          schema:
            type: string
        - name: record_sql
          in: path
          required: true
          schema:
            type: string
        - name: profile
          in: path
          required: true
          schema:
            type: string
        - name: capture_stack
          in: path
          required: true
          schema:
            type: string
        - name: explain
          in: path
          required: true
          schema:
            type: string
        - name: request_filter
          in: path
          required: true
          schema:
            type: string
        - name: jobs_filter
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: record_jobs
          in: path
          required: true
          schema:
            type: string
        - name: record_requests
          in: path
          required: true
          schema:
            type: string
        - name: record_sql
          in: path
          required: true
          schema:
            type: string
        - name: profile
          in: path
          required: true
          schema:
            type: string
        - name: capture_stack
          in: path
          required: true
          schema:
            type: string
        - name: explain
          in: path
          required: true
          schema:
            type: string
        - name: request_filter
          in: path
          required: true
          schema:
            type: string
        - name: jobs_filter
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/stop:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/export_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent_doctype
          in: path
          required: true
          schema:
            type: string
        - name: all_doctypes
          in: path
          required: true
          schema:
            type: string
        - name: with_data
          in: path
          required: true
          schema:
            type: string
        - name: select_columns
          in: path
          required: true
          schema:
            type: string
        - name: file_type
          in: path
          required: true
          schema:
            type: string
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: export_without_column_meta
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent_doctype
          in: path
          required: true
          schema:
            type: string
        - name: all_doctypes
          in: path
          required: true
          schema:
            type: string
        - name: with_data
          in: path
          required: true
          schema:
            type: string
        - name: select_columns
          in: path
          required: true
          schema:
            type: string
        - name: file_type
          in: path
          required: true
          schema:
            type: string
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: export_without_column_meta
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/import_data:
    get:
      parameters:
        - name: file
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/getpage:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/reset_tour:
    get:
      parameters:
        - name: tour_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tour_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_user_status:
    get:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: step
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: step
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/deferred_insert:
    get:
      parameters:
        - name: routes
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: routes
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/frequently_visited_links:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/getdoc:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/getdoctype:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: with_parent
          in: path
          required: true
          schema:
            type: string
        - name: cached_timestamp
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: with_parent
          in: path
          required: true
          schema:
            type: string
        - name: cached_timestamp
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_docinfo:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_communications:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_info_for_viewers:
    get:
      parameters:
        - name: users
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: users
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contact_list:
    get:
      parameters:
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/relink:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_communication_doctype:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_email_flag_queue:
    get:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_as_closed_open:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/move_email:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: email_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: email_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_as_trash:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_as_spam:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: sender
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: sender
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/revert:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_review_points:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_energy_points:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_energy_and_review_points:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/review:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
        - name: to_user
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: review_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
        - name: to_user
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: review_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_reviews:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_last_known_versions:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_versions:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/show_update_popup:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/make_view_log:
    get:
      parameters:
        - name: referrer
          in: path
          required: true
          schema:
            type: string
        - name: browser
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: user_tz
          in: path
          required: true
          schema:
            type: string
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: campaign
          in: path
          required: true
          schema:
            type: string
        - name: medium
          in: path
          required: true
          schema:
            type: string
        - name: visitor_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: referrer
          in: path
          required: true
          schema:
            type: string
        - name: browser
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: user_tz
          in: path
          required: true
          schema:
            type: string
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: campaign
          in: path
          required: true
          schema:
            type: string
        - name: medium
          in: path
          required: true
          schema:
            type: string
        - name: visitor_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_page_view_count:
    get:
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_otp_secret:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_logged_user:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_auto_account_deletion:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/optimize_file:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unzip_file:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_attached_images:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_files_in_folder:
    get:
      parameters:
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_files_by_search_text:
    get:
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_max_file_size:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/create_new_folder:
    get:
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/move_file:
    get:
      parameters:
        - name: file_list
          in: path
          required: true
          schema:
            type: string
        - name: new_parent
          in: path
          required: true
          schema:
            type: string
        - name: old_parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file_list
          in: path
          required: true
          schema:
            type: string
        - name: new_parent
          in: path
          required: true
          schema:
            type: string
        - name: old_parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/zip_files:
    get:
      parameters:
        - name: files
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: files
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_linked_doctypes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_id:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_notification_info:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_timezones:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_all_roles:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_roles:
    get:
      parameters:
        - name: arg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: arg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_perm_info:
    get:
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_password:
    get:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: logout_all_sessions
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: logout_all_sessions
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/test_password_strength:
    get:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
        - name: user_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
        - name: user_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/has_email_account:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_email_awaiting:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/verify_password:
    get:
      parameters:
        - name: password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/sign_up:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: full_name
          in: path
          required: true
          schema:
            type: string
        - name: redirect_to
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: full_name
          in: path
          required: true
          schema:
            type: string
        - name: redirect_to
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_password:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/user_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_role_profile:
    get:
      parameters:
        - name: role_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: role_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_module_profile:
    get:
      parameters:
        - name: module_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_keys:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/switch_theme:
    get:
      parameters:
        - name: theme
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: theme
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_workspace_sidebar_items:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_onboarding_step:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unlock_doc:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_latest_submissions:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/activate_scheduler:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_scheduler_status:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/savedocs:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_tag:
    get:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_tags:
    get:
      parameters:
        - name: tags
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tags
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_tag:
    get:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tagged_docs:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tags:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_documents_for_tag:
    get:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tags_list_for_awesomebar:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/make_mapped_doc:
    get:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: selected_children
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: selected_children
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/map_docs:
    get:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_names
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_names
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_document_title:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: enqueue
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: enqueue
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_html_and_style:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
        - name: trigger_print
          in: path
          required: true
          schema:
            type: string
        - name: style
          in: path
          required: true
          schema:
            type: string
        - name: settings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
        - name: trigger_print
          in: path
          required: true
          schema:
            type: string
        - name: style
          in: path
          required: true
          schema:
            type: string
        - name: settings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_rendered_raw_commands:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_submitted_linked_docs:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel_all_linked_docs:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: ignore_doctypes_on_cancel_all
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: ignore_doctypes_on_cancel_all
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_linked_doctypes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: without_ignore_user_permissions_enabled
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: without_ignore_user_permissions_enabled
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_permissions:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_applicable_for_doctype_list:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/check_applicable_doc_perm:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/clear_user_permissions:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: for_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: for_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_user_permissions:
    get:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/load:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/accept:
    get:
      parameters:
        - name: web_form
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_form
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_multiple:
    get:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_web_form_filters:
    get:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_form_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_in_list_view_fields:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_link_options:
    get:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: allow_read_on_all_link_options
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: allow_read_on_all_link_options
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rebuild_tree:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent_field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent_field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_exchange_rate:
    get:
      parameters:
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: account_currency
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: reference_type
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: debit
          in: path
          required: true
          schema:
            type: string
        - name: credit
          in: path
          required: true
          schema:
            type: string
        - name: exchange_rate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: account_currency
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: reference_type
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: debit
          in: path
          required: true
          schema:
            type: string
        - name: credit
          in: path
          required: true
          schema:
            type: string
        - name: exchange_rate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_pricing_rule:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_pricing_rules:
    get:
      parameters:
        - name: item_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_pricing_rule:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_uoms:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_variant:
    get:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: variant
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer_part_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: variant
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer_part_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_variant:
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/enqueue_multiple_variant_creation:
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_variant_doc_for_quick_entry:
    get:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_uom_conv_factor:
    get:
      parameters:
        - name: uom
          in: path
          required: true
          schema:
            type: string
        - name: stock_uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: uom
          in: path
          required: true
          schema:
            type: string
        - name: stock_uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_attribute:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: attribute_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: attribute_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_asset_naming_series:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_item_manufacturer_part_no:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_tax_info:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: item_codes
          in: path
          required: true
          schema:
            type: string
        - name: item_rates
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_templates
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: item_codes
          in: path
          required: true
          schema:
            type: string
        - name: item_rates
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_templates
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_tax_map:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_template
          in: path
          required: true
          schema:
            type: string
        - name: as_json
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_template
          in: path
          required: true
          schema:
            type: string
        - name: as_json
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/calculate_service_end_date:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pos_profile:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: pos_profile
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: pos_profile
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_conversion_factor:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_projected_qty:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bin_details:
    get:
      parameters:
        - name: row
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: for_warehouse
          in: path
          required: true
          schema:
            type: string
        - name: all_warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: row
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: for_warehouse
          in: path
          required: true
          schema:
            type: string
        - name: all_warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_qty:
    get:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: ignore_voucher_nos
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: ignore_voucher_nos
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_price_list:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: as_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: as_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_bom:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_valuation_rate:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_serial_no:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: serial_nos
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: serial_nos
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_blanket_order_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_routing:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_material_detail:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_cost:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: update_parent
          in: path
          required: true
          schema:
            type: string
        - name: from_child_bom
          in: path
          required: true
          schema:
            type: string
        - name: update_hour_rate
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: update_parent
          in: path
          required: true
          schema:
            type: string
        - name: from_child_bom
          in: path
          required: true
          schema:
            type: string
        - name: update_hour_rate
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_items:
    get:
      parameters:
        - name: bom
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: fetch_exploded
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bom
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: fetch_exploded
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_children:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_diff:
    get:
      parameters:
        - name: bom1
          in: path
          required: true
          schema:
            type: string
        - name: bom2
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bom1
          in: path
          required: true
          schema:
            type: string
        - name: bom2
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/item_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_variant_bom:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: bom_no
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: variant_items
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: bom_no
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: variant_items
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/filter_dynamic_link_doctypes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_as_default:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_apps:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/invite_user:
    get:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contact_details:
    get:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/contact_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/address_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_address:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: sort_key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: sort_key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_address_display:
    get:
      parameters:
        - name: address_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: address_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/convert_group_to_ledger:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/convert_ledger_to_group:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_parent_account:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_account_number:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: account_name
          in: path
          required: true
          schema:
            type: string
        - name: account_number
          in: path
          required: true
          schema:
            type: string
        - name: from_descendant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: account_name
          in: path
          required: true
          schema:
            type: string
        - name: account_number
          in: path
          required: true
          schema:
            type: string
        - name: from_descendant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/merge_account:
    get:
      parameters:
        - name: old
          in: path
          required: true
          schema:
            type: string
        - name: new
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: old
          in: path
          required: true
          schema:
            type: string
        - name: new
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_root_company:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_fields_label:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rename_fieldname:
    get:
      parameters:
        - name: custom_field
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: custom_field
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/disable_dimension:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_dimensions:
    get:
      parameters:
        - name: with_cost_center_and_project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: with_cost_center_and_project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_node:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/convert_to_group_or_ledger:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_stock_balance:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: with_valuation_rate
          in: path
          required: true
          schema:
            type: string
        - name: with_serial_no
          in: path
          required: true
          schema:
            type: string
        - name: inventory_dimensions_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: with_valuation_rate
          in: path
          required: true
          schema:
            type: string
        - name: with_serial_no
          in: path
          required: true
          schema:
            type: string
        - name: inventory_dimensions_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_latest_stock_qty:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_incoming_rate:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: raise_error_if_no_rate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: raise_error_if_no_rate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/scan_barcode:
    get:
      parameters:
        - name: search_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: search_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_fiscal_year:
    get:
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: fiscal_year
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: verbose
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: boolean
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: fiscal_year
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: verbose
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: boolean
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_fiscal_year_filter_field:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_balance_on:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
        - name: ignore_account_permission
          in: path
          required: true
          schema:
            type: string
        - name: account_type
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
        - name: ignore_account_permission
          in: path
          required: true
          schema:
            type: string
        - name: account_type
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_ac:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_cc:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_company_default:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: ignore_validation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: ignore_validation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_companies:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_account_balances:
    get:
      parameters:
        - name: accounts
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: accounts
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_cost_center:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_name
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_number
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_name
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_number
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_coa:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
        - name: chart
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
        - name: chart
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_details:
    get:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_account:
    get:
      parameters:
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: include_advance
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: include_advance
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_bank_account:
    get:
      parameters:
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_due_date:
    get:
      parameters:
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: bill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: bill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_address_tax_category:
    get:
      parameters:
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: billing_address
          in: path
          required: true
          schema:
            type: string
        - name: shipping_address
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: billing_address
          in: path
          required: true
          schema:
            type: string
        - name: shipping_address
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_taxes:
    get:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: customer_group
          in: path
          required: true
          schema:
            type: string
        - name: supplier_group
          in: path
          required: true
          schema:
            type: string
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: billing_address
          in: path
          required: true
          schema:
            type: string
        - name: shipping_address
          in: path
          required: true
          schema:
            type: string
        - name: use_for_shopping_cart
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: customer_group
          in: path
          required: true
          schema:
            type: string
        - name: supplier_group
          in: path
          required: true
          schema:
            type: string
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: billing_address
          in: path
          required: true
          schema:
            type: string
        - name: shipping_address
          in: path
          required: true
          schema:
            type: string
        - name: use_for_shopping_cart
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_terms_template:
    get:
      parameters:
        - name: party_name
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party_name
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_gstin_list:
    get:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_for_gstin:
    get:
      parameters:
        - name: gstin
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: gstin
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_contact_details:
    get:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_all_gst_accounts:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/disable_item_tax_template_notification:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_doctypes_for_closing:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_linked_material_requests:
    get:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items_from_product_bundle:
    get:
      parameters:
        - name: row
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: row
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_shipping_rule:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_advances:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/repost_accounting_entries:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tax_rate:
    get:
      parameters:
        - name: account_head
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account_head
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_taxes_and_charges:
    get:
      parameters:
        - name: master_doctype
          in: path
          required: true
          schema:
            type: string
        - name: tax_template
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: master_doctype
          in: path
          required: true
          schema:
            type: string
        - name: tax_template
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_taxes_and_charges:
    get:
      parameters:
        - name: master_doctype
          in: path
          required: true
          schema:
            type: string
        - name: master_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: master_doctype
          in: path
          required: true
          schema:
            type: string
        - name: master_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_terms:
    get:
      parameters:
        - name: terms_template
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: grand_total
          in: path
          required: true
          schema:
            type: string
        - name: base_grand_total
          in: path
          required: true
          schema:
            type: string
        - name: bill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: terms_template
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: grand_total
          in: path
          required: true
          schema:
            type: string
        - name: base_grand_total
          in: path
          required: true
          schema:
            type: string
        - name: bill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_term_details:
    get:
      parameters:
        - name: term
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: grand_total
          in: path
          required: true
          schema:
            type: string
        - name: base_grand_total
          in: path
          required: true
          schema:
            type: string
        - name: bill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: term
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: grand_total
          in: path
          required: true
          schema:
            type: string
        - name: base_grand_total
          in: path
          required: true
          schema:
            type: string
        - name: bill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_child_qty_rate:
    get:
      parameters:
        - name: parent_doctype
          in: path
          required: true
          schema:
            type: string
        - name: trans_items
          in: path
          required: true
          schema:
            type: string
        - name: parent_doctype_name
          in: path
          required: true
          schema:
            type: string
        - name: child_docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent_doctype
          in: path
          required: true
          schema:
            type: string
        - name: trans_items
          in: path
          required: true
          schema:
            type: string
        - name: parent_doctype_name
          in: path
          required: true
          schema:
            type: string
        - name: child_docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_disbursement_entry:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/close_loan:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_invoices:
    get:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_depr_schedule:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_asset_depr_schedule_doc:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_balance:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: difference_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: difference_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_outstanding_invoices:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_bank_cash_account:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: account_type
          in: path
          required: true
          schema:
            type: string
        - name: mode_of_payment
          in: path
          required: true
          schema:
            type: string
        - name: account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: account_type
          in: path
          required: true
          schema:
            type: string
        - name: mode_of_payment
          in: path
          required: true
          schema:
            type: string
        - name: account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_entry_against_order:
    get:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: amount
          in: path
          required: true
          schema:
            type: string
        - name: debit_in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: journal_entry
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: amount
          in: path
          required: true
          schema:
            type: string
        - name: debit_in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: journal_entry
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_entry_against_invoice:
    get:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: amount
          in: path
          required: true
          schema:
            type: string
        - name: debit_in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: journal_entry
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: amount
          in: path
          required: true
          schema:
            type: string
        - name: debit_in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: journal_entry
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_against_jv:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_outstanding:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_account_and_balance:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_account_balance_and_party_type:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: debit
          in: path
          required: true
          schema:
            type: string
        - name: credit
          in: path
          required: true
          schema:
            type: string
        - name: exchange_rate
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: debit
          in: path
          required: true
          schema:
            type: string
        - name: credit
          in: path
          required: true
          schema:
            type: string
        - name: exchange_rate
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_average_exchange_rate:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_journal_entry:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: voucher_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: voucher_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_reverse_journal_entry:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_round_off_applicable_accounts:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: account_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: account_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_gstin_status:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_gstin_status:
    get:
      parameters:
        - name: gstin
          in: path
          required: true
          schema:
            type: string
        - name: transaction_date
          in: path
          required: true
          schema:
            type: string
        - name: is_request_from_ui
          in: path
          required: true
          schema:
            type: string
        - name: force_update
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: gstin
          in: path
          required: true
          schema:
            type: string
        - name: transaction_date
          in: path
          required: true
          schema:
            type: string
        - name: is_request_from_ui
          in: path
          required: true
          schema:
            type: string
        - name: force_update
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_valid_gst_accounts:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_gst_details:
    get:
      parameters:
        - name: party_details
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: update_place_of_supply
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party_details
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: update_place_of_supply
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_list_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: cmd
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: cmd
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/new_page:
    get:
      parameters:
        - name: new_page
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: new_page
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_page:
    get:
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: public
          in: path
          required: true
          schema:
            type: string
        - name: new_widgets
          in: path
          required: true
          schema:
            type: string
        - name: blocks
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: public
          in: path
          required: true
          schema:
            type: string
        - name: new_widgets
          in: path
          required: true
          schema:
            type: string
        - name: blocks
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_page:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: icon
          in: path
          required: true
          schema:
            type: string
        - name: indicator_color
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: public
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: icon
          in: path
          required: true
          schema:
            type: string
        - name: indicator_color
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: public
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/hide_page:
    get:
      parameters:
        - name: page_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: page_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unhide_page:
    get:
      parameters:
        - name: page_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: page_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/duplicate_page:
    get:
      parameters:
        - name: page_name
          in: path
          required: true
          schema:
            type: string
        - name: new_page
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: page_name
          in: path
          required: true
          schema:
            type: string
        - name: new_page
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_page:
    get:
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/sort_pages:
    get:
      parameters:
        - name: sb_public_items
          in: path
          required: true
          schema:
            type: string
        - name: sb_private_items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: sb_public_items
          in: path
          required: true
          schema:
            type: string
        - name: sb_private_items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_print_server_enabled:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_audit_trail_doctypes:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/disable_audit_trail_notification:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/enable_audit_trail:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_api_secret:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/set_api_secret:
    get:
      parameters:
        - name: api_secret
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: api_secret
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_auth_session:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/set_auth_session:
    get:
      parameters:
        - name: session
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: session
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_gstin_info:
    get:
      parameters:
        - name: gstin
          in: path
          required: true
          schema:
            type: string
        - name: throw_error
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: gstin
          in: path
          required: true
          schema:
            type: string
        - name: throw_error
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/disable_api_promo:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/enqueue_update_gst_category:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/role_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/split_issue:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: communication_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: communication_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_multiple_status:
    get:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_status:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: close
          in: path
          required: true
          schema:
            type: string
        - name: update_bin
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: close
          in: path
          required: true
          schema:
            type: string
        - name: update_bin
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_task:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_issue_from_communication:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: ignore_communication_links
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: ignore_communication_links
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_service_level_agreement_filters:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: customer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: customer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_service_level_agreement:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_time:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: to_string
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: to_string
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_sla_doctypes:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/delete_communication:
    get:
      parameters:
        - name: event
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: event
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_events:
    get:
      parameters:
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: end
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: end
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/can_subscribe_doc:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/can_subscribe_doctype:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_info:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/create_dashboard_chart:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_report_chart:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_chart_to_dashboard:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_charts_for_user:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_parent_doctypes:
    get:
      parameters:
        - name: child_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: child_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_result:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_percentage_difference:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: result
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: result
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_number_card:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_cards_for_user:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_report_number_card:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_card_to_dashboard:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_dashboard_settings:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_chart_config:
    get:
      parameters:
        - name: reset
          in: path
          required: true
          schema:
            type: string
        - name: config
          in: path
          required: true
          schema:
            type: string
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reset
          in: path
          required: true
          schema:
            type: string
        - name: config
          in: path
          required: true
          schema:
            type: string
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contact_number:
    get:
      parameters:
        - name: contact_name
          in: path
          required: true
          schema:
            type: string
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ref_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: contact_name
          in: path
          required: true
          schema:
            type: string
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ref_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_sms:
    get:
      parameters:
        - name: receiver_list
          in: path
          required: true
          schema:
            type: string
        - name: msg
          in: path
          required: true
          schema:
            type: string
        - name: sender_name
          in: path
          required: true
          schema:
            type: string
        - name: success_msg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: receiver_list
          in: path
          required: true
          schema:
            type: string
        - name: msg
          in: path
          required: true
          schema:
            type: string
        - name: sender_name
          in: path
          required: true
          schema:
            type: string
        - name: success_msg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_documents_for_today:
    get:
      parameters:
        - name: notification
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: notification
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_inventory_documents:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_inventory_dimensions:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/delete_dimension:
    get:
      parameters:
        - name: dimension
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dimension
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_parent_fields:
    get:
      parameters:
        - name: child_doctype
          in: path
          required: true
          schema:
            type: string
        - name: dimension_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: child_doctype
          in: path
          required: true
          schema:
            type: string
        - name: dimension_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_warehouse:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_serial_batch:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/download_blank_csv_template:
    get:
      parameters:
        - name: content
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: content
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/upload_csv_file:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_serial_nos:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: serial_nos
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: serial_nos
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_serial_batch_ledgers:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: docstatus
          in: path
          required: true
          schema:
            type: string
        - name: voucher_no
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: docstatus
          in: path
          required: true
          schema:
            type: string
        - name: voucher_no
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_serial_batch_ledgers:
    get:
      parameters:
        - name: entries
          in: path
          required: true
          schema:
            type: string
        - name: child_row
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: do_not_save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: entries
          in: path
          required: true
          schema:
            type: string
        - name: child_row
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: do_not_save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_serial_or_batch:
    get:
      parameters:
        - name: bundle_id
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bundle_id
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_auto_data:
    get:
      parameters:
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_no_from_serial_no:
    get:
      parameters:
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_serial_batch_no_exists:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: type_of_transaction
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: type_of_transaction
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_duplicate_serial_no:
    get:
      parameters:
        - name: bundle_id
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bundle_id
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_stock_reservation_entries_for_voucher:
    get:
      parameters:
        - name: voucher_type
          in: path
          required: true
          schema:
            type: string
        - name: voucher_no
          in: path
          required: true
          schema:
            type: string
        - name: voucher_detail_no
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: ignore_status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: voucher_type
          in: path
          required: true
          schema:
            type: string
        - name: voucher_no
          in: path
          required: true
          schema:
            type: string
        - name: voucher_detail_no
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: ignore_status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/show_accounting_ledger_preview:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/show_stock_ledger_preview:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_quality_inspections:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_open_activities:
    get:
      parameters:
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ref_docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ref_docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_note:
    get:
      parameters:
        - name: note
          in: path
          required: true
          schema:
            type: string
        - name: observation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: note
          in: path
          required: true
          schema:
            type: string
        - name: observation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/edit_note:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: note
          in: path
          required: true
          schema:
            type: string
        - name: row_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: note
          in: path
          required: true
          schema:
            type: string
        - name: row_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_note:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: row_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: row_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_customer_group_details:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_quotation:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_opportunity:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_loyalty_programs:
    get:
      parameters:
        - name: customer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: customer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_emails:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_customer_primary_contact:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_prospect_and_contact:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_customer:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_lead_details:
    get:
      parameters:
        - name: lead
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: lead
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_lead_from_communication:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: ignore_communication_links
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: ignore_communication_links
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_lead_to_prospect:
    get:
      parameters:
        - name: lead
          in: path
          required: true
          schema:
            type: string
        - name: prospect
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: lead
          in: path
          required: true
          schema:
            type: string
        - name: prospect
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_last_interaction:
    get:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
        - name: lead
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
        - name: lead
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_call_summary_and_call_type:
    get:
      parameters:
        - name: call_log
          in: path
          required: true
          schema:
            type: string
        - name: summary
          in: path
          required: true
          schema:
            type: string
        - name: call_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: call_log
          in: path
          required: true
          schema:
            type: string
        - name: summary
          in: path
          required: true
          schema:
            type: string
        - name: call_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_script:
    get:
      parameters:
        - name: report_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: report_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/export_query:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_data_for_custom_field:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_doctype_roles:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/toggle_disable:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: disable
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: disable
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_installed_apps:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/set_job_requisitions:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: job_reqs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: job_reqs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_designation_counts:
    get:
      parameters:
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: job_opening
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: job_opening
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_active_staffing_plan_details:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_country:
    get:
      parameters:
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_data:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_group
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: sort_by
          in: path
          required: true
          schema:
            type: string
        - name: sort_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_group
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: sort_by
          in: path
          required: true
          schema:
            type: string
        - name: sort_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_list_settings:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_list_settings:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_group_by_count:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: current_filters
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: current_filters
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_listview_settings:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: listview_settings
          in: path
          required: true
          schema:
            type: string
        - name: removed_listview_fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: listview_settings
          in: path
          required: true
          schema:
            type: string
        - name: removed_listview_fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_listview_fields:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_kanban_boards:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_column:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: column_title
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: column_title
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/archive_restore_column:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: column_title
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: column_title
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_order:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_order_for_single_card:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: from_colname
          in: path
          required: true
          schema:
            type: string
        - name: to_colname
          in: path
          required: true
          schema:
            type: string
        - name: old_index
          in: path
          required: true
          schema:
            type: string
        - name: new_index
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: from_colname
          in: path
          required: true
          schema:
            type: string
        - name: to_colname
          in: path
          required: true
          schema:
            type: string
        - name: old_index
          in: path
          required: true
          schema:
            type: string
        - name: new_index
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_card:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: colname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: colname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/quick_kanban_board:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: field_name
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: field_name
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_column_order:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_indicator:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: column_name
          in: path
          required: true
          schema:
            type: string
        - name: indicator
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: column_name
          in: path
          required: true
          schema:
            type: string
        - name: indicator
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_settings:
    get:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: settings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: board_name
          in: path
          required: true
          schema:
            type: string
        - name: settings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_attach:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/add_comment:
    get:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: comment_email
          in: path
          required: true
          schema:
            type: string
        - name: comment_by
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: comment_email
          in: path
          required: true
          schema:
            type: string
        - name: comment_by
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_comment:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_next:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: prev
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: sort_order
          in: path
          required: true
          schema:
            type: string
        - name: sort_field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: prev
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: sort_order
          in: path
          required: true
          schema:
            type: string
        - name: sort_field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_action:
    get:
      parameters:
        - name: action
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: current_state
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: last_modified
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: action
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: current_state
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: last_modified
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/confirm_action:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_multiple:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: permlevel
          in: path
          required: true
          schema:
            type: string
        - name: if_owner
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: permlevel
          in: path
          required: true
          schema:
            type: string
        - name: if_owner
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/close:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: assign_to
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: assign_to
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_apply:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search_link:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ignore_user_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ignore_user_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search_widget:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: filter_fields
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ignore_user_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: filter_fields
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ignore_user_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_names_for_mentions:
    get:
      parameters:
        - name: search_term
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: search_term
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_link_title:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/deactivate_sales_person:
    get:
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_user:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_chatbot_response:
    get:
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
        - name: prompt_message
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
        - name: prompt_message
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reschedule_interview:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: scheduled_on
          in: path
          required: true
          schema:
            type: string
        - name: from_time
          in: path
          required: true
          schema:
            type: string
        - name: to_time
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: scheduled_on
          in: path
          required: true
          schema:
            type: string
        - name: from_time
          in: path
          required: true
          schema:
            type: string
        - name: to_time
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_interviewers:
    get:
      parameters:
        - name: interview_round
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: interview_round
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_feedback:
    get:
      parameters:
        - name: interview
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: interview
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_skill_wise_average_rating:
    get:
      parameters:
        - name: interview
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: interview
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_job_applicant_status:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_expected_skill_set:
    get:
      parameters:
        - name: interview_round
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: interview_round
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_interview_feedback:
    get:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
        - name: interview_name
          in: path
          required: true
          schema:
            type: string
        - name: interviewer
          in: path
          required: true
          schema:
            type: string
        - name: job_applicant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
        - name: interview_name
          in: path
          required: true
          schema:
            type: string
        - name: interviewer
          in: path
          required: true
          schema:
            type: string
        - name: job_applicant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_interviewer_list:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_interview:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_interview_details:
    get:
      parameters:
        - name: job_applicant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: job_applicant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_applicant_to_hire_percentage:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_permitted_charts:
    get:
      parameters:
        - name: dashboard_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dashboard_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_permitted_cards:
    get:
      parameters:
        - name: dashboard_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dashboard_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_attendance_years:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_country_timezone_info:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/reset_global_search_settings_doctypes:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/setup_complete:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/load_messages:
    get:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/load_languages:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/load_country:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/load_user_details:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/check_if_transactions_exist:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_default_tax_template:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_company_address:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: sort_key
          in: path
          required: true
          schema:
            type: string
        - name: existing_address
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: sort_key
          in: path
          required: true
          schema:
            type: string
        - name: existing_address
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_deletion_job_running:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_transaction_deletion_request:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_timeline_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_retirement_date:
    get:
      parameters:
        - name: date_of_birth
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: date_of_birth
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/employee_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/lead_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/customer_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/supplier_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/tax_account_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bom:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_project_name:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_delivery_notes_to_be_billed:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_no:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_account_list:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_blanket_orders:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_income_account:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_filtered_dimensions:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_expense_account:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/warehouse_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_numbers:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/item_manufacturer_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_purchase_receipts:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_purchase_invoices:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tax_template:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_terms_for_references:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_filtered_child_rows:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_loyalty_program_details_with_points:
    get:
      parameters:
        - name: customer
          in: path
          required: true
          schema:
            type: string
        - name: loyalty_program
          in: path
          required: true
          schema:
            type: string
        - name: expiry_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: silent
          in: path
          required: true
          schema:
            type: string
        - name: include_expired_entry
          in: path
          required: true
          schema:
            type: string
        - name: current_transaction_amount
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: customer
          in: path
          required: true
          schema:
            type: string
        - name: loyalty_program
          in: path
          required: true
          schema:
            type: string
        - name: expiry_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: silent
          in: path
          required: true
          schema:
            type: string
        - name: include_expired_entry
          in: path
          required: true
          schema:
            type: string
        - name: current_transaction_amount
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_loyalty_program_details:
    get:
      parameters:
        - name: customer
          in: path
          required: true
          schema:
            type: string
        - name: loyalty_program
          in: path
          required: true
          schema:
            type: string
        - name: expiry_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: silent
          in: path
          required: true
          schema:
            type: string
        - name: include_expired_entry
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: customer
          in: path
          required: true
          schema:
            type: string
        - name: loyalty_program
          in: path
          required: true
          schema:
            type: string
        - name: expiry_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: silent
          in: path
          required: true
          schema:
            type: string
        - name: include_expired_entry
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_redeemption_factor:
    get:
      parameters:
        - name: loyalty_program
          in: path
          required: true
          schema:
            type: string
        - name: customer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: loyalty_program
          in: path
          required: true
          schema:
            type: string
        - name: customer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_preview:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/start_repost:
    get:
      parameters:
        - name: account_repost_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account_repost_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_repost_allowed_types:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_depreciation_entry:
    get:
      parameters:
        - name: asset_depr_schedule_name
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: sch_start_idx
          in: path
          required: true
          schema:
            type: string
        - name: sch_end_idx
          in: path
          required: true
          schema:
            type: string
        - name: credit_and_debit_accounts
          in: path
          required: true
          schema:
            type: string
        - name: depreciation_cost_center_and_depreciation_series
          in: path
          required: true
          schema:
            type: string
        - name: accounting_dimensions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_depr_schedule_name
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: sch_start_idx
          in: path
          required: true
          schema:
            type: string
        - name: sch_end_idx
          in: path
          required: true
          schema:
            type: string
        - name: credit_and_debit_accounts
          in: path
          required: true
          schema:
            type: string
        - name: depreciation_cost_center_and_depreciation_series
          in: path
          required: true
          schema:
            type: string
        - name: accounting_dimensions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/scrap_asset:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/restore_asset:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_disposal_account_and_cost_center:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_value_after_depreciation_on_disposal_date:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: disposal_date
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: disposal_date
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_projectwise_timesheet_data:
    get:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: from_time
          in: path
          required: true
          schema:
            type: string
        - name: to_time
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: from_time
          in: path
          required: true
          schema:
            type: string
        - name: to_time
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_timesheet_detail_rate:
    get:
      parameters:
        - name: timelog
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: timelog
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_timesheet:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_timesheet_data:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_sales_invoice:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_activity_cost:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: activity_type
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: activity_type
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/auto_fetch_serial_number:
    get:
      parameters:
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: batch_nos
          in: path
          required: true
          schema:
            type: string
        - name: for_doctype
          in: path
          required: true
          schema:
            type: string
        - name: exclude_sr_nos
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: batch_nos
          in: path
          required: true
          schema:
            type: string
        - name: for_doctype
          in: path
          required: true
          schema:
            type: string
        - name: exclude_sr_nos
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pos_reserved_serial_nos:
    get:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_delivery_trip:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_installation_note:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_packing_slip:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_shipment:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_sales_return:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_delivery_note_status:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_purchase_receipt:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_missing_values:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: for_validate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: for_validate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_timesheet_data:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bank_cash_account:
    get:
      parameters:
        - name: mode_of_payment
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: mode_of_payment
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_maintenance_schedule:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_delivery_note:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_purchase_invoice:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_invoice_discounting:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_dunning:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_assignment_for_multiple_employees:
    get:
      parameters:
        - name: employees
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employees
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_employee_field_property:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_leave_period:
    get:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/calculate_taxes:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_bank_entry:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_expense_claim_account_and_cost_center:
    get:
      parameters:
        - name: expense_claim_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: expense_claim_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_expense_claim_account:
    get:
      parameters:
        - name: expense_claim_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: expense_claim_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_advances:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: advance_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: advance_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_expense_claim:
    get:
      parameters:
        - name: employee_name
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: employee_advance_name
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: paid_amount
          in: path
          required: true
          schema:
            type: string
        - name: claimed_amount
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee_name
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: employee_advance_name
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: paid_amount
          in: path
          required: true
          schema:
            type: string
        - name: claimed_amount
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_expense_claim_for_delivery_trip:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_criteria_list:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/make_all_scorecards:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_weekly_off_dates:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: end_date
          in: path
          required: true
          schema:
            type: string
        - name: days
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: end_date
          in: path
          required: true
          schema:
            type: string
        - name: days
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_applicable_block_dates:
    get:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: all_lists
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: all_lists
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/expire_allocation:
    get:
      parameters:
        - name: allocation
          in: path
          required: true
          schema:
            type: string
        - name: expiry_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: allocation
          in: path
          required: true
          schema:
            type: string
        - name: expiry_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_number_of_leave_days:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: half_day
          in: path
          required: true
          schema:
            type: string
        - name: half_day_date
          in: path
          required: true
          schema:
            type: string
        - name: holiday_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: half_day
          in: path
          required: true
          schema:
            type: string
        - name: half_day_date
          in: path
          required: true
          schema:
            type: string
        - name: holiday_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_leave_details:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_leave_balance_on:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: consider_all_leaves_in_the_allocation_period
          in: path
          required: true
          schema:
            type: string
        - name: for_consumption
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: consider_all_leaves_in_the_allocation_period
          in: path
          required: true
          schema:
            type: string
        - name: for_consumption
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_holidays:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: holiday_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: holiday_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_mandatory_approval:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_leave_approver:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_approvers:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_employees:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_appraisals:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/complete_cycle:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_appraisal_cycle_summary:
    get:
      parameters:
        - name: cycle_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: cycle_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_feedback_criteria:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_config:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_appraisal_template:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_kras_and_rating_criteria:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_feedback:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: feedback
          in: path
          required: true
          schema:
            type: string
        - name: feedback_ratings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: feedback
          in: path
          required: true
          schema:
            type: string
        - name: feedback_ratings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_feedback_history:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: appraisal
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: appraisal
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_kras_for_employee:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_weekly_off_dates:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_supported_countries:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_local_holidays:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/clear_table:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_payroll_cost_centers:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/earning_and_deduction_entries_does_not_exists:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_employee_currency:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_max_benefits:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: on_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: on_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_max_benefits_remaining:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: on_date
          in: path
          required: true
          schema:
            type: string
        - name: payroll_period
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: on_date
          in: path
          required: true
          schema:
            type: string
        - name: payroll_period
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_earning_components:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_earning_components_max_benefits:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: earning_component
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: earning_component
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/fill_employee_details:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_salary_slips:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/submit_salary_slips:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_employees_with_unmarked_attendance:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_start_end_dates:
    get:
      parameters:
        - name: payroll_frequency
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: payroll_frequency
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_end_date:
    get:
      parameters:
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: frequency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: frequency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/payroll_entry_has_bank_entries:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payroll_entries_for_jv:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payroll_settings_for_payment_days:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_emp_and_working_day_details:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/process_salary_based_on_working_days:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_totals:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_salary_slip_from_timesheet:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/enqueue_email_salary_slips:
    get:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_log_based_on_employee_field:
    get:
      parameters:
        - name: employee_field_value
          in: path
          required: true
          schema:
            type: string
        - name: timestamp
          in: path
          required: true
          schema:
            type: string
        - name: device_id
          in: path
          required: true
          schema:
            type: string
        - name: log_type
          in: path
          required: true
          schema:
            type: string
        - name: skip_auto_attendance
          in: path
          required: true
          schema:
            type: string
        - name: employee_fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee_field_value
          in: path
          required: true
          schema:
            type: string
        - name: timestamp
          in: path
          required: true
          schema:
            type: string
        - name: device_id
          in: path
          required: true
          schema:
            type: string
        - name: log_type
          in: path
          required: true
          schema:
            type: string
        - name: skip_auto_attendance
          in: path
          required: true
          schema:
            type: string
        - name: employee_fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_material_consumption_enabled:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_batches_by_oldest:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/split_batch:
    get:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: new_batch_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: new_batch_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pos_reserved_batch_qty:
    get:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items_and_operations_from_bom:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_bom:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_operations:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_work_order:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/check_if_scrap_warehouse_mandatory:
    get:
      parameters:
        - name: bom_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bom_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_work_order_ops:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_stock_entry:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_warehouse:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/stop_unstop:
    get:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/query_sales_order:
    get:
      parameters:
        - name: production_item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: production_item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_job_card:
    get:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: operations
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: operations
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/close_work_order:
    get:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_pick_list:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_stock_return_entry:
    get:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/validate_sales_orders:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_open_sales_orders:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pending_material_requests:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_material_request:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_sub_assembly_items:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: manufacturing_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: manufacturing_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/download_raw_materials:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: warehouses
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: warehouses
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_so_details:
    get:
      parameters:
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items_for_material_requests:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: warehouses
          in: path
          required: true
          schema:
            type: string
        - name: get_parent_warehouse_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: warehouses
          in: path
          required: true
          schema:
            type: string
        - name: get_parent_warehouse_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_data:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/sales_order_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_stock_reservation_entries:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: items_details
          in: path
          required: true
          schema:
            type: string
        - name: from_voucher_type
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: items_details
          in: path
          required: true
          schema:
            type: string
        - name: from_voucher_type
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel_stock_reservation_entries:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: sre_list
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: sre_list
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/close_or_unclose_sales_orders:
    get:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_project:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_maintenance_visit:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_order_for_default_supplier:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: selected_items
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: selected_items
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_work_orders:
    get:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_status:
    get:
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_raw_material_request:
    get:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_purchase_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_work_order_items:
    get:
      parameters:
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
        - name: for_raw_material_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
        - name: for_raw_material_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_manual_depreciation_entries:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_depreciation_rate:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: on_validate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: on_validate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_asset_maintenance:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: item_name
          in: path
          required: true
          schema:
            type: string
        - name: asset_category
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: item_name
          in: path
          required: true
          schema:
            type: string
        - name: asset_category
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_asset_repair:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_asset_capitalization:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_asset_value_adjustment:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: asset_category
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: asset_category
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/transfer_asset:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_journal_entry:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_asset_movement:
    get:
      parameters:
        - name: assets
          in: path
          required: true
          schema:
            type: string
        - name: purpose
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: assets
          in: path
          required: true
          schema:
            type: string
        - name: purpose
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_asset_value_after_depreciation:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: finance_book
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/split_asset:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: split_qty
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
        - name: split_qty
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_current_stock:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_rm_stock_entry:
    get:
      parameters:
        - name: subcontract_order
          in: path
          required: true
          schema:
            type: string
        - name: rm_items
          in: path
          required: true
          schema:
            type: string
        - name: order_doctype
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: subcontract_order
          in: path
          required: true
          schema:
            type: string
        - name: rm_items
          in: path
          required: true
          schema:
            type: string
        - name: order_doctype
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_materials_from_supplier:
    get:
      parameters:
        - name: subcontract_order
          in: path
          required: true
          schema:
            type: string
        - name: rm_details
          in: path
          required: true
          schema:
            type: string
        - name: order_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: subcontract_order
          in: path
          required: true
          schema:
            type: string
        - name: rm_details
          in: path
          required: true
          schema:
            type: string
        - name: order_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_invoice:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_return_against_rejected_warehouse:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_return:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_purchase_receipt_status:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_delivery_note:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_debit_note:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/change_release_date:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: release_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: release_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unblock_invoice:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/block_invoice:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: release_date
          in: path
          required: true
          schema:
            type: string
        - name: hold_comment
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: release_date
          in: path
          required: true
          schema:
            type: string
        - name: hold_comment
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_sales_invoice:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_receipt:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_domain_values:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: domain
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: domain
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_append_to:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_email_password:
    get:
      parameters:
        - name: email_account
          in: path
          required: true
          schema:
            type: string
        - name: password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email_account
          in: path
          required: true
          schema:
            type: string
        - name: password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_email_html:
    get:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: header
          in: path
          required: true
          schema:
            type: string
        - name: with_container
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: header
          in: path
          required: true
          schema:
            type: string
        - name: with_container
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: sent_or_received
          in: path
          required: true
          schema:
            type: string
        - name: sender
          in: path
          required: true
          schema:
            type: string
        - name: sender_full_name
          in: path
          required: true
          schema:
            type: string
        - name: recipients
          in: path
          required: true
          schema:
            type: string
        - name: communication_medium
          in: path
          required: true
          schema:
            type: string
        - name: send_email
          in: path
          required: true
          schema:
            type: string
        - name: print_html
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
        - name: send_me_a_copy
          in: path
          required: true
          schema:
            type: string
        - name: cc
          in: path
          required: true
          schema:
            type: string
        - name: bcc
          in: path
          required: true
          schema:
            type: string
        - name: read_receipt
          in: path
          required: true
          schema:
            type: string
        - name: print_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: email_template
          in: path
          required: true
          schema:
            type: string
        - name: communication_type
          in: path
          required: true
          schema:
            type: string
        - name: send_after
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: sent_or_received
          in: path
          required: true
          schema:
            type: string
        - name: sender
          in: path
          required: true
          schema:
            type: string
        - name: sender_full_name
          in: path
          required: true
          schema:
            type: string
        - name: recipients
          in: path
          required: true
          schema:
            type: string
        - name: communication_medium
          in: path
          required: true
          schema:
            type: string
        - name: send_email
          in: path
          required: true
          schema:
            type: string
        - name: print_html
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
        - name: send_me_a_copy
          in: path
          required: true
          schema:
            type: string
        - name: cc
          in: path
          required: true
          schema:
            type: string
        - name: bcc
          in: path
          required: true
          schema:
            type: string
        - name: read_receipt
          in: path
          required: true
          schema:
            type: string
        - name: print_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: email_template
          in: path
          required: true
          schema:
            type: string
        - name: communication_type
          in: path
          required: true
          schema:
            type: string
        - name: send_after
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_email_as_seen:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/download_multi_pdf:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: format
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
        - name: options
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: format
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
        - name: options
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/download_pdf:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/report_to_pdf:
    get:
      parameters:
        - name: html
          in: path
          required: true
          schema:
            type: string
        - name: orientation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: html
          in: path
          required: true
          schema:
            type: string
        - name: orientation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/print_by_server:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: printer_setting
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: printer_setting
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_request_for_quotation:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_order_based_on_supplier:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items_based_on_default_supplier:
    get:
      parameters:
        - name: supplier
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: supplier
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_material_requests_based_on_supplier:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_supplier_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_supplier_quotation:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/raise_work_orders:
    get:
      parameters:
        - name: material_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: material_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_in_transit_stock_entry:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: in_transit_warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: in_transit_warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_supplier_email_preview:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: supplier
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: supplier
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_supplier_emails:
    get:
      parameters:
        - name: rfq_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: rfq_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_supplier_quotation_from_rfq:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: for_supplier
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: for_supplier
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_supplier_quotation:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pdf:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: supplier
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: supplier
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_from_material_requests_based_on_supplier:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_supplier_tag:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_rfq_containing_supplier:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_row_size_utilization:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_roles_and_doctypes:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_permissions:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: permlevel
          in: path
          required: true
          schema:
            type: string
        - name: ptype
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: if_owner
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: permlevel
          in: path
          required: true
          schema:
            type: string
        - name: ptype
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: if_owner
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_users_with_role:
    get:
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_standard_permissions:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/associate_job_opening:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: job_opening
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: job_opening
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_job_opening:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_avg_time_to_fill:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: department
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: department
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_employee:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_offer_acceptance_rate:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: department
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: department
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_warehouse_details:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_asset_values:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_target_item_details:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_target_asset_details:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_consumed_stock_item_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_warehouse_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_consumed_asset_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_service_item_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items_tagged_to_wip_composite_asset:
    get:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/check_duplicate_fiscal_year:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/auto_create_fiscal_year:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_invoiced_item_gross_margin:
    get:
      parameters:
        - name: sales_invoice
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: with_item_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: sales_invoice
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: with_item_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_period_date_ranges:
    get:
      parameters:
        - name: period
          in: path
          required: true
          schema:
            type: string
        - name: fiscal_year
          in: path
          required: true
          schema:
            type: string
        - name: year_start_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: period
          in: path
          required: true
          schema:
            type: string
        - name: fiscal_year
          in: path
          required: true
          schema:
            type: string
        - name: year_start_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_bulk_attendance:
    get:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_unmarked_days:
    get:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: exclude_holidays
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: exclude_holidays
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/process_auto_attendance:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_progress:
    get:
      parameters:
        - name: progress
          in: path
          required: true
          schema:
            type: string
        - name: goal
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: progress
          in: path
          required: true
          schema:
            type: string
        - name: goal
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_tree_node:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/login_via_token:
    get:
      parameters:
        - name: login_token
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: login_token
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_login_link:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/login_via_key:
    get:
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/assign_salary_structure:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: branch
          in: path
          required: true
          schema:
            type: string
        - name: grade
          in: path
          required: true
          schema:
            type: string
        - name: department
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: payroll_payable_account
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: base
          in: path
          required: true
          schema:
            type: string
        - name: variable
          in: path
          required: true
          schema:
            type: string
        - name: income_tax_slab
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: branch
          in: path
          required: true
          schema:
            type: string
        - name: grade
          in: path
          required: true
          schema:
            type: string
        - name: department
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: payroll_payable_account
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: base
          in: path
          required: true
          schema:
            type: string
        - name: variable
          in: path
          required: true
          schema:
            type: string
        - name: income_tax_slab
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_salary_slip:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: as_print
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: for_preview
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: employee
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: as_print
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: for_preview
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_employees:
    get:
      parameters:
        - name: training_event
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: training_event
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_salary_component:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_job_applicant:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_additional_salary:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/calculate_next_due_date:
    get:
      parameters:
        - name: periodicity
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: end_date
          in: path
          required: true
          schema:
            type: string
        - name: last_completion_date
          in: path
          required: true
          schema:
            type: string
        - name: next_due_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: periodicity
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: end_date
          in: path
          required: true
          schema:
            type: string
        - name: last_completion_date
          in: path
          required: true
          schema:
            type: string
        - name: next_due_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_team_members:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_maintenance_log:
    get:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: asset_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/assign_agent:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: agent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: agent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_last_communication:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/new_comment:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: content
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reply_via_agent:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: message
          in: path
          required: true
          schema:
            type: string
        - name: cc
          in: path
          required: true
          schema:
            type: string
        - name: bcc
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: message
          in: path
          required: true
          schema:
            type: string
        - name: cc
          in: path
          required: true
          schema:
            type: string
        - name: bcc
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_communication_via_contact:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: message
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: message
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_seen:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_assignees:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_session_default_values:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/set_session_default_values:
    get:
      parameters:
        - name: default_values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: default_values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contract_template:
    get:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/submit_cancel_or_update_docs:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/restore:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: alert
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: alert
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_restore:
    get:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_bank_account:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bank_account_details:
    get:
      parameters:
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_outstanding_reference_documents:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: validate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: validate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_account_details:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_company_defaults:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_reference_details:
    get:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: party_account_currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: party_account_currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_entry:
    get:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: party_amount
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
        - name: bank_amount
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: payment_type
          in: path
          required: true
          schema:
            type: string
        - name: reference_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: party_amount
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
        - name: bank_amount
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: payment_type
          in: path
          required: true
          schema:
            type: string
        - name: reference_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_and_account_balance:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: paid_from
          in: path
          required: true
          schema:
            type: string
        - name: paid_to
          in: path
          required: true
          schema:
            type: string
        - name: ptype
          in: path
          required: true
          schema:
            type: string
        - name: pty
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: paid_from
          in: path
          required: true
          schema:
            type: string
        - name: paid_to
          in: path
          required: true
          schema:
            type: string
        - name: ptype
          in: path
          required: true
          schema:
            type: string
        - name: pty
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_payment_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_template:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/upload:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_users_for_project:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_cost_center_name:
    get:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_duplicate_project:
    get:
      parameters:
        - name: prev_doc
          in: path
          required: true
          schema:
            type: string
        - name: project_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: prev_doc
          in: path
          required: true
          schema:
            type: string
        - name: project_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_kanban_board_if_not_exists:
    get:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_project_status:
    get:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/recalculate_project_total_purchase_cost:
    get:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_employee_attendance:
    get:
      parameters:
        - name: employee_list
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: late_entry
          in: path
          required: true
          schema:
            type: string
        - name: early_exit
          in: path
          required: true
          schema:
            type: string
        - name: shift
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: employee_list
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: leave_type
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: late_entry
          in: path
          required: true
          schema:
            type: string
        - name: early_exit
          in: path
          required: true
          schema:
            type: string
        - name: shift
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_onboarding_details:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: parenttype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: parenttype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/check_if_child_exists:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_project:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_timesheet:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_multiple_tasks:
    get:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_maintenance_tasks:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/new_todo:
    get:
      parameters:
        - name: description
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: description
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unsubscribe:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/retry_sending:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_retry:
    get:
      parameters:
        - name: queues
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: queues
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_now:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/toggle_sending:
    get:
      parameters:
        - name: enable
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: enable
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/clear_error_logs:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/fetch_to_customize:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_customization:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_to_defaults:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_layout:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_years:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_file_picker_settings:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_print_settings_to_show:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_default:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_custom_format:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: based_on
          in: path
          required: true
          schema:
            type: string
        - name: beta
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: based_on
          in: path
          required: true
          schema:
            type: string
        - name: beta
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/preview_welcome_url:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/import_from:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_subscribers:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: email_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: email_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_sending_status:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_test_email:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/find_broken_links:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/subscribe:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: email_group
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: email_group
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/confirm_subscription:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: email_group
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: email_group
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/newsletter_email_read:
    get:
      parameters:
        - name: recipient_email
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: recipient_email
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_opportunities:
    get:
      parameters:
        - name: prospect
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: prospect
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_email_template:
    get:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_supplier_group_details:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_supplier_primary_contact:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/callback:
    get:
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: error
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: error
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/authorize_access:
    get:
      parameters:
        - name: reauthorize
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reauthorize
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/sync:
    get:
      parameters:
        - name: g_calendar
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: g_calendar
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_subcontracting_boms_for_finished_goods:
    get:
      parameters:
        - name: fg_items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: fg_items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_subcontracting_boms_for_service_item:
    get:
      parameters:
        - name: service_item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: service_item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_last_purchase_rate:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/close_or_unclose_purchase_orders:
    get:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_purchase_invoice_from_portal:
    get:
      parameters:
        - name: purchase_order_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: purchase_order_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_inter_company_sales_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_subcontracting_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
        - name: submit
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
        - name: submit
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_subcontracting_order_created:
    get:
      parameters:
        - name: po_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: po_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_preview_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_entry_for_employee:
    get:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: party_amount
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
        - name: bank_amount
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: party_amount
          in: path
          required: true
          schema:
            type: string
        - name: bank_account
          in: path
          required: true
          schema:
            type: string
        - name: bank_amount
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_payment_reference_details:
    get:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: party_account_currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: party_account_currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_reference_details_for_employee:
    get:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: party_account_currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
        - name: party_account_currency
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_stock_balance_for:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: with_valuation_rate
          in: path
          required: true
          schema:
            type: string
        - name: inventory_dimensions_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: with_valuation_rate
          in: path
          required: true
          schema:
            type: string
        - name: inventory_dimensions_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_difference_account:
    get:
      parameters:
        - name: purpose
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: purpose
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_stock_and_rate:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_items_for_stock_in:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/move_sample_to_retention_warehouse:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_stock_in_entry:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_work_order_details:
    get:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: work_order
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_uom_details:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: uom
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: uom
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_expired_batch_items:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/validate_sample_quantity:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: sample_quantity
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: sample_quantity
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_items_from_subcontract_order:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_allocations_from_payment:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/doc_has_references:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_linked_payments_for_doc:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_unreconcile_doc_for_selection:
    get:
      parameters:
        - name: selections
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: selections
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_dunning_letter_text:
    get:
      parameters:
        - name: dunning_type
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: dunning_type
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_payment_entries:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_doctypes_for_bank_reconciliation:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/unclear_reference_payment:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: bt_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: bt_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_plan_rate:
    get:
      parameters:
        - name: plan
          in: path
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          required: true
          schema:
            type: string
        - name: customer
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: end_date
          in: path
          required: true
          schema:
            type: string
        - name: prorate_factor
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: plan
          in: path
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          required: true
          schema:
            type: string
        - name: customer
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: path
          required: true
          schema:
            type: string
        - name: end_date
          in: path
          required: true
          schema:
            type: string
        - name: prorate_factor
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_payment_request:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_print_format_list:
    get:
      parameters:
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/resend_payment_email:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_payment_entry:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_subscription_details:
    get:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_outstanding_statements:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_journal_entry:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_account_and_amount:
    get:
      parameters:
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ref_document
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: ref_doctype
          in: path
          required: true
          schema:
            type: string
        - name: ref_document
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_link_token:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_plaid_configuration:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/add_institution:
    get:
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
        - name: response
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
        - name: response
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_bank_accounts:
    get:
      parameters:
        - name: response
          in: path
          required: true
          schema:
            type: string
        - name: bank
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: response
          in: path
          required: true
          schema:
            type: string
        - name: bank
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/enqueue_synchronization:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_link_token_for_update:
    get:
      parameters:
        - name: access_token
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: access_token
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_bank_account_ids:
    get:
      parameters:
        - name: response
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: response
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_party_type:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/google_callback:
    get:
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_applicable_interviewers:
    get:
      parameters:
        - name: interview
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: interview
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_funnel_data:
    get:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_opp_by_lead_source:
    get:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pipeline_data:
    get:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_all_nodes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: tree_method
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: tree_method
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_terms_and_conditions:
    get:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_proceed_with_frequency_change:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_party_details:
    get:
      parameters:
        - name: party_details
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party_details
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_e_waybill_json:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_update_transporter_in_docs:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/enqueue_bulk_e_waybill_generation:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_e_waybill:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel_e_waybill:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_vehicle_info:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_transporter:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/extend_validity:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
        - name: scheduled
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
        - name: scheduled
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/schedule_ewaybill_for_extension:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
        - name: scheduled_time
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
        - name: scheduled_time
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/fetch_e_waybill_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: attach
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: attach
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/find_matching_e_waybill:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: e_waybill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: e_waybill_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_e_waybill_as_generated:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_e_waybill_as_cancelled:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_valid_and_invalid_e_waybill_log:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_source_destination_address:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: address_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: address_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/enqueue_bulk_e_invoice_generation:
    get:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_e_invoice:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: throw
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: throw
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel_e_invoice:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_e_invoice_as_cancelled:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_hd_agent:
    get:
      parameters:
        - name: first_name
          in: path
          required: true
          schema:
            type: string
        - name: last_name
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: signature
          in: path
          required: true
          schema:
            type: string
        - name: team
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: first_name
          in: path
          required: true
          schema:
            type: string
        - name: last_name
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: signature
          in: path
          required: true
          schema:
            type: string
        - name: team
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rename_self:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: new_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: new_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/fetch_latest_backups:
    get:
      parameters:
        - name: partial
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: partial
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_backup_encryption_key:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/take_backup:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_members_and_resources:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search_team_members:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search_team_resources:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resource_type
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resource_type
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_team_member:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_team_members:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: users
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: users
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_team_member:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_team_resource:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resource
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resource
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_team_resources:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resources
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resources
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_team_resource:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resource
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: resource
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_team:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_teams:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/add_new_team:
    get:
      parameters:
        - name: team_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: team_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_shipping_address:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: address
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: address
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_google_fonts:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_downtime:
    get:
      parameters:
        - name: failure_date
          in: path
          required: true
          schema:
            type: string
        - name: completion_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: failure_date
          in: path
          required: true
          schema:
            type: string
        - name: completion_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_observation_details:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/edit_observation:
    get:
      parameters:
        - name: observation
          in: path
          required: true
          schema:
            type: string
        - name: data_type
          in: path
          required: true
          schema:
            type: string
        - name: result
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: observation
          in: path
          required: true
          schema:
            type: string
        - name: data_type
          in: path
          required: true
          schema:
            type: string
        - name: result
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_observation:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/record_observation_result:
    get:
      parameters:
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: values
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_observation_result_template:
    get:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: observation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template_name
          in: path
          required: true
          schema:
            type: string
        - name: observation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_observation_status:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_sms_text:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_nursing_tasks_from_template:
    get:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: start_time
          in: path
          required: true
          schema:
            type: string
        - name: post_event
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: start_time
          in: path
          required: true
          schema:
            type: string
        - name: post_event
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_request_status:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: request
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: request
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/change_item_code_from_template:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_observation:
    get:
      parameters:
        - name: selected
          in: path
          required: true
          schema:
            type: string
        - name: sample_collection
          in: path
          required: true
          schema:
            type: string
        - name: component_observations
          in: path
          required: true
          schema:
            type: string
        - name: child_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: selected
          in: path
          required: true
          schema:
            type: string
        - name: sample_collection
          in: path
          required: true
          schema:
            type: string
        - name: component_observations
          in: path
          required: true
          schema:
            type: string
        - name: child_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_service_request_status:
    get:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_clinical_procedure:
    get:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_lab_test:
    get:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_therapy_session:
    get:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_observation:
    get:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: service_request
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_multiple:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_employee_by_user_id:
    get:
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_lab_test_prescribed:
    get:
      parameters:
        - name: patient
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: patient
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_healthcare_services_to_invoice:
    get:
      parameters:
        - name: patient
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: patient
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_appointment_billing_item_and_rate:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_drugs_to_invoice:
    get:
      parameters:
        - name: encounter
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: encounter
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_patient_vitals:
    get:
      parameters:
        - name: patient
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: patient
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/render_docs_as_html:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/render_doc_as_html:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: exclude_fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: exclude_fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_medical_codes:
    get:
      parameters:
        - name: template_dt
          in: path
          required: true
          schema:
            type: string
        - name: template_dn
          in: path
          required: true
          schema:
            type: string
        - name: code_standard
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template_dt
          in: path
          required: true
          schema:
            type: string
        - name: template_dn
          in: path
          required: true
          schema:
            type: string
        - name: code_standard
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_barcodes:
    get:
      parameters:
        - name: in_val
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: in_val
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/resource/Copilot Settings:
    post:
      summary: Create a new Copilot Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Copilot Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Copilot Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    get:
      summary: Get a list of Copilot Settingss
      description: Returns a list of Copilot Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Copilot Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Copilot Settings/{DocumentName}':
    get:
      summary: Get a list of Webhooks
      description: Returns a list of Webhooks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Copilot Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Copilot Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Copilot Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Copilot Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Webhook: null
      tags:
        - DocTypes
    post:
      summary: Create a new Webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Webhook created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Webhook/{DocumentName}':
    get:
      summary: Get a list of Auto Email Reports
      description: Returns a list of Auto Email Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Auto Email Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Webhook
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Webhook you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Auto Email Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Auto Email Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Auto Email Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Email Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Auto Email Report/{DocumentName}':
    get:
      summary: Get a list of Recorders
      description: Returns a list of Recorders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Recorder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Email Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Auto Email Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Auto Email Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Auto Email Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Recorder: null
      tags:
        - DocTypes
    post:
      summary: Create a new Recorder
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Recorder created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Recorder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Recorder/{DocumentName}':
    get:
      summary: Get a list of Data Imports
      description: Returns a list of Data Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Data Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Recorder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Recorder
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Recorder you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Recorder
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Data Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Data Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Data Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Data Import/{DocumentName}':
    get:
      summary: Get a list of Blog Settingss
      description: Returns a list of Blog Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blog Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Data Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Data Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Data Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blog Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blog Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blog Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blog Settings/{DocumentName}':
    get:
      summary: Get a list of Newsletters
      description: Returns a list of Newsletters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Newsletter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blog Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blog Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blog Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Newsletter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Newsletter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Newsletter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Newsletter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Newsletter/{DocumentName}':
    get:
      summary: Get a list of Currencys
      description: Returns a list of Currencys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Currency'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Newsletter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Newsletter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Newsletter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Newsletter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Currency: null
      tags:
        - DocTypes
    post:
      summary: Create a new Currency
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Currency created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Currency/{DocumentName}':
    get:
      summary: Get a list of System Settingss
      description: Returns a list of System Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/System Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Currency
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Currency you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Currency
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/System Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new System Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: System Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/System Settings/{DocumentName}':
    get:
      summary: Get a list of Insights Querys
      description: Returns a list of Insights Querys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Query'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific System Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the System Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified System Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Query: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Query
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Query created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Query/{DocumentName}':
    get:
      summary: Get a list of Insights Query Results
      description: Returns a list of Insights Query Results
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Query Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Query
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Query you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Query
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Query Result: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Query Result
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Query Result created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Query Result/{DocumentName}':
    get:
      summary: Get a list of Bins
      description: Returns a list of Bins
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Query Result
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Query Result you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Query Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bin: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bin
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bin created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bin/{DocumentName}':
    get:
      summary: Get a list of Google Settingss
      description: Returns a list of Google Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bin
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bin you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Settings/{DocumentName}':
    get:
      summary: Get a list of Assets
      description: Returns a list of Assets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset/{DocumentName}':
    get:
      summary: Get a list of Subscription Plans
      description: Returns a list of Subscription Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subscription Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subscription Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subscription Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subscription Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subscription Plan/{DocumentName}':
    get:
      summary: Get a list of RQ Jobs
      description: Returns a list of RQ Jobs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/RQ Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subscription Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subscription Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subscription Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/RQ Job: null
      tags:
        - DocTypes
    post:
      summary: Create a new RQ Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: RQ Job created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/RQ Job/{DocumentName}':
    get:
      summary: Get a list of RQ Workers
      description: Returns a list of RQ Workers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/RQ Worker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific RQ Job
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the RQ Job you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified RQ Job
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/RQ Worker: null
      tags:
        - DocTypes
    post:
      summary: Create a new RQ Worker
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: RQ Worker created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Worker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/RQ Worker/{DocumentName}':
    get:
      summary: Get a list of Buying Settingss
      description: Returns a list of Buying Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Buying Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Worker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific RQ Worker
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the RQ Worker you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified RQ Worker
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Buying Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Buying Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Buying Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Buying Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Buying Settings/{DocumentName}':
    get:
      summary: Get a list of Stock Entrys
      description: Returns a list of Stock Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Buying Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Buying Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Buying Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Buying Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Entry/{DocumentName}':
    get:
      summary: Get a list of Full and Final Statements
      description: Returns a list of Full and Final Statements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Full and Final Statement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Full and Final Statement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Full and Final Statement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Full and Final Statement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Full and Final Statement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Full and Final Statement/{DocumentName}':
    get:
      summary: Get a list of Permission Inspectors
      description: Returns a list of Permission Inspectors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Permission Inspector'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Full and Final Statement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Full and Final Statement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Full and Final Statement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Full and Final Statement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Permission Inspector: null
      tags:
        - DocTypes
    post:
      summary: Create a new Permission Inspector
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Permission Inspector created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Permission Inspector'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Permission Inspector/{DocumentName}':
    get:
      summary: Get a list of Items
      description: Returns a list of Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Permission Inspector'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Permission Inspector
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Permission Inspector you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Permission Inspector
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item/{DocumentName}':
    get:
      summary: Get a list of Asset Depreciation Schedules
      description: Returns a list of Asset Depreciation Schedules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Depreciation Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Depreciation Schedule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Depreciation Schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Depreciation Schedule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Depreciation Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Depreciation Schedule/{DocumentName}':
    get:
      summary: Get a list of Projects
      description: Returns a list of Projects
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Depreciation Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Depreciation Schedule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Depreciation Schedule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Depreciation Schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project/{DocumentName}':
    get:
      summary: Get a list of Tasks
      description: Returns a list of Tasks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Task: null
      tags:
        - DocTypes
    post:
      summary: Create a new Task
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Task/{DocumentName}':
    get:
      summary: Get a list of Website Settingss
      description: Returns a list of Website Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Task
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Task you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Task
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Settings/{DocumentName}':
    get:
      summary: Get a list of Subcontracting Orders
      description: Returns a list of Subcontracting Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subcontracting Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subcontracting Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subcontracting Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subcontracting Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subcontracting Order/{DocumentName}':
    get:
      summary: Get a list of Employees
      description: Returns a list of Employees
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subcontracting Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subcontracting Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subcontracting Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee/{DocumentName}':
    get:
      summary: Get a list of Job Openings
      description: Returns a list of Job Openings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Opening'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Opening: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Opening
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Opening created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Opening'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Opening/{DocumentName}':
    get:
      summary: Get a list of Help Articles
      description: Returns a list of Help Articles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Help Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Opening'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Opening
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Opening you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Opening
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Help Article: null
      tags:
        - DocTypes
    post:
      summary: Create a new Help Article
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Help Article created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Help Article/{DocumentName}':
    get:
      summary: Get a list of Interview Feedbacks
      description: Returns a list of Interview Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Help Article
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Help Article you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Help Article
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview Feedback/{DocumentName}':
    get:
      summary: Get a list of Interviews
      description: Returns a list of Interviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview/{DocumentName}':
    get:
      summary: Get a list of Job Offer Term Templates
      description: Returns a list of Job Offer Term Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Offer Term Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Offer Term Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Offer Term Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Offer Term Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Offer Term Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Offer Term Template/{DocumentName}':
    get:
      summary: Get a list of HR Settingss
      description: Returns a list of HR Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HR Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Offer Term Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Offer Term Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Offer Term Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Offer Term Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HR Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new HR Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HR Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HR Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HR Settings/{DocumentName}':
    get:
      summary: Get a list of Subscriptions
      description: Returns a list of Subscriptions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HR Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HR Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HR Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HR Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subscription: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subscription
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subscription created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subscription/{DocumentName}':
    get:
      summary: Get a list of Manufacturing Settingss
      description: Returns a list of Manufacturing Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Manufacturing Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subscription
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subscription you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subscription
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Manufacturing Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Manufacturing Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Manufacturing Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturing Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Manufacturing Settings/{DocumentName}':
    get:
      summary: Get a list of Cashier Closings
      description: Returns a list of Cashier Closings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cashier Closing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturing Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Manufacturing Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Manufacturing Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Manufacturing Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cashier Closing: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cashier Closing
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cashier Closing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cashier Closing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cashier Closing/{DocumentName}':
    get:
      summary: Get a list of Customers
      description: Returns a list of Customers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cashier Closing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cashier Closing
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cashier Closing you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cashier Closing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customer/{DocumentName}':
    get:
      summary: Get a list of BOMs
      description: Returns a list of BOMs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM/{DocumentName}':
    get:
      summary: Get a list of Production Plans
      description: Returns a list of Production Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Production Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Production Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Production Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Production Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Production Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Production Plan/{DocumentName}':
    get:
      summary: Get a list of Letter Heads
      description: Returns a list of Letter Heads
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Letter Head'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Production Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Production Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Production Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Production Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Letter Head: null
      tags:
        - DocTypes
    post:
      summary: Create a new Letter Head
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Letter Head created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Letter Head'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Letter Head/{DocumentName}':
    get:
      summary: Get a list of Purchase Receipts
      description: Returns a list of Purchase Receipts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Letter Head'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Letter Head
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Letter Head you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Letter Head
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Receipt: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Receipt
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Receipt created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Receipt/{DocumentName}':
    get:
      summary: Get a list of Delivery Notes
      description: Returns a list of Delivery Notes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Delivery Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Receipt
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Receipt you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Delivery Note: null
      tags:
        - DocTypes
    post:
      summary: Create a new Delivery Note
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Delivery Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Delivery Note/{DocumentName}':
    get:
      summary: Get a list of GL Entrys
      description: Returns a list of GL Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/GL Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Delivery Note
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Delivery Note you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Delivery Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/GL Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new GL Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: GL Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GL Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/GL Entry/{DocumentName}':
    get:
      summary: Get a list of Process Statement Of Accountss
      description: Returns a list of Process Statement Of Accountss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Statement Of Accounts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GL Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific GL Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the GL Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified GL Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Statement Of Accounts: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Statement Of Accounts
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Statement Of Accounts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Statement Of Accounts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Statement Of Accounts/{DocumentName}':
    get:
      summary: Get a list of Serial Nos
      description: Returns a list of Serial Nos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Serial No'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Statement Of Accounts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Statement Of Accounts
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Statement Of Accounts you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Statement Of Accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Serial No: null
      tags:
        - DocTypes
    post:
      summary: Create a new Serial No
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Serial No created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Serial No'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Serial No/{DocumentName}':
    get:
      summary: Get a list of Salary Structures
      description: Returns a list of Salary Structures
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Structure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Serial No'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Serial No
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Serial No you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Serial No
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Structure: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Structure
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Structure created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Structure/{DocumentName}':
    get:
      summary: Get a list of Files
      description: Returns a list of Files
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/File'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Structure
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Structure you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/File: null
      tags:
        - DocTypes
    post:
      summary: Create a new File
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: File created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/File'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/File/{DocumentName}':
    get:
      summary: Get a list of Notes
      description: Returns a list of Notes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/File'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific File
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the File you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified File
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Note: null
      tags:
        - DocTypes
    post:
      summary: Create a new Note
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Note/{DocumentName}':
    get:
      summary: Get a list of Pages
      description: Returns a list of Pages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Note
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Note you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Page: null
      tags:
        - DocTypes
    post:
      summary: Create a new Page
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Page created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Page/{DocumentName}':
    get:
      summary: Get a list of Roles
      description: Returns a list of Roles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Page
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Page you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Role: null
      tags:
        - DocTypes
    post:
      summary: Create a new Role
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Role created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Role/{DocumentName}':
    get:
      summary: Get a list of Contacts
      description: Returns a list of Contacts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Role
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Role you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contact: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contact created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contact/{DocumentName}':
    get:
      summary: Get a list of Versions
      description: Returns a list of Versions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Version'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contact
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contact you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Version: null
      tags:
        - DocTypes
    post:
      summary: Create a new Version
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Version created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Version'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Version/{DocumentName}':
    get:
      summary: Get a list of Web Pages
      description: Returns a list of Web Pages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Version'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Version
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Version you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Version
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Page: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Page
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Page created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Page/{DocumentName}':
    get:
      summary: Get a list of Workflows
      description: Returns a list of Workflows
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Page
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Page you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow/{DocumentName}':
    get:
      summary: Get a list of Error Logs
      description: Returns a list of Error Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Error Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Error Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Error Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Error Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Error Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Error Log/{DocumentName}':
    get:
      summary: Get a list of Milestones
      description: Returns a list of Milestones
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Milestone'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Error Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Error Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Error Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Error Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Milestone: null
      tags:
        - DocTypes
    post:
      summary: Create a new Milestone
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Milestone created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Milestone/{DocumentName}':
    get:
      summary: Get a list of Module Defs
      description: Returns a list of Module Defs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Module Def'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Milestone
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Milestone you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Milestone
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Module Def: null
      tags:
        - DocTypes
    post:
      summary: Create a new Module Def
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Module Def created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Def'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Module Def/{DocumentName}':
    get:
      summary: Get a list of Custom Fields
      description: Returns a list of Custom Fields
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom Field'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Def'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Module Def
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Module Def you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Module Def
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom Field: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom Field
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom Field created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Field'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom Field/{DocumentName}':
    get:
      summary: Get a list of Google Drives
      description: Returns a list of Google Drives
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Drive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Field'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom Field
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom Field you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom Field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Drive: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Drive
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Drive created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Drive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Drive/{DocumentName}':
    get:
      summary: Get a list of Client Scripts
      description: Returns a list of Client Scripts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Client Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Drive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Drive
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Drive you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Drive
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Client Script: null
      tags:
        - DocTypes
    post:
      summary: Create a new Client Script
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Client Script created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Client Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Client Script/{DocumentName}':
    get:
      summary: Get a list of Workflow States
      description: Returns a list of Workflow States
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow State'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Client Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Client Script
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Client Script you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Client Script
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow State: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow State
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow State created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow State'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow State/{DocumentName}':
    get:
      summary: Get a list of Google Contactss
      description: Returns a list of Google Contactss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Contacts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow State'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow State
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow State you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow State
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Contacts: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Contacts
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Contacts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Contacts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Contacts/{DocumentName}':
    get:
      summary: Get a list of Milestone Trackers
      description: Returns a list of Milestone Trackers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Milestone Tracker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Contacts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Contacts
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Contacts you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Milestone Tracker: null
      tags:
        - DocTypes
    post:
      summary: Create a new Milestone Tracker
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Milestone Tracker created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone Tracker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Milestone Tracker/{DocumentName}':
    get:
      summary: Get a list of Serial and Batch Bundles
      description: Returns a list of Serial and Batch Bundles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Serial and Batch Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone Tracker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Milestone Tracker
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Milestone Tracker you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Milestone Tracker
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Serial and Batch Bundle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Serial and Batch Bundle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Serial and Batch Bundle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Serial and Batch Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Serial and Batch Bundle/{DocumentName}':
    get:
      summary: Get a list of Route Historys
      description: Returns a list of Route Historys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Route History'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Serial and Batch Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Serial and Batch Bundle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Serial and Batch Bundle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Serial and Batch Bundle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Route History: null
      tags:
        - DocTypes
    post:
      summary: Create a new Route History
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Route History created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Route History'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Route History/{DocumentName}':
    get:
      summary: Get a list of Leads
      description: Returns a list of Leads
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lead'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Route History'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Route History
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Route History you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Route History
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lead: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lead
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lead created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lead/{DocumentName}':
    get:
      summary: Get a list of DocTypes
      description: Returns a list of DocTypes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DocType'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lead
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lead you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lead
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DocType: null
      tags:
        - DocTypes
    post:
      summary: Create a new DocType
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DocType created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DocType/{DocumentName}':
    get:
      summary: Get a list of Customize Forms
      description: Returns a list of Customize Forms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customize Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DocType
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DocType you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DocType
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customize Form: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customize Form
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customize Form created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customize Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customize Form/{DocumentName}':
    get:
      summary: Get a list of Notification Settingss
      description: Returns a list of Notification Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Notification Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customize Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customize Form
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customize Form you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customize Form
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Notification Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Notification Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Notification Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Notification Settings/{DocumentName}':
    get:
      summary: Get a list of Expense Claims
      description: Returns a list of Expense Claims
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Expense Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Notification Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Notification Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Notification Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Expense Claim: null
      tags:
        - DocTypes
    post:
      summary: Create a new Expense Claim
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Expense Claim created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Expense Claim/{DocumentName}':
    get:
      summary: Get a list of Purchase Invoices
      description: Returns a list of Purchase Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Expense Claim
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Expense Claim you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Expense Claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Invoice/{DocumentName}':
    get:
      summary: Get a list of Asset Shift Allocations
      description: Returns a list of Asset Shift Allocations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Shift Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Shift Allocation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Shift Allocation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Shift Allocation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Shift Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Shift Allocation/{DocumentName}':
    get:
      summary: Get a list of Asset Shift Factors
      description: Returns a list of Asset Shift Factors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Shift Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Shift Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Shift Allocation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Shift Allocation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Shift Allocation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Shift Factor: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Shift Factor
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Shift Factor created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Shift Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Shift Factor/{DocumentName}':
    get:
      summary: Get a list of Warranty Claims
      description: Returns a list of Warranty Claims
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Warranty Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Shift Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Shift Factor
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Shift Factor you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Shift Factor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Warranty Claim: null
      tags:
        - DocTypes
    post:
      summary: Create a new Warranty Claim
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Warranty Claim created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warranty Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Warranty Claim/{DocumentName}':
    get:
      summary: Get a list of Employee Grievances
      description: Returns a list of Employee Grievances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Grievance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warranty Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Warranty Claim
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Warranty Claim you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Warranty Claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Grievance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Grievance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Grievance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grievance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Grievance/{DocumentName}':
    get:
      summary: Get a list of Grievance Types
      description: Returns a list of Grievance Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Grievance Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grievance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Grievance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Grievance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Grievance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Grievance Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Grievance Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Grievance Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Grievance Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Grievance Type/{DocumentName}':
    get:
      summary: Get a list of Communications
      description: Returns a list of Communications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Communication'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Grievance Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Grievance Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Grievance Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Grievance Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Communication: null
      tags:
        - DocTypes
    post:
      summary: Create a new Communication
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Communication created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Communication/{DocumentName}':
    get:
      summary: Get a list of Leave Applications
      description: Returns a list of Leave Applications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Communication
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Communication you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Communication
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Application: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Application
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Application created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Application/{DocumentName}':
    get:
      summary: Get a list of Email Group Members
      description: Returns a list of Email Group Members
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Group Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Application
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Application you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Application
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Group Member: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Group Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Group Member created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Group Member/{DocumentName}':
    get:
      summary: Get a list of Email Groups
      description: Returns a list of Email Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Group Member
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Group Member you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Group Member
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Group/{DocumentName}':
    get:
      summary: Get a list of Competitors
      description: Returns a list of Competitors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Competitor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Competitor: null
      tags:
        - DocTypes
    post:
      summary: Create a new Competitor
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Competitor created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Competitor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Competitor/{DocumentName}':
    get:
      summary: Get a list of Quotation Lost Reasons
      description: Returns a list of Quotation Lost Reasons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quotation Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Competitor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Competitor
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Competitor you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Competitor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quotation Lost Reason: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quotation Lost Reason
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quotation Lost Reason created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quotation Lost Reason/{DocumentName}':
    get:
      summary: Get a list of Sales Invoices
      description: Returns a list of Sales Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quotation Lost Reason
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quotation Lost Reason you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quotation Lost Reason
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Invoice/{DocumentName}':
    get:
      summary: Get a list of Journal Entrys
      description: Returns a list of Journal Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Journal Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Journal Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Journal Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Journal Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Journal Entry/{DocumentName}':
    get:
      summary: Get a list of Payment Entrys
      description: Returns a list of Payment Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Journal Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Journal Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Journal Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Entry/{DocumentName}':
    get:
      summary: Get a list of Product Bundles
      description: Returns a list of Product Bundles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Product Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Product Bundle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Product Bundle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Product Bundle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Product Bundle/{DocumentName}':
    get:
      summary: Get a list of PWA Notifications
      description: Returns a list of PWA Notifications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/PWA Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Product Bundle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Product Bundle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Product Bundle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/PWA Notification: null
      tags:
        - DocTypes
    post:
      summary: Create a new PWA Notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: PWA Notification created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PWA Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/PWA Notification/{DocumentName}':
    get:
      summary: Get a list of Job Offers
      description: Returns a list of Job Offers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Offer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PWA Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific PWA Notification
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the PWA Notification you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified PWA Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Offer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Offer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Offer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Offer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Offer/{DocumentName}':
    get:
      summary: Get a list of Addresss
      description: Returns a list of Addresss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Offer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Offer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Offer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Offer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Address: null
      tags:
        - DocTypes
    post:
      summary: Create a new Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Address created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Address/{DocumentName}':
    get:
      summary: Get a list of POS Invoices
      description: Returns a list of POS Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Address
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Address you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Invoice/{DocumentName}':
    get:
      summary: Get a list of Supplier Quotations
      description: Returns a list of Supplier Quotations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Quotation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Quotation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Quotation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Quotation/{DocumentName}':
    get:
      summary: Get a list of Accounts Settingss
      description: Returns a list of Accounts Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounts Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Quotation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Quotation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Quotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounts Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounts Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounts Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounts Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounts Settings/{DocumentName}':
    get:
      summary: Get a list of Notification Logs
      description: Returns a list of Notification Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Notification Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounts Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounts Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounts Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounts Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Notification Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Notification Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Notification Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Notification Log/{DocumentName}':
    get:
      summary: Get a list of Bank Transactions
      description: Returns a list of Bank Transactions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Notification Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Notification Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Notification Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Transaction: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Transaction created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Transaction/{DocumentName}':
    get:
      summary: Get a list of Payment Reconciliations
      description: Returns a list of Payment Reconciliations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Transaction
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Transaction you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Reconciliation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Reconciliation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Reconciliation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Reconciliation/{DocumentName}':
    get:
      summary: Get a list of Leave Ledger Entrys
      description: Returns a list of Leave Ledger Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Reconciliation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Reconciliation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Reconciliation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Ledger Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Ledger Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Ledger Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Ledger Entry/{DocumentName}':
    get:
      summary: Get a list of Subcontracting Receipts
      description: Returns a list of Subcontracting Receipts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subcontracting Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Ledger Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Ledger Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Ledger Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subcontracting Receipt: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subcontracting Receipt
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subcontracting Receipt created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subcontracting Receipt/{DocumentName}':
    get:
      summary: Get a list of Stock Ledger Entrys
      description: Returns a list of Stock Ledger Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subcontracting Receipt
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subcontracting Receipt you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subcontracting Receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Ledger Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Ledger Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Ledger Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Ledger Entry/{DocumentName}':
    get:
      summary: Get a list of Bulk Transaction Logs
      description: Returns a list of Bulk Transaction Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bulk Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Ledger Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Ledger Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Ledger Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bulk Transaction Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bulk Transaction Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bulk Transaction Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bulk Transaction Log/{DocumentName}':
    get:
      summary: Get a list of Bulk Transaction Log Details
      description: Returns a list of Bulk Transaction Log Details
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bulk Transaction Log Detail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bulk Transaction Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bulk Transaction Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bulk Transaction Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bulk Transaction Log Detail: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bulk Transaction Log Detail
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bulk Transaction Log Detail created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Transaction Log Detail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bulk Transaction Log Detail/{DocumentName}':
    get:
      summary: Get a list of Number Cards
      description: Returns a list of Number Cards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Number Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Transaction Log Detail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bulk Transaction Log Detail
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bulk Transaction Log Detail you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bulk Transaction Log Detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Number Card: null
      tags:
        - DocTypes
    post:
      summary: Create a new Number Card
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Number Card created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Number Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Number Card/{DocumentName}':
    get:
      summary: Get a list of Batchs
      description: Returns a list of Batchs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Number Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Number Card
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Number Card you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Number Card
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Batch: null
      tags:
        - DocTypes
    post:
      summary: Create a new Batch
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Batch created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Batch/{DocumentName}':
    get:
      summary: Get a list of Salary Slips
      description: Returns a list of Salary Slips
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Batch
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Batch you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Batch
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Slip: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Slip
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Slip created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Slip/{DocumentName}':
    get:
      summary: Get a list of Repost Accounting Ledger Settingss
      description: Returns a list of Repost Accounting Ledger Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Accounting Ledger Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Slip
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Slip you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Slip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Accounting Ledger Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Accounting Ledger Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Accounting Ledger Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Accounting Ledger Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Accounting Ledger Settings/{DocumentName}':
    get:
      summary: Get a list of Request for Quotations
      description: Returns a list of Request for Quotations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Request for Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Accounting Ledger Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Accounting Ledger Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Accounting Ledger Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Accounting Ledger Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Request for Quotation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Request for Quotation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Request for Quotation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Request for Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Request for Quotation/{DocumentName}':
    get:
      summary: Get a list of Payment Ledger Entrys
      description: Returns a list of Payment Ledger Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Request for Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Request for Quotation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Request for Quotation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Request for Quotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Ledger Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Ledger Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Ledger Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Ledger Entry/{DocumentName}':
    get:
      summary: Get a list of Process Payment Reconciliation Logs
      description: Returns a list of Process Payment Reconciliation Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Payment Reconciliation Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Ledger Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Ledger Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Ledger Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Payment Reconciliation Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Payment Reconciliation Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Payment Reconciliation Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Payment Reconciliation Log/{DocumentName}':
    get:
      summary: Get a list of Stock Reposting Settingss
      description: Returns a list of Stock Reposting Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Reposting Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Payment Reconciliation Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Payment Reconciliation Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Payment Reconciliation Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Reposting Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Reposting Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Reposting Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reposting Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Reposting Settings/{DocumentName}':
    get:
      summary: Get a list of Payroll Settingss
      description: Returns a list of Payroll Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payroll Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reposting Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Reposting Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Reposting Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Reposting Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payroll Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payroll Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payroll Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payroll Settings/{DocumentName}':
    get:
      summary: Get a list of Selling Settingss
      description: Returns a list of Selling Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Selling Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payroll Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payroll Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payroll Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Selling Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Selling Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Selling Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Selling Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Selling Settings/{DocumentName}':
    get:
      summary: Get a list of Leave Encashments
      description: Returns a list of Leave Encashments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Encashment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Selling Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Selling Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Selling Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Selling Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Encashment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Encashment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Encashment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Encashment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Encashment/{DocumentName}':
    get:
      summary: Get a list of Leave Types
      description: Returns a list of Leave Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Encashment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Encashment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Encashment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Encashment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Type/{DocumentName}':
    get:
      summary: Get a list of Appraisals
      description: Returns a list of Appraisals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appraisal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appraisal: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appraisal
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appraisal created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appraisal/{DocumentName}':
    get:
      summary: Get a list of Suppliers
      description: Returns a list of Suppliers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appraisal
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appraisal you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appraisal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier/{DocumentName}':
    get:
      summary: Get a list of Stock Reservation Entrys
      description: Returns a list of Stock Reservation Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Reservation Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Reservation Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Reservation Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Reservation Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reservation Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Reservation Entry/{DocumentName}':
    get:
      summary: Get a list of Goals
      description: Returns a list of Goals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reservation Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Reservation Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Reservation Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Reservation Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Goal: null
      tags:
        - DocTypes
    post:
      summary: Create a new Goal
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Goal created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Goal/{DocumentName}':
    get:
      summary: Get a list of Sales Orders
      description: Returns a list of Sales Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Goal
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Goal you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Goal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Order/{DocumentName}':
    get:
      summary: Get a list of Stock Settingss
      description: Returns a list of Stock Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Settings/{DocumentName}':
    get:
      summary: Get a list of Social Login Keys
      description: Returns a list of Social Login Keys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Social Login Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Social Login Key: null
      tags:
        - DocTypes
    post:
      summary: Create a new Social Login Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Social Login Key created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Social Login Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Social Login Key/{DocumentName}':
    get:
      summary: Get a list of Scheduled Job Types
      description: Returns a list of Scheduled Job Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Scheduled Job Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Social Login Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Social Login Key
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Social Login Key you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Social Login Key
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Scheduled Job Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Scheduled Job Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Scheduled Job Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Scheduled Job Type/{DocumentName}':
    get:
      summary: Get a list of Server Scripts
      description: Returns a list of Server Scripts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Server Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Scheduled Job Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Scheduled Job Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Scheduled Job Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Server Script: null
      tags:
        - DocTypes
    post:
      summary: Create a new Server Script
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Server Script created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Server Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Server Script/{DocumentName}':
    get:
      summary: Get a list of Item Groups
      description: Returns a list of Item Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Server Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Server Script
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Server Script you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Server Script
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Group/{DocumentName}':
    get:
      summary: Get a list of Payroll Entrys
      description: Returns a list of Payroll Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payroll Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payroll Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payroll Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payroll Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payroll Entry/{DocumentName}':
    get:
      summary: Get a list of Web Forms
      description: Returns a list of Web Forms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payroll Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payroll Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payroll Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Form: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Form
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Form created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Form/{DocumentName}':
    get:
      summary: Get a list of Insights Tables
      description: Returns a list of Insights Tables
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Table'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Form
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Form you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Form
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Table: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Table
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Table created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Table'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Table/{DocumentName}':
    get:
      summary: Get a list of Employee Onboarding Templates
      description: Returns a list of Employee Onboarding Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Onboarding Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Table'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Table
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Table you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Table
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Onboarding Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Onboarding Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Onboarding Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Onboarding Template/{DocumentName}':
    get:
      summary: Get a list of Employee Separation Templates
      description: Returns a list of Employee Separation Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Separation Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Onboarding Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Onboarding Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Onboarding Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Separation Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Separation Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Separation Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Separation Template/{DocumentName}':
    get:
      summary: Get a list of Integration Requests
      description: Returns a list of Integration Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Integration Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Separation Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Separation Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Separation Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Integration Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Integration Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Integration Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Integration Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Integration Request/{DocumentName}':
    get:
      summary: Get a list of Inventory Dimensions
      description: Returns a list of Inventory Dimensions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Inventory Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Integration Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Integration Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Integration Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Integration Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Inventory Dimension: null
      tags:
        - DocTypes
    post:
      summary: Create a new Inventory Dimension
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Inventory Dimension created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Inventory Dimension/{DocumentName}':
    get:
      summary: Get a list of ToDos
      description: Returns a list of ToDos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/ToDo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Inventory Dimension
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Inventory Dimension you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Inventory Dimension
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/ToDo: null
      tags:
        - DocTypes
    post:
      summary: Create a new ToDo
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: ToDo created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ToDo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/ToDo/{DocumentName}':
    get:
      summary: Get a list of Currency Exchange Settingss
      description: Returns a list of Currency Exchange Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Currency Exchange Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ToDo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific ToDo
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the ToDo you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified ToDo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Currency Exchange Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Currency Exchange Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Currency Exchange Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Currency Exchange Settings/{DocumentName}':
    get:
      summary: Get a list of Audit Trails
      description: Returns a list of Audit Trails
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Audit Trail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Currency Exchange Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Currency Exchange Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Currency Exchange Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Audit Trail: null
      tags:
        - DocTypes
    post:
      summary: Create a new Audit Trail
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Audit Trail created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Audit Trail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Audit Trail/{DocumentName}':
    get:
      summary: Get a list of Asset Capitalizations
      description: Returns a list of Asset Capitalizations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Capitalization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Audit Trail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Audit Trail
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Audit Trail you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Audit Trail
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Capitalization: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Capitalization
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Capitalization created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Capitalization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Capitalization/{DocumentName}':
    get:
      summary: Get a list of Purchase Orders
      description: Returns a list of Purchase Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Capitalization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Capitalization
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Capitalization you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Capitalization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Order/{DocumentName}':
    get:
      summary: Get a list of Delivery Trips
      description: Returns a list of Delivery Trips
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Delivery Trip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Delivery Trip: null
      tags:
        - DocTypes
    post:
      summary: Create a new Delivery Trip
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Delivery Trip created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Trip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Delivery Trip/{DocumentName}':
    get:
      summary: Get a list of Asset Activitys
      description: Returns a list of Asset Activitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Trip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Delivery Trip
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Delivery Trip you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Delivery Trip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Activity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Activity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Activity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Activity/{DocumentName}':
    get:
      summary: Get a list of Leave Control Panels
      description: Returns a list of Leave Control Panels
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Control Panel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Activity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Activity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Activity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Control Panel: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Control Panel
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Control Panel created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Control Panel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Control Panel/{DocumentName}':
    get:
      summary: Get a list of GoCardless Mandates
      description: Returns a list of GoCardless Mandates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/GoCardless Mandate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Control Panel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Control Panel
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Control Panel you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Control Panel
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/GoCardless Mandate: null
      tags:
        - DocTypes
    post:
      summary: Create a new GoCardless Mandate
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: GoCardless Mandate created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Mandate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/GoCardless Mandate/{DocumentName}':
    get:
      summary: Get a list of Payment Requests
      description: Returns a list of Payment Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Mandate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific GoCardless Mandate
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the GoCardless Mandate you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified GoCardless Mandate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Request/{DocumentName}':
    get:
      summary: Get a list of Repost Payment Ledgers
      description: Returns a list of Repost Payment Ledgers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Payment Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Payment Ledger: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Payment Ledger
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Payment Ledger created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Payment Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Payment Ledger/{DocumentName}':
    get:
      summary: Get a list of Repost Accounting Ledgers
      description: Returns a list of Repost Accounting Ledgers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Accounting Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Payment Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Payment Ledger
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Payment Ledger you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Payment Ledger
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Accounting Ledger: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Accounting Ledger
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Accounting Ledger created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Accounting Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Accounting Ledger/{DocumentName}':
    get:
      summary: Get a list of Mpesa Settingss
      description: Returns a list of Mpesa Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Mpesa Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Accounting Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Accounting Ledger
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Accounting Ledger you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Accounting Ledger
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Mpesa Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Mpesa Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Mpesa Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mpesa Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Mpesa Settings/{DocumentName}':
    get:
      summary: Get a list of Bank Accounts
      description: Returns a list of Bank Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mpesa Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Mpesa Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Mpesa Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Mpesa Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Account/{DocumentName}':
    get:
      summary: Get a list of GoCardless Settingss
      description: Returns a list of GoCardless Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/GoCardless Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/GoCardless Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new GoCardless Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: GoCardless Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/GoCardless Settings/{DocumentName}':
    get:
      summary: Get a list of Console Logs
      description: Returns a list of Console Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Console Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific GoCardless Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the GoCardless Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified GoCardless Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Console Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Console Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Console Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Console Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Console Log/{DocumentName}':
    get:
      summary: Get a list of Users
      description: Returns a list of Users
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Console Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Console Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Console Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Console Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User: null
      tags:
        - DocTypes
    post:
      summary: Create a new User
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User/{DocumentName}':
    get:
      summary: Get a list of Interview Rounds
      description: Returns a list of Interview Rounds
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview Round'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview Round: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview Round
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview Round created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Round'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview Round/{DocumentName}':
    get:
      summary: Get a list of Dashboard Charts
      description: Returns a list of Dashboard Charts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Round'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview Round
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview Round you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview Round
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard Chart: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard Chart
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard Chart created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard Chart/{DocumentName}':
    get:
      summary: Get a list of Process Subscriptions
      description: Returns a list of Process Subscriptions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard Chart
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard Chart you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard Chart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Subscription: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Subscription
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Subscription created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Subscription/{DocumentName}':
    get:
      summary: Get a list of Material Requests
      description: Returns a list of Material Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Material Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Subscription
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Subscription you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Subscription
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Material Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Material Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Material Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Material Request/{DocumentName}':
    get:
      summary: Get a list of Job Applicants
      description: Returns a list of Job Applicants
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Applicant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Material Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Material Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Material Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Applicant: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Applicant
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Applicant created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Applicant/{DocumentName}':
    get:
      summary: Get a list of Salary Structure Assignments
      description: Returns a list of Salary Structure Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Structure Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Applicant
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Applicant you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Applicant
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Structure Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Structure Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Structure Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Structure Assignment/{DocumentName}':
    get:
      summary: Get a list of Period Closing Vouchers
      description: Returns a list of Period Closing Vouchers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Period Closing Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Structure Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Structure Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Structure Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Period Closing Voucher: null
      tags:
        - DocTypes
    post:
      summary: Create a new Period Closing Voucher
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Period Closing Voucher created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Period Closing Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Period Closing Voucher/{DocumentName}':
    get:
      summary: Get a list of Authorization Rules
      description: Returns a list of Authorization Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Authorization Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Period Closing Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Period Closing Voucher
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Period Closing Voucher you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Period Closing Voucher
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Authorization Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Authorization Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Authorization Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Authorization Rule/{DocumentName}':
    get:
      summary: Get a list of Companys
      description: Returns a list of Companys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Authorization Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Authorization Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Authorization Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Company: null
      tags:
        - DocTypes
    post:
      summary: Create a new Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Company created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Company/{DocumentName}':
    get:
      summary: Get a list of Subcontracting BOMs
      description: Returns a list of Subcontracting BOMs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subcontracting BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Company
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Company you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Company
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subcontracting BOM: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subcontracting BOM
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subcontracting BOM created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subcontracting BOM/{DocumentName}':
    get:
      summary: Get a list of Locations
      description: Returns a list of Locations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subcontracting BOM
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subcontracting BOM you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subcontracting BOM
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Location: null
      tags:
        - DocTypes
    post:
      summary: Create a new Location
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Location created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Location/{DocumentName}':
    get:
      summary: Get a list of Submission Queues
      description: Returns a list of Submission Queues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Submission Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Location
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Location you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Location
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Submission Queue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Submission Queue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Submission Queue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Submission Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Submission Queue/{DocumentName}':
    get:
      summary: Get a list of Dashboards
      description: Returns a list of Dashboards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Submission Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Submission Queue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Submission Queue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Submission Queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard/{DocumentName}':
    get:
      summary: Get a list of Document Follows
      description: Returns a list of Document Follows
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Follow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Follow: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Follow
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Follow created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Follow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Follow/{DocumentName}':
    get:
      summary: Get a list of Quality Meetings
      description: Returns a list of Quality Meetings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Meeting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Follow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Follow
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Follow you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Follow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Meeting: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Meeting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Meeting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Meeting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Meeting/{DocumentName}':
    get:
      summary: Get a list of Quality Procedures
      description: Returns a list of Quality Procedures
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Meeting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Meeting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Meeting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Meeting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Procedure: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Procedure
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Procedure created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Procedure/{DocumentName}':
    get:
      summary: Get a list of Quality Goals
      description: Returns a list of Quality Goals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Procedure
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Procedure you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Procedure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Goal: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Goal
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Goal created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Goal/{DocumentName}':
    get:
      summary: Get a list of Quality Reviews
      description: Returns a list of Quality Reviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Goal
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Goal you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Goal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Review: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Review created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Review/{DocumentName}':
    get:
      summary: Get a list of Quality Actions
      description: Returns a list of Quality Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Review
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Review you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Review
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Action/{DocumentName}':
    get:
      summary: Get a list of Energy Point Logs
      description: Returns a list of Energy Point Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Energy Point Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Energy Point Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Energy Point Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Energy Point Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Energy Point Log/{DocumentName}':
    get:
      summary: Get a list of Workflow Actions
      description: Returns a list of Workflow Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Energy Point Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Energy Point Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Energy Point Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow Action/{DocumentName}':
    get:
      summary: Get a list of List Filters
      description: Returns a list of List Filters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/List Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/List Filter: null
      tags:
        - DocTypes
    post:
      summary: Create a new List Filter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: List Filter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/List Filter/{DocumentName}':
    get:
      summary: Get a list of Calendar Views
      description: Returns a list of Calendar Views
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Calendar View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific List Filter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the List Filter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified List Filter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Calendar View: null
      tags:
        - DocTypes
    post:
      summary: Create a new Calendar View
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Calendar View created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Calendar View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Calendar View/{DocumentName}':
    get:
      summary: Get a list of Kanban Boards
      description: Returns a list of Kanban Boards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Kanban Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Calendar View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Calendar View
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Calendar View you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Calendar View
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Kanban Board: null
      tags:
        - DocTypes
    post:
      summary: Create a new Kanban Board
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Kanban Board created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Kanban Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Kanban Board/{DocumentName}':
    get:
      summary: Get a list of Email Templates
      description: Returns a list of Email Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Kanban Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Kanban Board
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Kanban Board you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Kanban Board
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Template/{DocumentName}':
    get:
      summary: Get a list of Marketing Campaigns
      description: Returns a list of Marketing Campaigns
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Marketing Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Marketing Campaign: null
      tags:
        - DocTypes
    post:
      summary: Create a new Marketing Campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Marketing Campaign created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Marketing Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Marketing Campaign/{DocumentName}':
    get:
      summary: Get a list of Network Printer Settingss
      description: Returns a list of Network Printer Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Network Printer Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Marketing Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Marketing Campaign
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Marketing Campaign you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Marketing Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Network Printer Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Network Printer Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Network Printer Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Network Printer Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Network Printer Settings/{DocumentName}':
    get:
      summary: Get a list of User Groups
      description: Returns a list of User Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Network Printer Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Network Printer Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Network Printer Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Network Printer Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Group/{DocumentName}':
    get:
      summary: Get a list of DocType Layouts
      description: Returns a list of DocType Layouts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DocType Layout'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DocType Layout: null
      tags:
        - DocTypes
    post:
      summary: Create a new DocType Layout
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DocType Layout created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType Layout'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DocType Layout/{DocumentName}':
    get:
      summary: Get a list of Module Onboardings
      description: Returns a list of Module Onboardings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Module Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType Layout'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DocType Layout
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DocType Layout you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DocType Layout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Module Onboarding: null
      tags:
        - DocTypes
    post:
      summary: Create a new Module Onboarding
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Module Onboarding created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Module Onboarding/{DocumentName}':
    get:
      summary: Get a list of Onboarding Steps
      description: Returns a list of Onboarding Steps
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Onboarding Step'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Module Onboarding
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Module Onboarding you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Module Onboarding
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Onboarding Step: null
      tags:
        - DocTypes
    post:
      summary: Create a new Onboarding Step
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Onboarding Step created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Onboarding Step'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Onboarding Step/{DocumentName}':
    get:
      summary: Get a list of Dashboard Settingss
      description: Returns a list of Dashboard Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Onboarding Step'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Onboarding Step
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Onboarding Step you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Onboarding Step
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard Settings/{DocumentName}':
    get:
      summary: Get a list of Google Calendars
      description: Returns a list of Google Calendars
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Calendar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Calendar: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Calendar
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Calendar created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Calendar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Calendar/{DocumentName}':
    get:
      summary: Get a list of Quality Feedbacks
      description: Returns a list of Quality Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Calendar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Calendar
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Calendar you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Calendar
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Feedback/{DocumentName}':
    get:
      summary: Get a list of Service Level Agreements
      description: Returns a list of Service Level Agreements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Service Level Agreement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Service Level Agreement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Service Level Agreement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Service Level Agreement/{DocumentName}':
    get:
      summary: Get a list of Print Headings
      description: Returns a list of Print Headings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Heading'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Service Level Agreement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Service Level Agreement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Service Level Agreement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Heading: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Heading
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Heading created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Heading'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Heading/{DocumentName}':
    get:
      summary: Get a list of Reminders
      description: Returns a list of Reminders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Reminder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Heading'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Heading
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Heading you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Heading
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Reminder: null
      tags:
        - DocTypes
    post:
      summary: Create a new Reminder
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Reminder created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Reminder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Reminder/{DocumentName}':
    get:
      summary: Get a list of Print Formats
      description: Returns a list of Print Formats
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Format'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Reminder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Reminder
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Reminder you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Reminder
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Format: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Format
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Format created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Format/{DocumentName}':
    get:
      summary: Get a list of Custom HTML Blocks
      description: Returns a list of Custom HTML Blocks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom HTML Block'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Format
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Format you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom HTML Block: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom HTML Block
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom HTML Block created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom HTML Block'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom HTML Block/{DocumentName}':
    get:
      summary: Get a list of Form Tours
      description: Returns a list of Form Tours
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Form Tour'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom HTML Block'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom HTML Block
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom HTML Block you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom HTML Block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Form Tour: null
      tags:
        - DocTypes
    post:
      summary: Create a new Form Tour
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Form Tour created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Form Tour'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Form Tour/{DocumentName}':
    get:
      summary: Get a list of Activity Logs
      description: Returns a list of Activity Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Activity Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Form Tour'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Form Tour
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Form Tour you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Form Tour
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Activity Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Activity Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Activity Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Activity Log/{DocumentName}':
    get:
      summary: Get a list of Unreconcile Payments
      description: Returns a list of Unreconcile Payments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Unreconcile Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Activity Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Activity Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Activity Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Unreconcile Payment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Unreconcile Payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Unreconcile Payment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unreconcile Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Unreconcile Payment/{DocumentName}':
    get:
      summary: Get a list of Departments
      description: Returns a list of Departments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unreconcile Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Unreconcile Payment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Unreconcile Payment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Unreconcile Payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Department: null
      tags:
        - DocTypes
    post:
      summary: Create a new Department
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Department created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Department/{DocumentName}':
    get:
      summary: Get a list of Workspaces
      description: Returns a list of Workspaces
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Department
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Department you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Department
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workspace: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workspace created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workspace/{DocumentName}':
    get:
      summary: Get a list of Salary Components
      description: Returns a list of Salary Components
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Component'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workspace
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workspace you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workspace
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Component: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Component
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Component created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Component'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Component/{DocumentName}':
    get:
      summary: Get a list of Quality Inspections
      description: Returns a list of Quality Inspections
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Component'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Component
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Component you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Component
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection/{DocumentName}':
    get:
      summary: Get a list of Shift Types
      description: Returns a list of Shift Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shift Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shift Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shift Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shift Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shift Type/{DocumentName}':
    get:
      summary: Get a list of Employee Advances
      description: Returns a list of Employee Advances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Advance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shift Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shift Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shift Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Advance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Advance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Advance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Advance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Advance/{DocumentName}':
    get:
      summary: Get a list of Insights Notebook Pages
      description: Returns a list of Insights Notebook Pages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Notebook Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Advance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Advance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Advance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Advance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Notebook Page: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Notebook Page
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Notebook Page created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Notebook Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Notebook Page/{DocumentName}':
    get:
      summary: Get a list of Insights Dashboards
      description: Returns a list of Insights Dashboards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Notebook Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Notebook Page
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Notebook Page you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Notebook Page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Dashboard: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Dashboard
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Dashboard created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Dashboard/{DocumentName}':
    get:
      summary: Get a list of Work Orders
      description: Returns a list of Work Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Work Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Dashboard
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Dashboard you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Work Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Work Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Work Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Work Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Work Order/{DocumentName}':
    get:
      summary: Get a list of Process Payment Reconciliations
      description: Returns a list of Process Payment Reconciliations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Work Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Work Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Work Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Work Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Payment Reconciliation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Payment Reconciliation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Payment Reconciliation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Payment Reconciliation/{DocumentName}':
    get:
      summary: Get a list of POS Closing Entrys
      description: Returns a list of POS Closing Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Closing Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Payment Reconciliation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Payment Reconciliation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Payment Reconciliation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Closing Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Closing Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Closing Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Closing Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Closing Entry/{DocumentName}':
    get:
      summary: Get a list of BOM Creators
      description: Returns a list of BOM Creators
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM Creator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Closing Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Closing Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Closing Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Closing Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM Creator: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM Creator
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM Creator created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Creator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM Creator/{DocumentName}':
    get:
      summary: Get a list of Attendance Requests
      description: Returns a list of Attendance Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Attendance Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Creator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM Creator
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM Creator you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM Creator
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Attendance Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Attendance Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Attendance Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Attendance Request/{DocumentName}':
    get:
      summary: Get a list of Vehicle Service Items
      description: Returns a list of Vehicle Service Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vehicle Service Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Attendance Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Attendance Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Attendance Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vehicle Service Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vehicle Service Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vehicle Service Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Service Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vehicle Service Item/{DocumentName}':
    get:
      summary: Get a list of Non Conformances
      description: Returns a list of Non Conformances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Non Conformance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Service Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vehicle Service Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vehicle Service Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vehicle Service Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Non Conformance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Non Conformance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Non Conformance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Non Conformance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Non Conformance/{DocumentName}':
    get:
      summary: Get a list of Comments
      description: Returns a list of Comments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Non Conformance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Non Conformance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Non Conformance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Non Conformance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Comment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Comment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Comment/{DocumentName}':
    get:
      summary: Get a list of Accounts
      description: Returns a list of Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Comment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Comment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Account/{DocumentName}':
    get:
      summary: Get a list of Insights Notebooks
      description: Returns a list of Insights Notebooks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Notebook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Notebook: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Notebook
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Notebook created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Notebook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Notebook/{DocumentName}':
    get:
      summary: Get a list of Insights Table Imports
      description: Returns a list of Insights Table Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Table Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Notebook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Notebook
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Notebook you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Notebook
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Table Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Table Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Table Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Table Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Table Import/{DocumentName}':
    get:
      summary: Get a list of OAuth Clients
      description: Returns a list of OAuth Clients
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Client'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Table Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Table Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Table Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Table Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Client: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Client
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Client created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Client'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Client/{DocumentName}':
    get:
      summary: Get a list of Holiday Lists
      description: Returns a list of Holiday Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Client'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Client
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Client you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Client
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Holiday List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Holiday List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Holiday List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Holiday List/{DocumentName}':
    get:
      summary: Get a list of Item Tax Templates
      description: Returns a list of Item Tax Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Tax Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Holiday List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Holiday List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Holiday List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Tax Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Tax Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Tax Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Tax Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Tax Template/{DocumentName}':
    get:
      summary: Get a list of Employment Types
      description: Returns a list of Employment Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Tax Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Tax Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Tax Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Tax Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employment Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employment Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employment Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employment Type/{DocumentName}':
    get:
      summary: Get a list of Global Defaultss
      description: Returns a list of Global Defaultss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Global Defaults'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employment Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employment Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employment Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Global Defaults: null
      tags:
        - DocTypes
    post:
      summary: Create a new Global Defaults
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Global Defaults created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Defaults'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Global Defaults/{DocumentName}':
    get:
      summary: Get a list of Prepared Reports
      description: Returns a list of Prepared Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Prepared Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Defaults'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Global Defaults
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Global Defaults you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Global Defaults
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Prepared Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Prepared Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Prepared Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prepared Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Prepared Report/{DocumentName}':
    get:
      summary: Get a list of Job Cards
      description: Returns a list of Job Cards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prepared Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Prepared Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Prepared Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Prepared Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Card: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Card
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Card created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Card/{DocumentName}':
    get:
      summary: Get a list of Project Updates
      description: Returns a list of Project Updates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Card
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Card you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Card
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project Update: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project Update created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project Update/{DocumentName}':
    get:
      summary: Get a list of Asset Movements
      description: Returns a list of Asset Movements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Movement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project Update
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project Update you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project Update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Movement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Movement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Movement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Movement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Movement/{DocumentName}':
    get:
      summary: Get a list of Shift Assignments
      description: Returns a list of Shift Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shift Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Movement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Movement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Movement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Movement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shift Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shift Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shift Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shift Assignment/{DocumentName}':
    get:
      summary: Get a list of Events
      description: Returns a list of Events
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shift Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shift Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shift Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event/{DocumentName}':
    get:
      summary: Get a list of Document Naming Settingss
      description: Returns a list of Document Naming Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Naming Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Naming Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Naming Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Naming Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Naming Settings/{DocumentName}':
    get:
      summary: Get a list of Exchange Rate Revaluations
      description: Returns a list of Exchange Rate Revaluations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exchange Rate Revaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Naming Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Naming Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Naming Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exchange Rate Revaluation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exchange Rate Revaluation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exchange Rate Revaluation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exchange Rate Revaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exchange Rate Revaluation/{DocumentName}':
    get:
      summary: Get a list of Attendances
      description: Returns a list of Attendances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exchange Rate Revaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exchange Rate Revaluation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exchange Rate Revaluation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exchange Rate Revaluation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Attendance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Attendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Attendance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Attendance/{DocumentName}':
    get:
      summary: Get a list of DocShares
      description: Returns a list of DocShares
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DocShare'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Attendance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Attendance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Attendance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DocShare: null
      tags:
        - DocTypes
    post:
      summary: Create a new DocShare
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DocShare created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocShare'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DocShare/{DocumentName}':
    get:
      summary: Get a list of Dunnings
      description: Returns a list of Dunnings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dunning'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocShare'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DocShare
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DocShare you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DocShare
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dunning: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dunning
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dunning created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dunning/{DocumentName}':
    get:
      summary: Get a list of Insights Alerts
      description: Returns a list of Insights Alerts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Alert'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dunning
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dunning you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dunning
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Alert: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Alert
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Alert created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Alert'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Alert/{DocumentName}':
    get:
      summary: Get a list of Email Queues
      description: Returns a list of Email Queues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Alert'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Alert
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Alert you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Alert
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Queue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Queue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Queue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Queue/{DocumentName}':
    get:
      summary: Get a list of Accounting Dimension Filters
      description: Returns a list of Accounting Dimension Filters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounting Dimension Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Queue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Queue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounting Dimension Filter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounting Dimension Filter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounting Dimension Filter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounting Dimension Filter/{DocumentName}':
    get:
      summary: Get a list of Patch Logs
      description: Returns a list of Patch Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patch Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounting Dimension Filter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounting Dimension Filter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounting Dimension Filter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patch Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patch Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patch Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patch Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patch Log/{DocumentName}':
    get:
      summary: Get a list of Email Accounts
      description: Returns a list of Email Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patch Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patch Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patch Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patch Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Account/{DocumentName}':
    get:
      summary: Get a list of Email Domains
      description: Returns a list of Email Domains
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Domain: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Domain
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Domain created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Domain/{DocumentName}':
    get:
      summary: Get a list of Installation Notes
      description: Returns a list of Installation Notes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Installation Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Domain
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Domain you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Domain
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Installation Note: null
      tags:
        - DocTypes
    post:
      summary: Create a new Installation Note
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Installation Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installation Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Installation Note/{DocumentName}':
    get:
      summary: Get a list of Quotations
      description: Returns a list of Quotations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installation Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Installation Note
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Installation Note you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Installation Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quotation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quotation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quotation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quotation/{DocumentName}':
    get:
      summary: Get a list of Maintenance Visits
      description: Returns a list of Maintenance Visits
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Maintenance Visit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quotation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quotation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Maintenance Visit: null
      tags:
        - DocTypes
    post:
      summary: Create a new Maintenance Visit
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Maintenance Visit created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Visit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Maintenance Visit/{DocumentName}':
    get:
      summary: Get a list of Maintenance Schedules
      description: Returns a list of Maintenance Schedules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Maintenance Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Visit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Maintenance Visit
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Maintenance Visit you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Maintenance Visit
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Maintenance Schedule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Maintenance Schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Maintenance Schedule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Maintenance Schedule/{DocumentName}':
    get:
      summary: Get a list of Customer Groups
      description: Returns a list of Customer Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customer Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Maintenance Schedule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Maintenance Schedule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Maintenance Schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customer Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customer Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customer Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customer Group/{DocumentName}':
    get:
      summary: Get a list of Repost Item Valuations
      description: Returns a list of Repost Item Valuations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Item Valuation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customer Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customer Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customer Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Item Valuation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Item Valuation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Item Valuation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Item Valuation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Item Valuation/{DocumentName}':
    get:
      summary: Get a list of Employee Promotions
      description: Returns a list of Employee Promotions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Promotion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Item Valuation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Item Valuation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Item Valuation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Item Valuation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Promotion: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Promotion
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Promotion created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Promotion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Promotion/{DocumentName}':
    get:
      summary: Get a list of Print Settingss
      description: Returns a list of Print Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Promotion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Promotion
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Promotion you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Promotion
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Settings/{DocumentName}':
    get:
      summary: Get a list of Insights Data Sources
      description: Returns a list of Insights Data Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Data Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Data Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Data Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Data Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Data Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Data Source/{DocumentName}':
    get:
      summary: Get a list of Warehouses
      description: Returns a list of Warehouses
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Warehouse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Data Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Data Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Data Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Data Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Warehouse: null
      tags:
        - DocTypes
    post:
      summary: Create a new Warehouse
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Warehouse created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Warehouse/{DocumentName}':
    get:
      summary: Get a list of Webhook Request Logs
      description: Returns a list of Webhook Request Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Webhook Request Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Warehouse
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Warehouse you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Warehouse
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Webhook Request Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Webhook Request Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Webhook Request Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook Request Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Webhook Request Log/{DocumentName}':
    get:
      summary: Get a list of Insights Settingss
      description: Returns a list of Insights Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook Request Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Webhook Request Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Webhook Request Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Webhook Request Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Settings/{DocumentName}':
    get:
      summary: Get a list of Closing Stock Balances
      description: Returns a list of Closing Stock Balances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Closing Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Closing Stock Balance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Closing Stock Balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Closing Stock Balance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Closing Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Closing Stock Balance/{DocumentName}':
    get:
      summary: Get a list of Insights Charts
      description: Returns a list of Insights Charts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Closing Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Closing Stock Balance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Closing Stock Balance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Closing Stock Balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Chart: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Chart
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Chart created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Chart/{DocumentName}':
    get:
      summary: Get a list of Employee Checkins
      description: Returns a list of Employee Checkins
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Checkin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Chart
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Chart you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Chart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Checkin: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Checkin
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Checkin created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Checkin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Checkin/{DocumentName}':
    get:
      summary: Get a list of Insights Query Execution Logs
      description: Returns a list of Insights Query Execution Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Query Execution Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Checkin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Checkin
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Checkin you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Checkin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Query Execution Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Query Execution Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Query Execution Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query Execution Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Query Execution Log/{DocumentName}':
    get:
      summary: Get a list of Income Tax Slabs
      description: Returns a list of Income Tax Slabs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Income Tax Slab'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query Execution Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Query Execution Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Query Execution Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Query Execution Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Income Tax Slab: null
      tags:
        - DocTypes
    post:
      summary: Create a new Income Tax Slab
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Income Tax Slab created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Income Tax Slab'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Income Tax Slab/{DocumentName}':
    get:
      summary: Get a list of Packing Slips
      description: Returns a list of Packing Slips
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Packing Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Income Tax Slab'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Income Tax Slab
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Income Tax Slab you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Income Tax Slab
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Packing Slip: null
      tags:
        - DocTypes
    post:
      summary: Create a new Packing Slip
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Packing Slip created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Packing Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Packing Slip/{DocumentName}':
    get:
      summary: Get a list of Employee Other Incomes
      description: Returns a list of Employee Other Incomes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Other Income'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Packing Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Packing Slip
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Packing Slip you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Packing Slip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Other Income: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Other Income
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Other Income created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Other Income'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Other Income/{DocumentName}':
    get:
      summary: Get a list of Document Naming Rules
      description: Returns a list of Document Naming Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Naming Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Other Income'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Other Income
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Other Income you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Other Income
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Naming Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Naming Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Naming Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Naming Rule/{DocumentName}':
    get:
      summary: Get a list of Timesheets
      description: Returns a list of Timesheets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Naming Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Naming Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Naming Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Timesheet: null
      tags:
        - DocTypes
    post:
      summary: Create a new Timesheet
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Timesheet created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Timesheet/{DocumentName}':
    get:
      summary: Get a list of Lower Deduction Certificates
      description: Returns a list of Lower Deduction Certificates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lower Deduction Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Timesheet
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Timesheet you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Timesheet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lower Deduction Certificate: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lower Deduction Certificate
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lower Deduction Certificate created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lower Deduction Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lower Deduction Certificate/{DocumentName}':
    get:
      summary: Get a list of Workflow Action Masters
      description: Returns a list of Workflow Action Masters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow Action Master'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lower Deduction Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lower Deduction Certificate
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lower Deduction Certificate you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lower Deduction Certificate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow Action Master: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow Action Master
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow Action Master created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action Master'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow Action Master/{DocumentName}':
    get:
      summary: Get a list of Languages
      description: Returns a list of Languages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Language'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action Master'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow Action Master
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow Action Master you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow Action Master
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Language: null
      tags:
        - DocTypes
    post:
      summary: Create a new Language
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Language created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Language'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Language/{DocumentName}':
    get:
      summary: Get a list of Shareholders
      description: Returns a list of Shareholders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shareholder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Language'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Language
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Language you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Language
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shareholder: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shareholder
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shareholder created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shareholder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shareholder/{DocumentName}':
    get:
      summary: Get a list of Reports
      description: Returns a list of Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shareholder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shareholder
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shareholder you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shareholder
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Report/{DocumentName}':
    get:
      summary: Get a list of OAuth Bearer Tokens
      description: Returns a list of OAuth Bearer Tokens
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Bearer Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Bearer Token: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Bearer Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Bearer Token created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Bearer Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Bearer Token/{DocumentName}':
    get:
      summary: Get a list of Appraisal Cycles
      description: Returns a list of Appraisal Cycles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appraisal Cycle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Bearer Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Bearer Token
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Bearer Token you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Bearer Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appraisal Cycle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appraisal Cycle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appraisal Cycle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Cycle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appraisal Cycle/{DocumentName}':
    get:
      summary: Get a list of Employee Performance Feedbacks
      description: Returns a list of Employee Performance Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Performance Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Cycle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appraisal Cycle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appraisal Cycle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appraisal Cycle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Performance Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Performance Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Performance Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Performance Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Performance Feedback/{DocumentName}':
    get:
      summary: Get a list of Web Page Views
      description: Returns a list of Web Page Views
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Page View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Performance Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Performance Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Performance Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Performance Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Page View: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Page View
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Page View created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Page View/{DocumentName}':
    get:
      summary: Get a list of Dropbox Settingss
      description: Returns a list of Dropbox Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dropbox Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Page View
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Page View you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Page View
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dropbox Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dropbox Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dropbox Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dropbox Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dropbox Settings/{DocumentName}':
    get:
      summary: Get a list of KRAs
      description: Returns a list of KRAs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/KRA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dropbox Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dropbox Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dropbox Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dropbox Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/KRA: null
      tags:
        - DocTypes
    post:
      summary: Create a new KRA
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: KRA created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KRA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/KRA/{DocumentName}':
    get:
      summary: Get a list of Appraisal Templates
      description: Returns a list of Appraisal Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appraisal Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KRA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific KRA
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the KRA you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified KRA
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appraisal Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appraisal Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appraisal Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appraisal Template/{DocumentName}':
    get:
      summary: Get a list of Employee Feedback Criterias
      description: Returns a list of Employee Feedback Criterias
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Feedback Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appraisal Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appraisal Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appraisal Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Feedback Criteria: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Feedback Criteria
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Feedback Criteria created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Feedback Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Feedback Criteria/{DocumentName}':
    get:
      summary: Get a list of Additional Salarys
      description: Returns a list of Additional Salarys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Additional Salary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Feedback Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Feedback Criteria
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Feedback Criteria you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Feedback Criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Additional Salary: null
      tags:
        - DocTypes
    post:
      summary: Create a new Additional Salary
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Additional Salary created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Additional Salary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Additional Salary/{DocumentName}':
    get:
      summary: Get a list of Bank Reconciliation Tools
      description: Returns a list of Bank Reconciliation Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Reconciliation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Additional Salary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Additional Salary
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Additional Salary you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Additional Salary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Reconciliation Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Reconciliation Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Reconciliation Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Reconciliation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Reconciliation Tool/{DocumentName}':
    get:
      summary: Get a list of Account Closing Balances
      description: Returns a list of Account Closing Balances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Account Closing Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Reconciliation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Reconciliation Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Reconciliation Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Reconciliation Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Account Closing Balance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Account Closing Balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Account Closing Balance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account Closing Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Account Closing Balance/{DocumentName}':
    get:
      summary: Get a list of Employee Attendance Tools
      description: Returns a list of Employee Attendance Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Attendance Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account Closing Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Account Closing Balance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Account Closing Balance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Account Closing Balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Attendance Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Attendance Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Attendance Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Attendance Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Attendance Tool/{DocumentName}':
    get:
      summary: Get a list of Custom DocPerms
      description: Returns a list of Custom DocPerms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom DocPerm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Attendance Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Attendance Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Attendance Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Attendance Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom DocPerm: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom DocPerm
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom DocPerm created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom DocPerm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom DocPerm/{DocumentName}':
    get:
      summary: Get a list of Blog Posts
      description: Returns a list of Blog Posts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blog Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom DocPerm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom DocPerm
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom DocPerm you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom DocPerm
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blog Post: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blog Post
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blog Post created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blog Post/{DocumentName}':
    get:
      summary: Get a list of Party Specific Items
      description: Returns a list of Party Specific Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Party Specific Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blog Post
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blog Post you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blog Post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Party Specific Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Party Specific Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Party Specific Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Specific Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Party Specific Item/{DocumentName}':
    get:
      summary: Get a list of List View Settingss
      description: Returns a list of List View Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/List View Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Specific Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Party Specific Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Party Specific Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Party Specific Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/List View Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new List View Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: List View Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List View Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/List View Settings/{DocumentName}':
    get:
      summary: Get a list of Pricing Rules
      description: Returns a list of Pricing Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Pricing Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List View Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific List View Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the List View Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified List View Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Pricing Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Pricing Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Pricing Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pricing Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Pricing Rule/{DocumentName}':
    get:
      summary: Get a list of Industry Types
      description: Returns a list of Industry Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Industry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pricing Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Pricing Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Pricing Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Pricing Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Industry Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Industry Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Industry Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Industry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Industry Type/{DocumentName}':
    get:
      summary: Get a list of Designations
      description: Returns a list of Designations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Designation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Industry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Industry Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Industry Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Industry Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Designation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Designation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Designation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Designation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Designation/{DocumentName}':
    get:
      summary: Get a list of Sales Stages
      description: Returns a list of Sales Stages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Stage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Designation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Designation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Designation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Designation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Stage: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Stage
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Stage created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Stage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Stage/{DocumentName}':
    get:
      summary: Get a list of Sales Partner Types
      description: Returns a list of Sales Partner Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Partner Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Stage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Stage
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Stage you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Stage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Partner Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Partner Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Partner Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Partner Type/{DocumentName}':
    get:
      summary: Get a list of Lead Sources
      description: Returns a list of Lead Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lead Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Partner Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Partner Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Partner Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lead Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lead Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lead Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lead Source/{DocumentName}':
    get:
      summary: Get a list of Terms and Conditionss
      description: Returns a list of Terms and Conditionss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Terms and Conditions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lead Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lead Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lead Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Terms and Conditions: null
      tags:
        - DocTypes
    post:
      summary: Create a new Terms and Conditions
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Terms and Conditions created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terms and Conditions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Terms and Conditions/{DocumentName}':
    get:
      summary: Get a list of LDAP Settingss
      description: Returns a list of LDAP Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LDAP Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terms and Conditions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Terms and Conditions
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Terms and Conditions you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Terms and Conditions
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LDAP Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new LDAP Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LDAP Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LDAP Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LDAP Settings/{DocumentName}':
    get:
      summary: Get a list of Pick Lists
      description: Returns a list of Pick Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Pick List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LDAP Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LDAP Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LDAP Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LDAP Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Pick List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Pick List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Pick List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pick List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Pick List/{DocumentName}':
    get:
      summary: Get a list of Staffing Plans
      description: Returns a list of Staffing Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Staffing Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pick List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Pick List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Pick List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Pick List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Staffing Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Staffing Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Staffing Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Staffing Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Staffing Plan/{DocumentName}':
    get:
      summary: Get a list of S3 Backup Settingss
      description: Returns a list of S3 Backup Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/S3 Backup Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Staffing Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Staffing Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Staffing Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Staffing Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/S3 Backup Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new S3 Backup Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: S3 Backup Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/S3 Backup Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/S3 Backup Settings/{DocumentName}':
    get:
      summary: Get a list of Job Requisitions
      description: Returns a list of Job Requisitions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Requisition'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/S3 Backup Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific S3 Backup Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the S3 Backup Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified S3 Backup Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Requisition: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Requisition
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Requisition created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Requisition'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Requisition/{DocumentName}':
    get:
      summary: Get a list of Retention Bonuss
      description: Returns a list of Retention Bonuss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Retention Bonus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Requisition'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Requisition
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Requisition you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Requisition
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Retention Bonus: null
      tags:
        - DocTypes
    post:
      summary: Create a new Retention Bonus
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Retention Bonus created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Retention Bonus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Retention Bonus/{DocumentName}':
    get:
      summary: Get a list of Gratuity Rules
      description: Returns a list of Gratuity Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Gratuity Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Retention Bonus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Retention Bonus
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Retention Bonus you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Retention Bonus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Gratuity Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Gratuity Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Gratuity Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Gratuity Rule/{DocumentName}':
    get:
      summary: Get a list of Employee Incentives
      description: Returns a list of Employee Incentives
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Incentive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Gratuity Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Gratuity Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Gratuity Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Incentive: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Incentive
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Incentive created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Incentive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Incentive/{DocumentName}':
    get:
      summary: Get a list of Token Caches
      description: Returns a list of Token Caches
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Token Cache'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Incentive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Incentive
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Incentive you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Incentive
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Token Cache: null
      tags:
        - DocTypes
    post:
      summary: Create a new Token Cache
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Token Cache created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Token Cache'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Token Cache/{DocumentName}':
    get:
      summary: Get a list of Insights Teams
      description: Returns a list of Insights Teams
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Token Cache'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Token Cache
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Token Cache you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Token Cache
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Team: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Team
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Team created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Team/{DocumentName}':
    get:
      summary: Get a list of Territorys
      description: Returns a list of Territorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Territory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Team
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Team you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Team
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Territory: null
      tags:
        - DocTypes
    post:
      summary: Create a new Territory
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Territory created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Territory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Territory/{DocumentName}':
    get:
      summary: Get a list of Supplier Groups
      description: Returns a list of Supplier Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Territory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Territory
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Territory you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Territory
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Group/{DocumentName}':
    get:
      summary: Get a list of Homepages
      description: Returns a list of Homepages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Homepage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Homepage: null
      tags:
        - DocTypes
    post:
      summary: Create a new Homepage
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Homepage created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Homepage/{DocumentName}':
    get:
      summary: Get a list of Appointments
      description: Returns a list of Appointments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Homepage
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Homepage you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Homepage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment/{DocumentName}':
    get:
      summary: Get a list of Appointment Booking Settingss
      description: Returns a list of Appointment Booking Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Booking Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Booking Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Booking Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Booking Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Booking Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Booking Settings/{DocumentName}':
    get:
      summary: Get a list of Bank Clearances
      description: Returns a list of Bank Clearances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Clearance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Booking Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Booking Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Booking Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Booking Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Clearance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Clearance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Clearance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Clearance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Clearance/{DocumentName}':
    get:
      summary: Get a list of Role Permission for Page and Reports
      description: Returns a list of Role Permission for Page and Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Role Permission for Page and Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Clearance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Clearance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Clearance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Clearance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Role Permission for Page and Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Role Permission for Page and Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Role Permission for Page and Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Permission for Page and Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Role Permission for Page and Report/{DocumentName}':
    get:
      summary: Get a list of Incoterms
      description: Returns a list of Incoterms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Incoterm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Permission for Page and Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Role Permission for Page and Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Role Permission for Page and Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Role Permission for Page and Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Incoterm: null
      tags:
        - DocTypes
    post:
      summary: Create a new Incoterm
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Incoterm created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoterm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Incoterm/{DocumentName}':
    get:
      summary: Get a list of Shipments
      description: Returns a list of Shipments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoterm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Incoterm
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Incoterm you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Incoterm
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shipment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shipment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shipment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shipment/{DocumentName}':
    get:
      summary: Get a list of Workstation Types
      description: Returns a list of Workstation Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workstation Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shipment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shipment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shipment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workstation Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workstation Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workstation Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workstation Type/{DocumentName}':
    get:
      summary: Get a list of Item Prices
      description: Returns a list of Item Prices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workstation Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workstation Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workstation Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Price: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Price
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Price created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Price/{DocumentName}':
    get:
      summary: Get a list of Gratuitys
      description: Returns a list of Gratuitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Gratuity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Price
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Price you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Price
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Gratuity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Gratuity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Gratuity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Gratuity/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Declarations
      description: Returns a list of Employee Tax Exemption Declarations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Declaration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Gratuity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Gratuity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Gratuity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Declaration: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Declaration
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Declaration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Declaration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Declaration/{DocumentName}':
    get:
      summary: Get a list of Employee Benefit Claims
      description: Returns a list of Employee Benefit Claims
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Benefit Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Declaration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Declaration
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Declaration you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Declaration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Benefit Claim: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Benefit Claim
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Benefit Claim created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Benefit Claim/{DocumentName}':
    get:
      summary: Get a list of Employee Benefit Applications
      description: Returns a list of Employee Benefit Applications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Benefit Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Benefit Claim
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Benefit Claim you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Benefit Claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Benefit Application: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Benefit Application
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Benefit Application created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Benefit Application/{DocumentName}':
    get:
      summary: Get a list of Workstations
      description: Returns a list of Workstations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workstation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Benefit Application
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Benefit Application you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Benefit Application
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workstation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workstation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workstation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workstation/{DocumentName}':
    get:
      summary: Get a list of Leave Block Lists
      description: Returns a list of Leave Block Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Block List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workstation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workstation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workstation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Block List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Block List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Block List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Block List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Block List/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Proof Submissions
      description: Returns a list of Employee Tax Exemption Proof Submissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Proof Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Block List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Block List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Block List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Block List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Proof Submission: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Proof Submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Proof Submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Proof Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Proof Submission/{DocumentName}':
    get:
      summary: Get a list of Website Themes
      description: Returns a list of Website Themes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Theme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Proof Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Proof Submission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Proof Submission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Proof Submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Theme: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Theme
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Theme created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Theme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Theme/{DocumentName}':
    get:
      summary: Get a list of Insights Query Charts
      description: Returns a list of Insights Query Charts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Insights Query Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Theme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Theme
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Theme you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Theme
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Insights Query Chart: null
      tags:
        - DocTypes
    post:
      summary: Create a new Insights Query Chart
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Insights Query Chart created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Insights Query Chart/{DocumentName}':
    get:
      summary: Get a list of Bloggers
      description: Returns a list of Bloggers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blogger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Insights Query Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Insights Query Chart
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Insights Query Chart you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Insights Query Chart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blogger: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blogger
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blogger created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blogger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blogger/{DocumentName}':
    get:
      summary: Get a list of Blog Categorys
      description: Returns a list of Blog Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blog Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blogger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blogger
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blogger you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blogger
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blog Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blog Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blog Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blog Category/{DocumentName}':
    get:
      summary: Get a list of Opportunitys
      description: Returns a list of Opportunitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blog Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blog Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blog Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opportunity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opportunity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opportunity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opportunity/{DocumentName}':
    get:
      summary: Get a list of Prospects
      description: Returns a list of Prospects
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Prospect'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opportunity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opportunity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opportunity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Prospect: null
      tags:
        - DocTypes
    post:
      summary: Create a new Prospect
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Prospect created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prospect'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Prospect/{DocumentName}':
    get:
      summary: Get a list of Budgets
      description: Returns a list of Budgets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Budget'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prospect'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Prospect
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Prospect you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Prospect
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Budget: null
      tags:
        - DocTypes
    post:
      summary: Create a new Budget
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Budget created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Budget'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Budget/{DocumentName}':
    get:
      summary: Get a list of Data Exports
      description: Returns a list of Data Exports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Data Export'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Budget'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Budget
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Budget you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Budget
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Data Export: null
      tags:
        - DocTypes
    post:
      summary: Create a new Data Export
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Data Export created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Export'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Data Export/{DocumentName}':
    get:
      summary: Get a list of Bank Statement Imports
      description: Returns a list of Bank Statement Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Statement Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Export'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Data Export
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Data Export you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Data Export
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Statement Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Statement Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Statement Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Statement Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Statement Import/{DocumentName}':
    get:
      summary: Get a list of View Logs
      description: Returns a list of View Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/View Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Statement Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Statement Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Statement Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Statement Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/View Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new View Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: View Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/View Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/View Log/{DocumentName}':
    get:
      summary: Get a list of Task Types
      description: Returns a list of Task Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Task Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/View Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific View Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the View Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified View Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Task Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Task Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Task Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Task Type/{DocumentName}':
    get:
      summary: Get a list of Asset Repairs
      description: Returns a list of Asset Repairs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Repair'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Task Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Task Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Task Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Repair: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Repair
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Repair created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Repair'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Repair/{DocumentName}':
    get:
      summary: Get a list of POS Profiles
      description: Returns a list of POS Profiles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Repair'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Repair
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Repair you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Repair
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Profile: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Profile created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Profile/{DocumentName}':
    get:
      summary: Get a list of Salutations
      description: Returns a list of Salutations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salutation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Profile
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Profile you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salutation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salutation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salutation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salutation/{DocumentName}':
    get:
      summary: Get a list of Genders
      description: Returns a list of Genders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Gender'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salutation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salutation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salutation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salutation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Gender: null
      tags:
        - DocTypes
    post:
      summary: Create a new Gender
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Gender created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gender'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Gender/{DocumentName}':
    get:
      summary: Get a list of Countrys
      description: Returns a list of Countrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gender'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Gender
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Gender you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Gender
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Country: null
      tags:
        - DocTypes
    post:
      summary: Create a new Country
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Country created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Country/{DocumentName}':
    get:
      summary: Get a list of Transaction Logs
      description: Returns a list of Transaction Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Country
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Country you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Country
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Transaction Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Transaction Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Transaction Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Transaction Log/{DocumentName}':
    get:
      summary: Get a list of Success Actions
      description: Returns a list of Success Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Success Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Transaction Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Transaction Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Transaction Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Success Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new Success Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Success Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Success Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Success Action/{DocumentName}':
    get:
      summary: Get a list of Domain Settingss
      description: Returns a list of Domain Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Domain Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Success Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Success Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Success Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Success Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Domain Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Domain Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Domain Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Domain Settings/{DocumentName}':
    get:
      summary: Get a list of Custom Roles
      description: Returns a list of Custom Roles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Domain Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Domain Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Domain Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom Role: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom Role
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom Role created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom Role/{DocumentName}':
    get:
      summary: Get a list of OAuth Provider Settingss
      description: Returns a list of OAuth Provider Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Provider Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom Role
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom Role you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom Role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Provider Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Provider Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Provider Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Provider Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Provider Settings/{DocumentName}':
    get:
      summary: Get a list of Unhandled Emails
      description: Returns a list of Unhandled Emails
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Unhandled Email'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Provider Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Provider Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Provider Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Provider Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Unhandled Email: null
      tags:
        - DocTypes
    post:
      summary: Create a new Unhandled Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Unhandled Email created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unhandled Email'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Unhandled Email/{DocumentName}':
    get:
      summary: Get a list of Email Unsubscribes
      description: Returns a list of Email Unsubscribes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Unsubscribe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unhandled Email'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Unhandled Email
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Unhandled Email you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Unhandled Email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Unsubscribe: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Unsubscribe
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Unsubscribe created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Unsubscribe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Unsubscribe/{DocumentName}':
    get:
      summary: Get a list of Email Rules
      description: Returns a list of Email Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Unsubscribe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Unsubscribe
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Unsubscribe you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Unsubscribe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Rule/{DocumentName}':
    get:
      summary: Get a list of Print Styles
      description: Returns a list of Print Styles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Style'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Style: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Style
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Style created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Style'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Style/{DocumentName}':
    get:
      summary: Get a list of Bulk Updates
      description: Returns a list of Bulk Updates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bulk Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Style'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Style
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Style you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Style
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bulk Update: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bulk Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bulk Update created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bulk Update/{DocumentName}':
    get:
      summary: Get a list of Desktop Icons
      description: Returns a list of Desktop Icons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Desktop Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bulk Update
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bulk Update you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bulk Update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Desktop Icon: null
      tags:
        - DocTypes
    post:
      summary: Create a new Desktop Icon
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Desktop Icon created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Desktop Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Desktop Icon/{DocumentName}':
    get:
      summary: Get a list of Help Categorys
      description: Returns a list of Help Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Help Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Desktop Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Desktop Icon
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Desktop Icon you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Desktop Icon
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Help Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Help Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Help Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Help Category/{DocumentName}':
    get:
      summary: Get a list of Website Scripts
      description: Returns a list of Website Scripts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Help Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Help Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Help Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Script: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Script
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Script created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Script/{DocumentName}':
    get:
      summary: Get a list of Website Slideshows
      description: Returns a list of Website Slideshows
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Slideshow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Script
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Script you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Script
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Slideshow: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Slideshow
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Slideshow created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Slideshow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Slideshow/{DocumentName}':
    get:
      summary: Get a list of Website Sidebars
      description: Returns a list of Website Sidebars
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Sidebar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Slideshow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Slideshow
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Slideshow you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Slideshow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Sidebar: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Sidebar
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Sidebar created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Sidebar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Sidebar/{DocumentName}':
    get:
      summary: Get a list of Address Templates
      description: Returns a list of Address Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Address Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Sidebar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Sidebar
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Sidebar you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Sidebar
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Address Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Address Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Address Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Address Template/{DocumentName}':
    get:
      summary: Get a list of POS Invoice Merge Logs
      description: Returns a list of POS Invoice Merge Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Invoice Merge Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Address Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Address Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Address Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Invoice Merge Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Invoice Merge Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Invoice Merge Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice Merge Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Invoice Merge Log/{DocumentName}':
    get:
      summary: Get a list of Payment Gateways
      description: Returns a list of Payment Gateways
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Gateway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice Merge Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Invoice Merge Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Invoice Merge Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Invoice Merge Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Gateway: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Gateway
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Gateway created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Gateway/{DocumentName}':
    get:
      summary: Get a list of Razorpay Settingss
      description: Returns a list of Razorpay Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Razorpay Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Gateway
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Gateway you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Razorpay Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Razorpay Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Razorpay Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Razorpay Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Razorpay Settings/{DocumentName}':
    get:
      summary: Get a list of PayPal Settingss
      description: Returns a list of PayPal Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/PayPal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Razorpay Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Razorpay Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Razorpay Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Razorpay Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/PayPal Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new PayPal Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: PayPal Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PayPal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/PayPal Settings/{DocumentName}':
    get:
      summary: Get a list of Braintree Settingss
      description: Returns a list of Braintree Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Braintree Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PayPal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific PayPal Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the PayPal Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified PayPal Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Braintree Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Braintree Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Braintree Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Braintree Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Braintree Settings/{DocumentName}':
    get:
      summary: Get a list of Paytm Settingss
      description: Returns a list of Paytm Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Paytm Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Braintree Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Braintree Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Braintree Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Braintree Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Paytm Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Paytm Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Paytm Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Paytm Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Paytm Settings/{DocumentName}':
    get:
      summary: Get a list of Stripe Settingss
      description: Returns a list of Stripe Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stripe Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Paytm Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Paytm Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Paytm Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Paytm Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stripe Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stripe Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stripe Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stripe Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stripe Settings/{DocumentName}':
    get:
      summary: Get a list of Translations
      description: Returns a list of Translations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Translation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stripe Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stripe Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stripe Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stripe Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Translation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Translation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Translation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Translation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Translation/{DocumentName}':
    get:
      summary: Get a list of Drivers
      description: Returns a list of Drivers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Driver'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Translation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Translation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Translation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Translation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Driver: null
      tags:
        - DocTypes
    post:
      summary: Create a new Driver
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Driver created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Driver'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Driver/{DocumentName}':
    get:
      summary: Get a list of Vehicles
      description: Returns a list of Vehicles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Driver'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Driver
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Driver you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Driver
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vehicle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vehicle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vehicle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vehicle/{DocumentName}':
    get:
      summary: Get a list of BOM Update Logs
      description: Returns a list of BOM Update Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vehicle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vehicle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vehicle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM Update Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM Update Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM Update Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM Update Log/{DocumentName}':
    get:
      summary: Get a list of Access Logs
      description: Returns a list of Access Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Access Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM Update Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM Update Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM Update Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Access Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Access Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Access Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Access Log/{DocumentName}':
    get:
      summary: Get a list of Deleted Documents
      description: Returns a list of Deleted Documents
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Deleted Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Access Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Access Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Access Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Deleted Document: null
      tags:
        - DocTypes
    post:
      summary: Create a new Deleted Document
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Deleted Document created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Deleted Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Deleted Document/{DocumentName}':
    get:
      summary: Get a list of Scheduled Job Logs
      description: Returns a list of Scheduled Job Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Scheduled Job Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Deleted Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Deleted Document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Deleted Document you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Deleted Document
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Scheduled Job Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Scheduled Job Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Scheduled Job Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Scheduled Job Log/{DocumentName}':
    get:
      summary: Get a list of Log Settingss
      description: Returns a list of Log Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Log Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Scheduled Job Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Scheduled Job Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Scheduled Job Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Log Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Log Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Log Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Log Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Log Settings/{DocumentName}':
    get:
      summary: Get a list of User Types
      description: Returns a list of User Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Log Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Log Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Log Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Log Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Type/{DocumentName}':
    get:
      summary: Get a list of CRM Settingss
      description: Returns a list of CRM Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/CRM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/CRM Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new CRM Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: CRM Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CRM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/CRM Settings/{DocumentName}':
    get:
      summary: Get a list of Purchase Taxes and Charges Templates
      description: Returns a list of Purchase Taxes and Charges Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CRM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific CRM Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the CRM Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified CRM Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Taxes and Charges Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Taxes and Charges Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Taxes and Charges Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Taxes and Charges Template/{DocumentName}':
    get:
      summary: Get a list of Sales Taxes and Charges Templates
      description: Returns a list of Sales Taxes and Charges Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Taxes and Charges Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Taxes and Charges Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Taxes and Charges Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Taxes and Charges Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Taxes and Charges Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Taxes and Charges Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Taxes and Charges Template/{DocumentName}':
    get:
      summary: Get a list of Stock Reconciliations
      description: Returns a list of Stock Reconciliations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Taxes and Charges Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Taxes and Charges Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Taxes and Charges Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Reconciliation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Reconciliation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Reconciliation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Reconciliation/{DocumentName}':
    get:
      summary: Get a list of Employee Grades
      description: Returns a list of Employee Grades
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Grade'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Reconciliation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Reconciliation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Reconciliation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Grade: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Grade
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Grade created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grade'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Grade/{DocumentName}':
    get:
      summary: Get a list of Training Feedbacks
      description: Returns a list of Training Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grade'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Grade
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Grade you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Grade
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Feedback/{DocumentName}':
    get:
      summary: Get a list of Training Events
      description: Returns a list of Training Events
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Event: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Event
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Event/{DocumentName}':
    get:
      summary: Get a list of System Consoles
      description: Returns a list of System Consoles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/System Console'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Event
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Event you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/System Console: null
      tags:
        - DocTypes
    post:
      summary: Create a new System Console
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: System Console created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Console'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/System Console/{DocumentName}':
    get:
      summary: Get a list of Call Logs
      description: Returns a list of Call Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Call Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Console'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific System Console
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the System Console you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified System Console
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Call Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Call Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Call Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Call Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Call Log/{DocumentName}':
    get:
      summary: Get a list of Leave Allocations
      description: Returns a list of Leave Allocations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Call Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Call Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Call Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Call Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Allocation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Allocation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Allocation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Allocation/{DocumentName}':
    get:
      summary: Get a list of Property Setters
      description: Returns a list of Property Setters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Property Setter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Allocation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Allocation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Allocation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Property Setter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Property Setter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Property Setter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property Setter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Property Setter/{DocumentName}':
    get:
      summary: Get a list of Skills
      description: Returns a list of Skills
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property Setter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Property Setter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Property Setter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Property Setter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Skill: null
      tags:
        - DocTypes
    post:
      summary: Create a new Skill
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Skill created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Skill/{DocumentName}':
    get:
      summary: Get a list of Telephony Call Types
      description: Returns a list of Telephony Call Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Telephony Call Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Skill
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Skill you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Skill
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Telephony Call Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Telephony Call Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Telephony Call Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Telephony Call Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Telephony Call Type/{DocumentName}':
    get:
      summary: Get a list of Opportunity Lost Reasons
      description: Returns a list of Opportunity Lost Reasons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opportunity Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Telephony Call Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Telephony Call Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Telephony Call Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Telephony Call Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opportunity Lost Reason: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opportunity Lost Reason
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opportunity Lost Reason created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opportunity Lost Reason/{DocumentName}':
    get:
      summary: Get a list of Cost Centers
      description: Returns a list of Cost Centers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cost Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opportunity Lost Reason
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opportunity Lost Reason you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opportunity Lost Reason
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cost Center: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cost Center
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cost Center created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cost Center/{DocumentName}':
    get:
      summary: Get a list of Cost Center Allocations
      description: Returns a list of Cost Center Allocations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cost Center Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cost Center
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cost Center you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cost Center
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cost Center Allocation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cost Center Allocation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cost Center Allocation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cost Center Allocation/{DocumentName}':
    get:
      summary: Get a list of Employee Onboardings
      description: Returns a list of Employee Onboardings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cost Center Allocation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cost Center Allocation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cost Center Allocation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Onboarding: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Onboarding
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Onboarding created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Onboarding/{DocumentName}':
    get:
      summary: Get a list of Leave Policys
      description: Returns a list of Leave Policys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Policy'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Onboarding
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Onboarding you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Onboarding
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Policy: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Policy
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Policy created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Policy/{DocumentName}':
    get:
      summary: Get a list of Tax Categorys
      description: Returns a list of Tax Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Policy
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Policy you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Policy
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tax Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tax Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tax Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tax Category/{DocumentName}':
    get:
      summary: Get a list of Training Results
      description: Returns a list of Training Results
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tax Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tax Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tax Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Result: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Result
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Result created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Result/{DocumentName}':
    get:
      summary: Get a list of Appointment Letters
      description: Returns a list of Appointment Letters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Letter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Result
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Result you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Letter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Letter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Letter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Letter/{DocumentName}':
    get:
      summary: Get a list of Appointment Letter Templates
      description: Returns a list of Appointment Letter Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Letter Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Letter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Letter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Letter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Letter Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Letter Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Letter Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Letter Template/{DocumentName}':
    get:
      summary: Get a list of Travel Requests
      description: Returns a list of Travel Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Travel Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Letter Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Letter Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Letter Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Travel Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Travel Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Travel Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Travel Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Travel Request/{DocumentName}':
    get:
      summary: Get a list of Document Share Keys
      description: Returns a list of Document Share Keys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Share Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Travel Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Travel Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Travel Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Travel Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Share Key: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Share Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Share Key created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Share Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Share Key/{DocumentName}':
    get:
      summary: Get a list of Leave Policy Assignments
      description: Returns a list of Leave Policy Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Policy Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Share Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Share Key
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Share Key you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Share Key
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Policy Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Policy Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Policy Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Policy Assignment/{DocumentName}':
    get:
      summary: Get a list of Leave Periods
      description: Returns a list of Leave Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Policy Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Policy Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Policy Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Period/{DocumentName}':
    get:
      summary: Get a list of Connected Apps
      description: Returns a list of Connected Apps
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Connected App'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Connected App: null
      tags:
        - DocTypes
    post:
      summary: Create a new Connected App
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Connected App created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Connected App'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Connected App/{DocumentName}':
    get:
      summary: Get a list of Opening Invoice Creation Tools
      description: Returns a list of Opening Invoice Creation Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opening Invoice Creation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Connected App'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Connected App
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Connected App you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Connected App
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opening Invoice Creation Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opening Invoice Creation Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opening Invoice Creation Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opening Invoice Creation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opening Invoice Creation Tool/{DocumentName}':
    get:
      summary: Get a list of User Permissions
      description: Returns a list of User Permissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Permission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opening Invoice Creation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opening Invoice Creation Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opening Invoice Creation Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opening Invoice Creation Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Permission: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Permission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Permission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Permission/{DocumentName}':
    get:
      summary: Get a list of Data Import Logs
      description: Returns a list of Data Import Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Data Import Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Permission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Permission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Permission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Permission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Data Import Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Data Import Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Data Import Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Data Import Log/{DocumentName}':
    get:
      summary: Get a list of Personal Data Deletion Requests
      description: Returns a list of Personal Data Deletion Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Personal Data Deletion Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Data Import Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Data Import Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Data Import Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Personal Data Deletion Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Personal Data Deletion Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Personal Data Deletion Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Deletion Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Personal Data Deletion Request/{DocumentName}':
    get:
      summary: Get a list of Ledger Merges
      description: Returns a list of Ledger Merges
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Ledger Merge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Deletion Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Personal Data Deletion Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Personal Data Deletion Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Personal Data Deletion Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Ledger Merge: null
      tags:
        - DocTypes
    post:
      summary: Create a new Ledger Merge
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Ledger Merge created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Ledger Merge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Ledger Merge/{DocumentName}':
    get:
      summary: Get a list of Exit Interviews
      description: Returns a list of Exit Interviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exit Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Ledger Merge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Ledger Merge
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Ledger Merge you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Ledger Merge
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exit Interview: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exit Interview
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exit Interview created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exit Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exit Interview/{DocumentName}':
    get:
      summary: Get a list of Module Profiles
      description: Returns a list of Module Profiles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Module Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exit Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exit Interview
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exit Interview you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exit Interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Module Profile: null
      tags:
        - DocTypes
    post:
      summary: Create a new Module Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Module Profile created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Module Profile/{DocumentName}':
    get:
      summary: Get a list of Role Profiles
      description: Returns a list of Role Profiles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Role Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Module Profile
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Module Profile you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Module Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Role Profile: null
      tags:
        - DocTypes
    post:
      summary: Create a new Role Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Role Profile created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Role Profile/{DocumentName}':
    get:
      summary: Get a list of Email Flag Queues
      description: Returns a list of Email Flag Queues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Flag Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Role Profile
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Role Profile you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Role Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Flag Queue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Flag Queue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Flag Queue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Flag Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Flag Queue/{DocumentName}':
    get:
      summary: Get a list of Operations
      description: Returns a list of Operations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Operation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Flag Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Flag Queue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Flag Queue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Flag Queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Operation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Operation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Operation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Operation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Operation/{DocumentName}':
    get:
      summary: Get a list of Issues
      description: Returns a list of Issues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Issue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Operation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Operation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Operation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Issue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Issue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Issue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Issue/{DocumentName}':
    get:
      summary: Get a list of Energy Point Settingss
      description: Returns a list of Energy Point Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Energy Point Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Issue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Issue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Issue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Energy Point Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Energy Point Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Energy Point Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Energy Point Settings/{DocumentName}':
    get:
      summary: Get a list of Dunning Types
      description: Returns a list of Dunning Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dunning Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Energy Point Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Energy Point Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Energy Point Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dunning Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dunning Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dunning Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dunning Type/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Criterias
      description: Returns a list of Supplier Scorecard Criterias
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dunning Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dunning Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dunning Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Criteria: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Criteria
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Criteria created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Criteria/{DocumentName}':
    get:
      summary: Get a list of Print Format Field Templates
      description: Returns a list of Print Format Field Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Format Field Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Criteria
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Criteria you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Format Field Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Format Field Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Format Field Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format Field Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Format Field Template/{DocumentName}':
    get:
      summary: Get a list of UOMs
      description: Returns a list of UOMs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format Field Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Format Field Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Format Field Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Format Field Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UOM: null
      tags:
        - DocTypes
    post:
      summary: Create a new UOM
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UOM created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UOM/{DocumentName}':
    get:
      summary: Get a list of Support Settingss
      description: Returns a list of Support Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Support Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UOM
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UOM you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UOM
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Support Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Support Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Support Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Support Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Support Settings/{DocumentName}':
    get:
      summary: Get a list of Interview Types
      description: Returns a list of Interview Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Support Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Support Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Support Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Support Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview Type/{DocumentName}':
    get:
      summary: Get a list of Discussion Topics
      description: Returns a list of Discussion Topics
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Discussion Topic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Discussion Topic: null
      tags:
        - DocTypes
    post:
      summary: Create a new Discussion Topic
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Discussion Topic created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Topic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Discussion Topic/{DocumentName}':
    get:
      summary: Get a list of Discussion Replys
      description: Returns a list of Discussion Replys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Discussion Reply'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Topic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Discussion Topic
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Discussion Topic you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Discussion Topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Discussion Reply: null
      tags:
        - DocTypes
    post:
      summary: Create a new Discussion Reply
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Discussion Reply created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Reply'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Discussion Reply/{DocumentName}':
    get:
      summary: Get a list of SMS Settingss
      description: Returns a list of SMS Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Reply'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Discussion Reply
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Discussion Reply you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Discussion Reply
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/SMS Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new SMS Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: SMS Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/SMS Settings/{DocumentName}':
    get:
      summary: Get a list of Tag Links
      description: Returns a list of Tag Links
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tag Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific SMS Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the SMS Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified SMS Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tag Link: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tag Link
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tag Link created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tag Link/{DocumentName}':
    get:
      summary: Get a list of Package Imports
      description: Returns a list of Package Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Package Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tag Link
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tag Link you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tag Link
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Package Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Package Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Package Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Package Import/{DocumentName}':
    get:
      summary: Get a list of Package Releases
      description: Returns a list of Package Releases
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Package Release'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Package Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Package Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Package Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Package Release: null
      tags:
        - DocTypes
    post:
      summary: Create a new Package Release
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Package Release created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Release'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Package Release/{DocumentName}':
    get:
      summary: Get a list of Packages
      description: Returns a list of Packages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Release'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Package Release
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Package Release you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Package Release
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Package: null
      tags:
        - DocTypes
    post:
      summary: Create a new Package
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Package created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Package/{DocumentName}':
    get:
      summary: Get a list of Web Templates
      description: Returns a list of Web Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Package
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Package you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Package
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Template/{DocumentName}':
    get:
      summary: Get a list of Party Links
      description: Returns a list of Party Links
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Party Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Party Link: null
      tags:
        - DocTypes
    post:
      summary: Create a new Party Link
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Party Link created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Party Link/{DocumentName}':
    get:
      summary: Get a list of Transaction Deletion Records
      description: Returns a list of Transaction Deletion Records
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Transaction Deletion Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Party Link
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Party Link you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Party Link
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Transaction Deletion Record: null
      tags:
        - DocTypes
    post:
      summary: Create a new Transaction Deletion Record
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Transaction Deletion Record created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Deletion Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Transaction Deletion Record/{DocumentName}':
    get:
      summary: Get a list of Employee Separations
      description: Returns a list of Employee Separations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Separation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Deletion Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Transaction Deletion Record
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Transaction Deletion Record you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Transaction Deletion Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Separation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Separation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Separation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Separation/{DocumentName}':
    get:
      summary: Get a list of Tax Withholding Categorys
      description: Returns a list of Tax Withholding Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tax Withholding Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Separation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Separation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Separation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tax Withholding Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tax Withholding Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tax Withholding Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Withholding Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tax Withholding Category/{DocumentName}':
    get:
      summary: Get a list of Assignment Rules
      description: Returns a list of Assignment Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Assignment Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Withholding Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tax Withholding Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tax Withholding Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tax Withholding Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Assignment Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Assignment Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Assignment Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Assignment Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Assignment Rule/{DocumentName}':
    get:
      summary: Get a list of South Africa VAT Settingss
      description: Returns a list of South Africa VAT Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/South Africa VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Assignment Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Assignment Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Assignment Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Assignment Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/South Africa VAT Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new South Africa VAT Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: South Africa VAT Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/South Africa VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/South Africa VAT Settings/{DocumentName}':
    get:
      summary: Get a list of Campaigns
      description: Returns a list of Campaigns
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/South Africa VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific South Africa VAT Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the South Africa VAT Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified South Africa VAT Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Campaign: null
      tags:
        - DocTypes
    post:
      summary: Create a new Campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Campaign created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Campaign/{DocumentName}':
    get:
      summary: Get a list of Blanket Orders
      description: Returns a list of Blanket Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blanket Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Campaign
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Campaign you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blanket Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blanket Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blanket Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blanket Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blanket Order/{DocumentName}':
    get:
      summary: Get a list of Tax Rules
      description: Returns a list of Tax Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tax Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blanket Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blanket Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blanket Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blanket Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tax Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tax Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tax Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tax Rule/{DocumentName}':
    get:
      summary: Get a list of Stock Entry Types
      description: Returns a list of Stock Entry Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Entry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tax Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tax Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tax Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Entry Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Entry Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Entry Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Entry Type/{DocumentName}':
    get:
      summary: Get a list of Vehicle Logs
      description: Returns a list of Vehicle Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vehicle Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Entry Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Entry Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Entry Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vehicle Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vehicle Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vehicle Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vehicle Log/{DocumentName}':
    get:
      summary: Get a list of Slack Webhook URLs
      description: Returns a list of Slack Webhook URLs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Slack Webhook URL'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vehicle Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vehicle Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vehicle Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Slack Webhook URL: null
      tags:
        - DocTypes
    post:
      summary: Create a new Slack Webhook URL
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Slack Webhook URL created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Slack Webhook URL'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Slack Webhook URL/{DocumentName}':
    get:
      summary: Get a list of Promotional Schemes
      description: Returns a list of Promotional Schemes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Promotional Scheme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Slack Webhook URL'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Slack Webhook URL
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Slack Webhook URL you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Slack Webhook URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Promotional Scheme: null
      tags:
        - DocTypes
    post:
      summary: Create a new Promotional Scheme
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Promotional Scheme created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Promotional Scheme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Promotional Scheme/{DocumentName}':
    get:
      summary: Get a list of Employee Referrals
      description: Returns a list of Employee Referrals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Referral'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Promotional Scheme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Promotional Scheme
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Promotional Scheme you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Promotional Scheme
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Referral: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Referral
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Referral created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Referral'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Referral/{DocumentName}':
    get:
      summary: Get a list of Notifications
      description: Returns a list of Notifications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Referral'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Referral
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Referral you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Referral
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Notification: null
      tags:
        - DocTypes
    post:
      summary: Create a new Notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Notification created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Notification/{DocumentName}':
    get:
      summary: Get a list of OAuth Authorization Codes
      description: Returns a list of OAuth Authorization Codes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Authorization Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Notification
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Notification you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Authorization Code: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Authorization Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Authorization Code created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Authorization Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Authorization Code/{DocumentName}':
    get:
      summary: Get a list of Import Supplier Invoices
      description: Returns a list of Import Supplier Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Import Supplier Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Authorization Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Authorization Code
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Authorization Code you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Authorization Code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Import Supplier Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new Import Supplier Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Import Supplier Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Import Supplier Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Import Supplier Invoice/{DocumentName}':
    get:
      summary: Get a list of POS Settingss
      description: Returns a list of POS Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Import Supplier Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Import Supplier Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Import Supplier Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Import Supplier Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Settings/{DocumentName}':
    get:
      summary: Get a list of Contact Us Settingss
      description: Returns a list of Contact Us Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contact Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contact Us Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contact Us Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contact Us Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contact Us Settings/{DocumentName}':
    get:
      summary: Get a list of Plaid Settingss
      description: Returns a list of Plaid Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Plaid Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contact Us Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contact Us Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contact Us Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Plaid Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Plaid Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Plaid Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Plaid Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Plaid Settings/{DocumentName}':
    get:
      summary: Get a list of Brands
      description: Returns a list of Brands
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Plaid Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Plaid Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Plaid Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Plaid Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Brand: null
      tags:
        - DocTypes
    post:
      summary: Create a new Brand
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Brand created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Brand/{DocumentName}':
    get:
      summary: Get a list of Asset Categorys
      description: Returns a list of Asset Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Brand
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Brand you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Brand
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Category/{DocumentName}':
    get:
      summary: Get a list of Quality Inspection Parameters
      description: Returns a list of Quality Inspection Parameters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection Parameter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection Parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection Parameter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection Parameter/{DocumentName}':
    get:
      summary: Get a list of Payment Terms
      description: Returns a list of Payment Terms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection Parameter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection Parameter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection Parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Term: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Term
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Term created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Term/{DocumentName}':
    get:
      summary: Get a list of Accounting Dimensions
      description: Returns a list of Accounting Dimensions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounting Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Term
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Term you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Term
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounting Dimension: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounting Dimension
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounting Dimension created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounting Dimension/{DocumentName}':
    get:
      summary: Get a list of Quality Inspection Parameter Groups
      description: Returns a list of Quality Inspection Parameter Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection Parameter Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounting Dimension
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounting Dimension you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounting Dimension
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection Parameter Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection Parameter Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection Parameter Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection Parameter Group/{DocumentName}':
    get:
      summary: Get a list of Landed Cost Vouchers
      description: Returns a list of Landed Cost Vouchers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Landed Cost Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection Parameter Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection Parameter Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection Parameter Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Landed Cost Voucher: null
      tags:
        - DocTypes
    post:
      summary: Create a new Landed Cost Voucher
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Landed Cost Voucher created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Landed Cost Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Landed Cost Voucher/{DocumentName}':
    get:
      summary: Get a list of Asset Maintenance Teams
      description: Returns a list of Asset Maintenance Teams
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Maintenance Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Landed Cost Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Landed Cost Voucher
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Landed Cost Voucher you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Landed Cost Voucher
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Maintenance Team: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Maintenance Team
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Maintenance Team created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Maintenance Team/{DocumentName}':
    get:
      summary: Get a list of Asset Value Adjustments
      description: Returns a list of Asset Value Adjustments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Value Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Maintenance Team
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Maintenance Team you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Maintenance Team
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Value Adjustment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Value Adjustment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Value Adjustment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Value Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Value Adjustment/{DocumentName}':
    get:
      summary: Get a list of Asset Maintenance Logs
      description: Returns a list of Asset Maintenance Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Maintenance Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Value Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Value Adjustment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Value Adjustment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Value Adjustment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Maintenance Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Maintenance Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Maintenance Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Maintenance Log/{DocumentName}':
    get:
      summary: Get a list of Auto Repeats
      description: Returns a list of Auto Repeats
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Auto Repeat'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Maintenance Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Maintenance Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Maintenance Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Auto Repeat: null
      tags:
        - DocTypes
    post:
      summary: Create a new Auto Repeat
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Auto Repeat created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Repeat'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Auto Repeat/{DocumentName}':
    get:
      summary: Get a list of UAE VAT Settingss
      description: Returns a list of UAE VAT Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UAE VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Repeat'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Auto Repeat
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Auto Repeat you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Auto Repeat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UAE VAT Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new UAE VAT Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UAE VAT Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UAE VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UAE VAT Settings/{DocumentName}':
    get:
      summary: Get a list of Voice Call Settingss
      description: Returns a list of Voice Call Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Voice Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UAE VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UAE VAT Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UAE VAT Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UAE VAT Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Voice Call Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Voice Call Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Voice Call Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Voice Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Voice Call Settings/{DocumentName}':
    get:
      summary: Get a list of Contracts
      description: Returns a list of Contracts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Voice Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Voice Call Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Voice Call Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Voice Call Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contract: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contract
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contract created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contract/{DocumentName}':
    get:
      summary: Get a list of Contract Templates
      description: Returns a list of Contract Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contract Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contract
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contract you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contract
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contract Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contract Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contract Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contract Template/{DocumentName}':
    get:
      summary: Get a list of Putaway Rules
      description: Returns a list of Putaway Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Putaway Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contract Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contract Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contract Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Putaway Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Putaway Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Putaway Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Putaway Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Putaway Rule/{DocumentName}':
    get:
      summary: Get a list of Incoming Call Settingss
      description: Returns a list of Incoming Call Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Incoming Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Putaway Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Putaway Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Putaway Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Putaway Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Incoming Call Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Incoming Call Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Incoming Call Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoming Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Incoming Call Settings/{DocumentName}':
    get:
      summary: Get a list of Fiscal Years
      description: Returns a list of Fiscal Years
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Fiscal Year'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoming Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Incoming Call Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Incoming Call Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Incoming Call Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Fiscal Year: null
      tags:
        - DocTypes
    post:
      summary: Create a new Fiscal Year
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Fiscal Year created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Fiscal Year'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Fiscal Year/{DocumentName}':
    get:
      summary: Get a list of Communication Mediums
      description: Returns a list of Communication Mediums
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Communication Medium'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Fiscal Year'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Fiscal Year
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Fiscal Year you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Fiscal Year
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Communication Medium: null
      tags:
        - DocTypes
    post:
      summary: Create a new Communication Medium
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Communication Medium created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication Medium'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Communication Medium/{DocumentName}':
    get:
      summary: Get a list of Quality Feedback Templates
      description: Returns a list of Quality Feedback Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Feedback Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication Medium'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Communication Medium
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Communication Medium you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Communication Medium
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Feedback Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Feedback Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Feedback Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Feedback Template/{DocumentName}':
    get:
      summary: Get a list of About Us Settingss
      description: Returns a list of About Us Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/About Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Feedback Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Feedback Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Feedback Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/About Us Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new About Us Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: About Us Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/About Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/About Us Settings/{DocumentName}':
    get:
      summary: Get a list of Item Attributes
      description: Returns a list of Item Attributes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Attribute'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/About Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific About Us Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the About Us Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified About Us Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Attribute: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Attribute
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Attribute created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Attribute'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Attribute/{DocumentName}':
    get:
      summary: Get a list of Shipment Parcel Templates
      description: Returns a list of Shipment Parcel Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shipment Parcel Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Attribute'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Attribute
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Attribute you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Attribute
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shipment Parcel Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shipment Parcel Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shipment Parcel Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment Parcel Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shipment Parcel Template/{DocumentName}':
    get:
      summary: Get a list of Payment Gateway Accounts
      description: Returns a list of Payment Gateway Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Gateway Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment Parcel Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shipment Parcel Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shipment Parcel Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shipment Parcel Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Gateway Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Gateway Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Gateway Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Gateway Account/{DocumentName}':
    get:
      summary: Get a list of Mode of Payments
      description: Returns a list of Mode of Payments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Mode of Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Gateway Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Gateway Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Gateway Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Mode of Payment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Mode of Payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Mode of Payment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mode of Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Mode of Payment/{DocumentName}':
    get:
      summary: Get a list of Domains
      description: Returns a list of Domains
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mode of Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Mode of Payment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Mode of Payment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Mode of Payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Domain: null
      tags:
        - DocTypes
    post:
      summary: Create a new Domain
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Domain created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Domain/{DocumentName}':
    get:
      summary: Get a list of Upload Attendances
      description: Returns a list of Upload Attendances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Upload Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Domain
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Domain you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Domain
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Upload Attendance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Upload Attendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Upload Attendance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Upload Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Upload Attendance/{DocumentName}':
    get:
      summary: Get a list of Expense Claim Types
      description: Returns a list of Expense Claim Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Expense Claim Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Upload Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Upload Attendance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Upload Attendance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Upload Attendance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Expense Claim Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Expense Claim Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Expense Claim Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Expense Claim Type/{DocumentName}':
    get:
      summary: Get a list of Videos
      description: Returns a list of Videos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Video'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Expense Claim Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Expense Claim Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Expense Claim Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Video: null
      tags:
        - DocTypes
    post:
      summary: Create a new Video
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Video created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Video/{DocumentName}':
    get:
      summary: Get a list of Video Settingss
      description: Returns a list of Video Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Video Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Video
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Video you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Video
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Video Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Video Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Video Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Video Settings/{DocumentName}':
    get:
      summary: Get a list of Process Deferred Accountings
      description: Returns a list of Process Deferred Accountings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Deferred Accounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Video Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Video Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Video Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Deferred Accounting: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Deferred Accounting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Deferred Accounting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Deferred Accounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Deferred Accounting/{DocumentName}':
    get:
      summary: Get a list of Email Digests
      description: Returns a list of Email Digests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Digest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Deferred Accounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Deferred Accounting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Deferred Accounting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Deferred Accounting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Digest: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Digest
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Digest created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Digest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Digest/{DocumentName}':
    get:
      summary: Get a list of Shift Requests
      description: Returns a list of Shift Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shift Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Digest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Digest
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Digest you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Digest
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shift Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shift Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shift Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shift Request/{DocumentName}':
    get:
      summary: Get a list of Navbar Settingss
      description: Returns a list of Navbar Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Navbar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shift Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shift Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shift Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Navbar Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Navbar Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Navbar Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Navbar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Navbar Settings/{DocumentName}':
    get:
      summary: Get a list of Portal Settingss
      description: Returns a list of Portal Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Portal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Navbar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Navbar Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Navbar Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Navbar Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Portal Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Portal Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Portal Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Portal Settings/{DocumentName}':
    get:
      summary: Get a list of Banks
      description: Returns a list of Banks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Portal Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Portal Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Portal Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank/{DocumentName}':
    get:
      summary: Get a list of Email Campaigns
      description: Returns a list of Email Campaigns
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Campaign: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Campaign created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Campaign/{DocumentName}':
    get:
      summary: Get a list of Payroll Periods
      description: Returns a list of Payroll Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payroll Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Campaign
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Campaign you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payroll Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payroll Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payroll Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payroll Period/{DocumentName}':
    get:
      summary: Get a list of Dashboard Chart Sources
      description: Returns a list of Dashboard Chart Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard Chart Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payroll Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payroll Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payroll Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard Chart Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard Chart Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard Chart Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard Chart Source/{DocumentName}':
    get:
      summary: Get a list of Customs Tariff Numbers
      description: Returns a list of Customs Tariff Numbers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customs Tariff Number'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard Chart Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard Chart Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard Chart Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customs Tariff Number: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customs Tariff Number
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customs Tariff Number created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customs Tariff Number'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customs Tariff Number/{DocumentName}':
    get:
      summary: Get a list of Subscription Settingss
      description: Returns a list of Subscription Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subscription Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customs Tariff Number'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customs Tariff Number
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customs Tariff Number you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customs Tariff Number
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subscription Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subscription Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subscription Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subscription Settings/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Sub Categorys
      description: Returns a list of Employee Tax Exemption Sub Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Sub Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subscription Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subscription Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subscription Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Sub Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Sub Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Sub Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Sub Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Sub Category/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Categorys
      description: Returns a list of Employee Tax Exemption Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Sub Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Sub Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Sub Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Sub Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Category/{DocumentName}':
    get:
      summary: Get a list of POS Opening Entrys
      description: Returns a list of POS Opening Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Opening Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Opening Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Opening Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Opening Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Opening Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Opening Entry/{DocumentName}':
    get:
      summary: Get a list of Asset Maintenances
      description: Returns a list of Asset Maintenances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Maintenance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Opening Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Opening Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Opening Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Opening Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Maintenance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Maintenance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Maintenance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Maintenance/{DocumentName}':
    get:
      summary: Get a list of Downtime Entrys
      description: Returns a list of Downtime Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Downtime Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Maintenance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Maintenance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Maintenance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Downtime Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Downtime Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Downtime Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Downtime Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Downtime Entry/{DocumentName}':
    get:
      summary: Get a list of Installed Applicationss
      description: Returns a list of Installed Applicationss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Installed Applications'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Downtime Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Downtime Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Downtime Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Downtime Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Installed Applications: null
      tags:
        - DocTypes
    post:
      summary: Create a new Installed Applications
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Installed Applications created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installed Applications'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Installed Applications/{DocumentName}':
    get:
      summary: Get a list of Journal Entry Templates
      description: Returns a list of Journal Entry Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Journal Entry Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installed Applications'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Installed Applications
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Installed Applications you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Installed Applications
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Journal Entry Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Journal Entry Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Journal Entry Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Journal Entry Template/{DocumentName}':
    get:
      summary: Get a list of Tally Migrations
      description: Returns a list of Tally Migrations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tally Migration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Journal Entry Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Journal Entry Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Journal Entry Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tally Migration: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tally Migration
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tally Migration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tally Migration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tally Migration/{DocumentName}':
    get:
      summary: Get a list of Quality Inspection Templates
      description: Returns a list of Quality Inspection Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tally Migration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tally Migration
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tally Migration you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tally Migration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection Template/{DocumentName}':
    get:
      summary: Get a list of Project Templates
      description: Returns a list of Project Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project Template/{DocumentName}':
    get:
      summary: Get a list of Colors
      description: Returns a list of Colors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Color'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Color: null
      tags:
        - DocTypes
    post:
      summary: Create a new Color
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Color created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Color'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Color/{DocumentName}':
    get:
      summary: Get a list of Bank Account Types
      description: Returns a list of Bank Account Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Account Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Color'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Color
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Color you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Color
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Account Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Account Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Account Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Account Type/{DocumentName}':
    get:
      summary: Get a list of Item Manufacturers
      description: Returns a list of Item Manufacturers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Account Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Account Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Account Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Manufacturer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Manufacturer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Manufacturer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Manufacturer/{DocumentName}':
    get:
      summary: Get a list of Payment Orders
      description: Returns a list of Payment Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Manufacturer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Manufacturer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Manufacturer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Order/{DocumentName}':
    get:
      summary: Get a list of Payment Terms Templates
      description: Returns a list of Payment Terms Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Terms Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Terms Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Terms Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Terms Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Terms Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Terms Template/{DocumentName}':
    get:
      summary: Get a list of Sales Persons
      description: Returns a list of Sales Persons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Person'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Terms Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Terms Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Terms Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Terms Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Person: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Person
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Person created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Person'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Person/{DocumentName}':
    get:
      summary: Get a list of Chart of Accounts Importers
      description: Returns a list of Chart of Accounts Importers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Chart of Accounts Importer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Person'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Person
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Person you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Person
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Chart of Accounts Importer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Chart of Accounts Importer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Chart of Accounts Importer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Chart of Accounts Importer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Chart of Accounts Importer/{DocumentName}':
    get:
      summary: Get a list of Loyalty Point Entrys
      description: Returns a list of Loyalty Point Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loyalty Point Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Chart of Accounts Importer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Chart of Accounts Importer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Chart of Accounts Importer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Chart of Accounts Importer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loyalty Point Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loyalty Point Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loyalty Point Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Point Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loyalty Point Entry/{DocumentName}':
    get:
      summary: Get a list of Share Transfers
      description: Returns a list of Share Transfers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Share Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Point Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loyalty Point Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loyalty Point Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loyalty Point Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Share Transfer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Share Transfer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Share Transfer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Share Transfer/{DocumentName}':
    get:
      summary: Get a list of Employee Skill Maps
      description: Returns a list of Employee Skill Maps
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Skill Map'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Share Transfer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Share Transfer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Share Transfer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Skill Map: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Skill Map
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Skill Map created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Skill Map'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Skill Map/{DocumentName}':
    get:
      summary: Get a list of Website Route Metas
      description: Returns a list of Website Route Metas
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Route Meta'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Skill Map'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Skill Map
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Skill Map you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Skill Map
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Route Meta: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Route Meta
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Route Meta created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Route Meta'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Route Meta/{DocumentName}':
    get:
      summary: Get a list of Energy Point Rules
      description: Returns a list of Energy Point Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Energy Point Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Route Meta'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Route Meta
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Route Meta you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Route Meta
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Energy Point Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Energy Point Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Energy Point Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Energy Point Rule/{DocumentName}':
    get:
      summary: Get a list of Coupon Codes
      description: Returns a list of Coupon Codes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Coupon Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Energy Point Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Energy Point Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Energy Point Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Coupon Code: null
      tags:
        - DocTypes
    post:
      summary: Create a new Coupon Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Coupon Code created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Coupon Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Coupon Code/{DocumentName}':
    get:
      summary: Get a list of Sales Partners
      description: Returns a list of Sales Partners
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Partner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Coupon Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Coupon Code
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Coupon Code you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Coupon Code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Partner: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Partner
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Partner created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Partner/{DocumentName}':
    get:
      summary: Get a list of Global Search Settingss
      description: Returns a list of Global Search Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Global Search Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Partner
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Partner you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Partner
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Global Search Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Global Search Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Global Search Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Search Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Global Search Settings/{DocumentName}':
    get:
      summary: Get a list of Quick Stock Balances
      description: Returns a list of Quick Stock Balances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quick Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Search Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Global Search Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Global Search Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Global Search Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quick Stock Balance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quick Stock Balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quick Stock Balance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quick Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quick Stock Balance/{DocumentName}':
    get:
      summary: Get a list of Tags
      description: Returns a list of Tags
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tag'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quick Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quick Stock Balance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quick Stock Balance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quick Stock Balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tag: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tag created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tag/{DocumentName}':
    get:
      summary: Get a list of QuickBooks Migrators
      description: Returns a list of QuickBooks Migrators
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/QuickBooks Migrator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tag
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tag you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tag
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/QuickBooks Migrator: null
      tags:
        - DocTypes
    post:
      summary: Create a new QuickBooks Migrator
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: QuickBooks Migrator created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/QuickBooks Migrator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/QuickBooks Migrator/{DocumentName}':
    get:
      summary: Get a list of Accounting Periods
      description: Returns a list of Accounting Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounting Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/QuickBooks Migrator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific QuickBooks Migrator
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the QuickBooks Migrator you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified QuickBooks Migrator
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounting Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounting Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounting Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounting Period/{DocumentName}':
    get:
      summary: Get a list of Session Default Settingss
      description: Returns a list of Session Default Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Session Default Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounting Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounting Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounting Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Session Default Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Session Default Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Session Default Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Session Default Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Session Default Settings/{DocumentName}':
    get:
      summary: Get a list of Manufacturers
      description: Returns a list of Manufacturers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Session Default Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Session Default Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Session Default Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Session Default Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Manufacturer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Manufacturer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Manufacturer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Manufacturer/{DocumentName}':
    get:
      summary: Get a list of Issue Types
      description: Returns a list of Issue Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Issue Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Manufacturer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Manufacturer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Manufacturer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Issue Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Issue Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Issue Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Issue Type/{DocumentName}':
    get:
      summary: Get a list of Price Lists
      description: Returns a list of Price Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Price List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Issue Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Issue Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Issue Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Price List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Price List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Price List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Price List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Price List/{DocumentName}':
    get:
      summary: Get a list of Invoice Discountings
      description: Returns a list of Invoice Discountings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Invoice Discounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Price List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Price List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Price List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Price List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Invoice Discounting: null
      tags:
        - DocTypes
    post:
      summary: Create a new Invoice Discounting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Invoice Discounting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invoice Discounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Invoice Discounting/{DocumentName}':
    get:
      summary: Get a list of Warehouse Types
      description: Returns a list of Warehouse Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Warehouse Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invoice Discounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Invoice Discounting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Invoice Discounting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Invoice Discounting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Warehouse Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Warehouse Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Warehouse Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Warehouse Type/{DocumentName}':
    get:
      summary: Get a list of Loyalty Programs
      description: Returns a list of Loyalty Programs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loyalty Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Warehouse Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Warehouse Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Warehouse Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loyalty Program: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loyalty Program
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loyalty Program created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loyalty Program/{DocumentName}':
    get:
      summary: Get a list of Shipping Rules
      description: Returns a list of Shipping Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shipping Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loyalty Program
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loyalty Program you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loyalty Program
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shipping Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shipping Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shipping Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipping Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shipping Rule/{DocumentName}':
    get:
      summary: Get a list of Issue Prioritys
      description: Returns a list of Issue Prioritys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Issue Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipping Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shipping Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shipping Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shipping Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Issue Priority: null
      tags:
        - DocTypes
    post:
      summary: Create a new Issue Priority
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Issue Priority created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Issue Priority/{DocumentName}':
    get:
      summary: Get a list of Personal Data Download Requests
      description: Returns a list of Personal Data Download Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Personal Data Download Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Issue Priority
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Issue Priority you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Issue Priority
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Personal Data Download Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Personal Data Download Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Personal Data Download Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Download Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Personal Data Download Request/{DocumentName}':
    get:
      summary: Get a list of Homepage Sections
      description: Returns a list of Homepage Sections
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Homepage Section'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Download Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Personal Data Download Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Personal Data Download Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Personal Data Download Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Homepage Section: null
      tags:
        - DocTypes
    post:
      summary: Create a new Homepage Section
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Homepage Section created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage Section'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Homepage Section/{DocumentName}':
    get:
      summary: Get a list of Activity Costs
      description: Returns a list of Activity Costs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Activity Cost'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage Section'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Homepage Section
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Homepage Section you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Homepage Section
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Activity Cost: null
      tags:
        - DocTypes
    post:
      summary: Create a new Activity Cost
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Activity Cost created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Cost'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Activity Cost/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Periods
      description: Returns a list of Supplier Scorecard Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Cost'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Activity Cost
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Activity Cost you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Activity Cost
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Period/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Variables
      description: Returns a list of Supplier Scorecard Variables
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Variable'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Variable: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Variable
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Variable created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Variable'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Variable/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecards
      description: Returns a list of Supplier Scorecards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Variable'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Variable
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Variable you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Variable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Standings
      description: Returns a list of Supplier Scorecard Standings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Standing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Standing: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Standing
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Standing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Standing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Standing/{DocumentName}':
    get:
      summary: Get a list of Employee Groups
      description: Returns a list of Employee Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Standing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Standing
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Standing you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Standing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Group/{DocumentName}':
    get:
      summary: Get a list of Bank Account Subtypes
      description: Returns a list of Bank Account Subtypes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Account Subtype'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Account Subtype: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Account Subtype
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Account Subtype created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Subtype'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Account Subtype/{DocumentName}':
    get:
      summary: Get a list of Market Segments
      description: Returns a list of Market Segments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Market Segment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Subtype'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Account Subtype
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Account Subtype you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Account Subtype
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Market Segment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Market Segment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Market Segment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Market Segment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Market Segment/{DocumentName}':
    get:
      summary: Get a list of Delivery Settingss
      description: Returns a list of Delivery Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Delivery Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Market Segment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Market Segment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Market Segment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Market Segment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Delivery Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Delivery Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Delivery Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Delivery Settings/{DocumentName}':
    get:
      summary: Get a list of Bank Guarantees
      description: Returns a list of Bank Guarantees
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Guarantee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Delivery Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Delivery Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Delivery Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Guarantee: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Guarantee
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Guarantee created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Guarantee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Guarantee/{DocumentName}':
    get:
      summary: Get a list of UOM Conversion Factors
      description: Returns a list of UOM Conversion Factors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UOM Conversion Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Guarantee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Guarantee
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Guarantee you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Guarantee
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UOM Conversion Factor: null
      tags:
        - DocTypes
    post:
      summary: Create a new UOM Conversion Factor
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UOM Conversion Factor created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Conversion Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UOM Conversion Factor/{DocumentName}':
    get:
      summary: Get a list of SMS Logs
      description: Returns a list of SMS Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SMS Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Conversion Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UOM Conversion Factor
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UOM Conversion Factor you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UOM Conversion Factor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/SMS Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new SMS Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: SMS Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/SMS Log/{DocumentName}':
    get:
      summary: Get a list of Employee Transfers
      description: Returns a list of Employee Transfers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific SMS Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the SMS Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified SMS Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Transfer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Transfer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Transfer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Transfer/{DocumentName}':
    get:
      summary: Get a list of Compensatory Leave Requests
      description: Returns a list of Compensatory Leave Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Compensatory Leave Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Transfer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Transfer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Transfer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Compensatory Leave Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Compensatory Leave Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Compensatory Leave Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Compensatory Leave Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Compensatory Leave Request/{DocumentName}':
    get:
      summary: Get a list of Routings
      description: Returns a list of Routings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Routing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Compensatory Leave Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Compensatory Leave Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Compensatory Leave Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Compensatory Leave Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Routing: null
      tags:
        - DocTypes
    post:
      summary: Create a new Routing
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Routing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Routing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Routing/{DocumentName}':
    get:
      summary: Get a list of Share Types
      description: Returns a list of Share Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Share Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Routing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Routing
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Routing you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Routing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Share Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Share Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Share Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Share Type/{DocumentName}':
    get:
      summary: Get a list of BOM Update Tools
      description: Returns a list of BOM Update Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM Update Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Share Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Share Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Share Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM Update Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM Update Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM Update Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM Update Tool/{DocumentName}':
    get:
      summary: Get a list of Job Applicant Sources
      description: Returns a list of Job Applicant Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Applicant Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM Update Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM Update Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM Update Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Applicant Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Applicant Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Applicant Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Applicant Source/{DocumentName}':
    get:
      summary: Get a list of Item Alternatives
      description: Returns a list of Item Alternatives
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Alternative'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Applicant Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Applicant Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Applicant Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Alternative: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Alternative
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Alternative created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Alternative'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Alternative/{DocumentName}':
    get:
      summary: Get a list of Identification Document Types
      description: Returns a list of Identification Document Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Identification Document Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Alternative'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Alternative
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Alternative you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Alternative
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Identification Document Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Identification Document Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Identification Document Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Identification Document Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Identification Document Type/{DocumentName}':
    get:
      summary: Get a list of Currency Exchanges
      description: Returns a list of Currency Exchanges
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Currency Exchange'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Identification Document Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Identification Document Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Identification Document Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Identification Document Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Currency Exchange: null
      tags:
        - DocTypes
    post:
      summary: Create a new Currency Exchange
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Currency Exchange created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Currency Exchange/{DocumentName}':
    get:
      summary: Get a list of Purpose of Travels
      description: Returns a list of Purpose of Travels
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purpose of Travel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Currency Exchange
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Currency Exchange you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Currency Exchange
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purpose of Travel: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purpose of Travel
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purpose of Travel created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purpose of Travel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purpose of Travel/{DocumentName}':
    get:
      summary: Get a list of Finance Books
      description: Returns a list of Finance Books
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Finance Book'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purpose of Travel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purpose of Travel
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purpose of Travel you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purpose of Travel
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Finance Book: null
      tags:
        - DocTypes
    post:
      summary: Create a new Finance Book
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Finance Book created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Finance Book'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Finance Book/{DocumentName}':
    get:
      summary: Get a list of UOM Categorys
      description: Returns a list of UOM Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UOM Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Finance Book'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Finance Book
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Finance Book you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Finance Book
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UOM Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new UOM Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UOM Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UOM Category/{DocumentName}':
    get:
      summary: Get a list of Party Types
      description: Returns a list of Party Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Party Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UOM Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UOM Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UOM Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Party Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Party Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Party Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Party Type/{DocumentName}':
    get:
      summary: Get a list of Employee Health Insurances
      description: Returns a list of Employee Health Insurances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Health Insurance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Party Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Party Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Party Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Health Insurance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Health Insurance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Health Insurance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Health Insurance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Health Insurance/{DocumentName}':
    get:
      summary: Get a list of Projects Settingss
      description: Returns a list of Projects Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Projects Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Health Insurance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Health Insurance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Health Insurance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Health Insurance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Projects Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Projects Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Projects Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Projects Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Projects Settings/{DocumentName}':
    get:
      summary: Get a list of Item Variant Settingss
      description: Returns a list of Item Variant Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Variant Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Projects Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Projects Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Projects Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Projects Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Variant Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Variant Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Variant Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Variant Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Variant Settings/{DocumentName}':
    get:
      summary: Get a list of Daily Work Summarys
      description: Returns a list of Daily Work Summarys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Daily Work Summary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Variant Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Variant Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Variant Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Variant Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Daily Work Summary: null
      tags:
        - DocTypes
    post:
      summary: Create a new Daily Work Summary
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Daily Work Summary created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Daily Work Summary/{DocumentName}':
    get:
      summary: Get a list of Daily Work Summary Groups
      description: Returns a list of Daily Work Summary Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Daily Work Summary Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Daily Work Summary
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Daily Work Summary you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Daily Work Summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Daily Work Summary Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Daily Work Summary Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Daily Work Summary Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Daily Work Summary Group/{DocumentName}':
    get:
      summary: Get a list of Training Programs
      description: Returns a list of Training Programs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Daily Work Summary Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Daily Work Summary Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Daily Work Summary Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Program: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Program
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Program created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Program/{DocumentName}':
    get:
      summary: Get a list of Opportunity Types
      description: Returns a list of Opportunity Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opportunity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Program
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Program you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Program
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opportunity Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opportunity Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opportunity Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opportunity Type/{DocumentName}':
    get:
      summary: Get a list of SMS Centers
      description: Returns a list of SMS Centers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SMS Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opportunity Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opportunity Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opportunity Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/SMS Center: null
      tags:
        - DocTypes
    post:
      summary: Create a new SMS Center
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: SMS Center created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/SMS Center/{DocumentName}':
    get:
      summary: Get a list of Project Types
      description: Returns a list of Project Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific SMS Center
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the SMS Center you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified SMS Center
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project Type/{DocumentName}':
    get:
      summary: Get a list of Activity Types
      description: Returns a list of Activity Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Activity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Activity Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Activity Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Activity Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Activity Type/{DocumentName}':
    get:
      summary: Get a list of Monthly Distributions
      description: Returns a list of Monthly Distributions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Monthly Distribution'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Activity Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Activity Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Activity Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Monthly Distribution: null
      tags:
        - DocTypes
    post:
      summary: Create a new Monthly Distribution
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Monthly Distribution created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Monthly Distribution'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Monthly Distribution/{DocumentName}':
    get:
      summary: Get a list of Interests
      description: Returns a list of Interests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Monthly Distribution'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Monthly Distribution
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Monthly Distribution you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Monthly Distribution
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interest: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interest
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interest created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interest/{DocumentName}':
    get:
      summary: Get a list of Branchs
      description: Returns a list of Branchs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Branch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interest
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interest you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interest
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Branch: null
      tags:
        - DocTypes
    post:
      summary: Create a new Branch
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Branch created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Branch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Branch/{DocumentName}':
    get:
      summary: Get a list of Offer Terms
      description: Returns a list of Offer Terms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Offer Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Branch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Branch
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Branch you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Branch
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Offer Term: null
      tags:
        - DocTypes
    post:
      summary: Create a new Offer Term
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Offer Term created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Offer Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Offer Term/{DocumentName}':
    get:
      summary: Get a list of Cheque Print Templates
      description: Returns a list of Cheque Print Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cheque Print Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Offer Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Offer Term
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Offer Term you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Offer Term
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cheque Print Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cheque Print Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cheque Print Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cheque Print Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cheque Print Template/{DocumentName}':
    get:
      summary: Get a list of Rename Tools
      description: Returns a list of Rename Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Rename Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cheque Print Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cheque Print Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cheque Print Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cheque Print Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Rename Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Rename Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Rename Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Rename Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Rename Tool/{DocumentName}':
    get:
      summary: Get a list of Authorization Controls
      description: Returns a list of Authorization Controls
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Rename Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Rename Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Rename Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Rename Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Authorization Control: null
      tags:
        - DocTypes
    post:
      summary: Create a new Authorization Control
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Authorization Control created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Authorization Control/{DocumentName}':
    get:
      summary: Get a specific Authorization Control
      description: Get a Authorization Control by it's name
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Authorization Control you'd like to receive.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
      responses:
        '200':
          description: Found requested document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Authorization Control
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Authorization Control you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Authorization Control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
components:
  parameters:
    Fields:
      in: query
      name: fields
      schema:
        type: array
        items:
          type: string
        default:
          - name
      description: |
        By default, only the "name" field is included in the listing, to add more fields,
        you can pass the fields param to GET request. For example, fields=["name","country"]
    Filters:
      in: query
      name: filters
      schema:
        type: array
        items:
          type: array
          items:
            type: string
      description: |
        You can filter the listing using sql conditions by passing them as the filters GET param.
        Each condition is an array of the format, [{doctype}, {field}, {operator}, {value}].
        For example, filters=[["Customer", "country", "=", "India"]]
    PageLength:
      in: query
      name: limit_page_length
      schema:
        type: integer
        default: 20
      description: |
        By default, all listings are returned paginated. With this parameter you can change the
        page size (how many items are teturned at once).
    PageStart:
      in: query
      name: limit_start
      schema:
        type: integer
        default: 0
      description: |
        To request successive pages, pass a multiple of your limit_page_length as limit_start.
        For Example, to request the second page, pass limit_start as 20.
  schemas:
    Copilot Settings:
      type: object
      properties: null
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              exc:
                type: string
                example: Traceback (most recent call last) ...
              _server_messages:
                type: string
                example: '[{"message": "Not permitted"}]'
        text/html:
          schema:
            type: string
    Forbidden:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              locals:
                type: string
              exc:
                type: string
                example: Traceback (most recent call last) ...
              _server_messages:
                type: string
                example: Incorrect password
        text/html:
          schema:
            type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Get your API keys at User -> Api Access -> Generate Keys.
        "headers = {'Authorization': 'token <api_key>:<api_secret>'}"
    basicAuth:
      type: http
      scheme: basic
      description: |
        Get your API keys at User -> Api Access -> Generate Keys.
        username = api_key; password = api_secret
        [More info](https://frappe.io/docs/user/en/guides/integration/token_based_auth)
    oAuth2:
      type: oauth2
      description: |
        This API uses OAuth 2 with the authorization code flow.
        [More info]https://frappe.io/docs/user/en/guides/integration/using_oauth)
      flows:
        authorizationCode:
          authorizationUrl: /method/frappe.integrations.oauth2.authorize
          tokenUrl: /method/frappe.integrations.oauth2.get_token
          refreshUrl: /method/frappe.integrations.oauth2.get_token
          scopes:
            all: Same permissions as the user who created the oAuth client
tags:
  - name: DocTypes
    description: 'Create, read, update or delete any document'
  - name: Whitelisted Methods
    description: Call a server method
externalDocs:
  url: 'https://frappe.io/docs/user/en/api/rest'
