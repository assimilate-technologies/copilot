openapi: 3.0.0
info:
  version: '13'
  title: Frappe / ERPNext API
  license:
    name: GPL-3.0
    url: 'http://www.gnu.de/documents/gpl-3.0.en.html'
servers:
  - url: 'http://erpnext.local:8001'
    description: TODO
paths:
  /api/method/rename_doc:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: old_name
          in: path
          required: true
          schema:
            type: string
        - name: new_name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: old_name
          in: path
          required: true
          schema:
            type: string
        - name: new_name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/ping:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_follow:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: following
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: following
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/follow_document:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unfollow_document:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_follow_users:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: doc_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/export_customizations:
    get:
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: sync_on_migrate
          in: path
          required: true
          schema:
            type: string
        - name: with_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: sync_on_migrate
          in: path
          required: true
          schema:
            type: string
        - name: with_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_transitions:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: workflow
          in: path
          required: true
          schema:
            type: string
        - name: raise_exception
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: workflow
          in: path
          required: true
          schema:
            type: string
        - name: raise_exception
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_workflow:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/can_cancel_document:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_workflow_approval:
    get:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docnames
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_common_transition_actions:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search:
    get:
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/web_search:
    get:
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: scope
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: scope
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/_submit:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/_cancel:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/_rename:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
        - name: validate_rename
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
        - name: validate_rename
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/submit:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state_fieldname
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state_fieldname
          in: path
          required: true
          schema:
            type: string
        - name: workflow_state
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rename:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
        - name: validate_rename
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: force
          in: path
          required: true
          schema:
            type: string
        - name: validate_rename
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_subscribed_documents:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/set_seen_value:
    get:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_notification_logs:
    get:
      parameters:
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_all_as_read:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/mark_as_read:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/trigger_indicator_hide:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/add:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: read
          in: path
          required: true
          schema:
            type: string
        - name: write
          in: path
          required: true
          schema:
            type: string
        - name: submit
          in: path
          required: true
          schema:
            type: string
        - name: share
          in: path
          required: true
          schema:
            type: string
        - name: everyone
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: read
          in: path
          required: true
          schema:
            type: string
        - name: write
          in: path
          required: true
          schema:
            type: string
        - name: submit
          in: path
          required: true
          schema:
            type: string
        - name: share
          in: path
          required: true
          schema:
            type: string
        - name: everyone
          in: path
          required: true
          schema:
            type: string
        - name: notify
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_permission:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: permission_to
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: everyone
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: permission_to
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: everyone
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_users:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_access_log:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: document
          in: path
          required: true
          schema:
            type: string
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: file_type
          in: path
          required: true
          schema:
            type: string
        - name: report_name
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: string
        - name: columns
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: document
          in: path
          required: true
          schema:
            type: string
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: file_type
          in: path
          required: true
          schema:
            type: string
        - name: report_name
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: string
        - name: columns
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: pathname
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: pathname
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/wrapper_fn:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_report:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: report_settings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: report_settings
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_report:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete_items:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_filter_dashboard_data:
    get:
      parameters:
        - name: stats
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: stats
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_list:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: order_by
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: limit_page_length
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: or_filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: order_by
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: limit_page_length
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: or_filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_count:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: cache
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: cache
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_value:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: debug
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_single_value:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_value:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/insert:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/insert_many:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/delete:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/bulk_update:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/has_permission:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: perm_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: perm_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_doc_permissions:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_password:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_js:
    get:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_time_zone:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/attach_file:
    get:
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
        - name: filedata
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: decode_base64
          in: path
          required: true
          schema:
            type: string
        - name: is_private
          in: path
          required: true
          schema:
            type: string
        - name: docfield
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
        - name: filedata
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: decode_base64
          in: path
          required: true
          schema:
            type: string
        - name: is_private
          in: path
          required: true
          schema:
            type: string
        - name: docfield
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/is_document_amended:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/validate_link:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_translations_for_source:
    get:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: translation_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: translation_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_translations:
    get:
      parameters:
        - name: source_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_messages:
    get:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: search_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
        - name: search_text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_source_additional_info:
    get:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contributions:
    get:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contribution_status:
    get:
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_all_languages:
    get:
      parameters:
        - name: with_language_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: with_language_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/clear:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_boot_assets_json:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/send_csv_to_client:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/version:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/logout:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/web_logout:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/uploadfile:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/upload_file:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/download_file:
    get:
      parameters:
        - name: file_url
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file_url
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/getpage:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/reset_tour:
    get:
      parameters:
        - name: tour_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tour_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_user_status:
    get:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: step
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: step
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/deferred_insert:
    get:
      parameters:
        - name: routes
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: routes
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/frequently_visited_links:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/getdoc:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/getdoctype:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: with_parent
          in: path
          required: true
          schema:
            type: string
        - name: cached_timestamp
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: with_parent
          in: path
          required: true
          schema:
            type: string
        - name: cached_timestamp
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_docinfo:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_communications:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_info_for_viewers:
    get:
      parameters:
        - name: users
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: users
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contact_list:
    get:
      parameters:
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/relink:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: reference_doctype
          in: path
          required: true
          schema:
            type: string
        - name: reference_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_communication_doctype:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_email_flag_queue:
    get:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: names
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_as_closed_open:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/move_email:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: email_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: email_account
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_as_trash:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/mark_as_spam:
    get:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: sender
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: communication
          in: path
          required: true
          schema:
            type: string
        - name: sender
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/revert:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: ignore_permissions
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_review_points:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_energy_points:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_energy_and_review_points:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/review:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
        - name: to_user
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: review_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: points
          in: path
          required: true
          schema:
            type: string
        - name: to_user
          in: path
          required: true
          schema:
            type: string
        - name: reason
          in: path
          required: true
          schema:
            type: string
        - name: review_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_reviews:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_last_known_versions:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_versions:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/show_update_popup:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/make_view_log:
    get:
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: referrer
          in: path
          required: true
          schema:
            type: string
        - name: browser
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: url
          in: path
          required: true
          schema:
            type: string
        - name: user_tz
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: referrer
          in: path
          required: true
          schema:
            type: string
        - name: browser
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: url
          in: path
          required: true
          schema:
            type: string
        - name: user_tz
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_page_view_count:
    get:
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_otp_secret:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_logged_user:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/wrapper:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_notification_info:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_auto_account_deletion:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/add_attachments:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: attachments
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/optimize_file:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/unzip_file:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_attached_images:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_files_in_folder:
    get:
      parameters:
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: folder
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_length
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_files_by_search_text:
    get:
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_max_file_size:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/create_new_folder:
    get:
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
        - name: folder
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/move_file:
    get:
      parameters:
        - name: file_list
          in: path
          required: true
          schema:
            type: string
        - name: new_parent
          in: path
          required: true
          schema:
            type: string
        - name: old_parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: file_list
          in: path
          required: true
          schema:
            type: string
        - name: new_parent
          in: path
          required: true
          schema:
            type: string
        - name: old_parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/zip_files:
    get:
      parameters:
        - name: files
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: files
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_user_icon:
    get:
      parameters:
        - name: _doctype
          in: path
          required: true
          schema:
            type: string
        - name: _report
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: link
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: standard
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: _doctype
          in: path
          required: true
          schema:
            type: string
        - name: _report
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: link
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: standard
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_order:
    get:
      parameters:
        - name: new_order
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: new_order
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_icons:
    get:
      parameters:
        - name: hidden_list
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: hidden_list
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_module_icons:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/hide:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/hide_module:
    get:
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_links_for_module:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: module
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: module
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_desktop_settings:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_hidden_modules:
    get:
      parameters:
        - name: category_map
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: category_map
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_global_hidden_modules:
    get:
      parameters:
        - name: modules
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: modules
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_modules_order:
    get:
      parameters:
        - name: module_category
          in: path
          required: true
          schema:
            type: string
        - name: modules
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module_category
          in: path
          required: true
          schema:
            type: string
        - name: modules
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_links_for_module:
    get:
      parameters:
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: links
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: links
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_options_for_show_hide_cards:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_options_for_global_modules:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_options_for_user_blocked_modules:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_home_settings:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_user_linked_doctypes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_id:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_timezones:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_all_roles:
    get:
      parameters:
        - name: arg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: arg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_roles:
    get:
      parameters:
        - name: arg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: arg
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_perm_info:
    get:
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_password:
    get:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: logout_all_sessions
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: logout_all_sessions
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/test_password_strength:
    get:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
        - name: user_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: new_password
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: old_password
          in: path
          required: true
          schema:
            type: string
        - name: user_data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/has_email_account:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_email_awaiting:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/verify_password:
    get:
      parameters:
        - name: password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: password
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/sign_up:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: full_name
          in: path
          required: true
          schema:
            type: string
        - name: verify_terms
          in: path
          required: true
          schema:
            type: string
        - name: user_category
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: full_name
          in: path
          required: true
          schema:
            type: string
        - name: verify_terms
          in: path
          required: true
          schema:
            type: string
        - name: user_category
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset_password:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/user_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_role_profile:
    get:
      parameters:
        - name: role_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: role_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_module_profile:
    get:
      parameters:
        - name: module_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: module_profile
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/generate_keys:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/switch_theme:
    get:
      parameters:
        - name: theme
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: theme
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_workspace_sidebar_items:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_onboarding_step:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/savedocs:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_tag:
    get:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_tags:
    get:
      parameters:
        - name: tags
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tags
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: color
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_tag:
    get:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: dt
          in: path
          required: true
          schema:
            type: string
        - name: dn
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tagged_docs:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tags:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_documents_for_tag:
    get:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_tags_list_for_awesomebar:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/make_mapped_doc:
    get:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: selected_children
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: selected_children
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/map_docs:
    get:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_names
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
        - name: source_names
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/activate_scheduler:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_scheduler_status:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_document_title:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: enqueue
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
        - name: enqueue
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_html_and_style:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: meta
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
        - name: trigger_print
          in: path
          required: true
          schema:
            type: string
        - name: style
          in: path
          required: true
          schema:
            type: string
        - name: settings
          in: path
          required: true
          schema:
            type: string
        - name: templates
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: meta
          in: path
          required: true
          schema:
            type: string
        - name: no_letterhead
          in: path
          required: true
          schema:
            type: string
        - name: letterhead
          in: path
          required: true
          schema:
            type: string
        - name: trigger_print
          in: path
          required: true
          schema:
            type: string
        - name: style
          in: path
          required: true
          schema:
            type: string
        - name: settings
          in: path
          required: true
          schema:
            type: string
        - name: templates
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_rendered_raw_commands:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: meta
          in: path
          required: true
          schema:
            type: string
        - name: lang
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: print_format
          in: path
          required: true
          schema:
            type: string
        - name: meta
          in: path
          required: true
          schema:
            type: string
        - name: lang
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rebuild_tree:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent_field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent_field
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_dashboard_chart:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_report_chart:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_chart_to_dashboard:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_charts_for_user:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_parent_doctypes:
    get:
      parameters:
        - name: child_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: child_type
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_chart_data:
    get:
      parameters:
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
        - name: timespan
          in: path
          required: true
          schema:
            type: string
        - name: timegrain
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: chart_name
          in: path
          required: true
          schema:
            type: string
        - name: timespan
          in: path
          required: true
          schema:
            type: string
        - name: timegrain
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_course_completion_data:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_payment_options:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: phone
          in: path
          required: true
          schema:
            type: string
        - name: country
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: phone
          in: path
          required: true
          schema:
            type: string
        - name: country
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/verify_payment:
    get:
      parameters:
        - name: response
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: address
          in: path
          required: true
          schema:
            type: string
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: response
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: address
          in: path
          required: true
          schema:
            type: string
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/change_currency:
    get:
      parameters:
        - name: amount
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
        - name: country
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: amount
          in: path
          required: true
          schema:
            type: string
        - name: currency
          in: path
          required: true
          schema:
            type: string
        - name: country
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/search_users:
    get:
      parameters:
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: text
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/save_role:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: role
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/load:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/is_cart_enabled:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/filter_dynamic_link_doctypes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/invite_user:
    get:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_contact_details:
    get:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: contact
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/contact_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/address_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_reviews:
    get:
      parameters:
        - name: web_item
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: end
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_item
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: end
          in: path
          required: true
          schema:
            type: string
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_item_review:
    get:
      parameters:
        - name: web_item
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: rating
          in: path
          required: true
          schema:
            type: string
        - name: comment
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: web_item
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
        - name: rating
          in: path
          required: true
          schema:
            type: string
        - name: comment
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_address:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: sort_key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: sort_key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_address_display:
    get:
      parameters:
        - name: address_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: address_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/convert_group_to_ledger:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/convert_ledger_to_group:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_parent_account:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_account_number:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: account_name
          in: path
          required: true
          schema:
            type: string
        - name: account_number
          in: path
          required: true
          schema:
            type: string
        - name: from_descendant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: account_name
          in: path
          required: true
          schema:
            type: string
        - name: account_number
          in: path
          required: true
          schema:
            type: string
        - name: from_descendant
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/merge_account:
    get:
      parameters:
        - name: old
          in: path
          required: true
          schema:
            type: string
        - name: new
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: old
          in: path
          required: true
          schema:
            type: string
        - name: new
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_root_company:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_fields_label:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/rename_fieldname:
    get:
      parameters:
        - name: custom_field
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: custom_field
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/disable_dimension:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_dimensions:
    get:
      parameters:
        - name: with_cost_center_and_project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: with_cost_center_and_project
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_children:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_node:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/convert_to_group_or_ledger:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_stock_balance:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: with_valuation_rate
          in: path
          required: true
          schema:
            type: string
        - name: with_serial_no
          in: path
          required: true
          schema:
            type: string
        - name: inventory_dimensions_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: posting_date
          in: path
          required: true
          schema:
            type: string
        - name: posting_time
          in: path
          required: true
          schema:
            type: string
        - name: with_valuation_rate
          in: path
          required: true
          schema:
            type: string
        - name: with_serial_no
          in: path
          required: true
          schema:
            type: string
        - name: inventory_dimensions_dict
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_latest_stock_qty:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_incoming_rate:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: raise_error_if_no_rate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: raise_error_if_no_rate
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/scan_barcode:
    get:
      parameters:
        - name: search_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: search_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_fiscal_year:
    get:
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: fiscal_year
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: verbose
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: boolean
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: fiscal_year
          in: path
          required: true
          schema:
            type: string
        - name: label
          in: path
          required: true
          schema:
            type: string
        - name: verbose
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: as_dict
          in: path
          required: true
          schema:
            type: string
        - name: boolean
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_fiscal_year_filter_field:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_balance_on:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
        - name: ignore_account_permission
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: party_type
          in: path
          required: true
          schema:
            type: string
        - name: party
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: in_account_currency
          in: path
          required: true
          schema:
            type: string
        - name: cost_center
          in: path
          required: true
          schema:
            type: string
        - name: ignore_account_permission
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_ac:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_cc:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_company_default:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: ignore_validation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: fieldname
          in: path
          required: true
          schema:
            type: string
        - name: ignore_validation
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_companies:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_account_balances:
    get:
      parameters:
        - name: accounts
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: accounts
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_cost_center:
    get:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_name
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_number
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docname
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_name
          in: path
          required: true
          schema:
            type: string
        - name: cost_center_number
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: merge
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_coa:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
        - name: chart
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: is_root
          in: path
          required: true
          schema:
            type: string
        - name: chart
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_pricing_rule:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/remove_pricing_rules:
    get:
      parameters:
        - name: item_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_list
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_pricing_rule:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_uoms:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_qty:
    get:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batches_by_oldest:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/split_batch:
    get:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: new_batch_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: new_batch_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_no:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: throw
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: throw
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pos_reserved_batch_qty:
    get:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_cart_quotation:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_shipping_addresses:
    get:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_billing_addresses:
    get:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: party
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/place_order:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/request_for_quotation:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/update_cart:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: additional_notes
          in: path
          required: true
          schema:
            type: string
        - name: with_items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: additional_notes
          in: path
          required: true
          schema:
            type: string
        - name: with_items
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_shopping_cart_menu:
    get:
      parameters:
        - name: context
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: context
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_new_address:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_lead_for_item_inquiry:
    get:
      parameters:
        - name: lead
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: message
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: lead
          in: path
          required: true
          schema:
            type: string
        - name: subject
          in: path
          required: true
          schema:
            type: string
        - name: message
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_terms_and_conditions:
    get:
      parameters:
        - name: terms_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: terms_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_cart_address:
    get:
      parameters:
        - name: address_type
          in: path
          required: true
          schema:
            type: string
        - name: address_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: address_type
          in: path
          required: true
          schema:
            type: string
        - name: address_name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_shipping_rule:
    get:
      parameters:
        - name: shipping_rule
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: shipping_rule
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_coupon_code:
    get:
      parameters:
        - name: applied_code
          in: path
          required: true
          schema:
            type: string
        - name: applied_referral_sales_partner
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: applied_code
          in: path
          required: true
          schema:
            type: string
        - name: applied_referral_sales_partner
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/copy_specification_from_item_group:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_website_item:
    get:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_exchange_rate:
    get:
      parameters:
        - name: from_currency
          in: path
          required: true
          schema:
            type: string
        - name: to_currency
          in: path
          required: true
          schema:
            type: string
        - name: transaction_date
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: from_currency
          in: path
          required: true
          schema:
            type: string
        - name: to_currency
          in: path
          required: true
          schema:
            type: string
        - name: transaction_date
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_variant:
    get:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: variant
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer_part_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: variant
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer_part_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_variant:
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/enqueue_multiple_variant_creation:
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/create_variant_doc_for_quick_entry:
    get:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: template
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: for_validate
          in: path
          required: true
          schema:
            type: string
        - name: overwrite_warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: doc
          in: path
          required: true
          schema:
            type: string
        - name: for_validate
          in: path
          required: true
          schema:
            type: string
        - name: overwrite_warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_uom_conv_factor:
    get:
      parameters:
        - name: uom
          in: path
          required: true
          schema:
            type: string
        - name: stock_uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: uom
          in: path
          required: true
          schema:
            type: string
        - name: stock_uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_attribute:
    get:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: attribute_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: parent
          in: path
          required: true
          schema:
            type: string
        - name: attribute_value
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_asset_naming_series:
    get:
      parameters:
        summary: Call a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
    post:
      parameters:
        summary: Post data to a remote procedure
      responses:
        '200':
          description: Successful
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Whitelisted Methods
  /api/method/get_item_manufacturer_part_no:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_code:
    get:
      parameters:
        - name: barcode
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: barcode
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_tax_info:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: item_codes
          in: path
          required: true
          schema:
            type: string
        - name: item_rates
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_templates
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: tax_category
          in: path
          required: true
          schema:
            type: string
        - name: item_codes
          in: path
          required: true
          schema:
            type: string
        - name: item_rates
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_templates
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_item_tax_map:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_template
          in: path
          required: true
          schema:
            type: string
        - name: as_json
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: item_tax_template
          in: path
          required: true
          schema:
            type: string
        - name: as_json
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/calculate_service_end_date:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_pos_profile:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: pos_profile
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: pos_profile
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_conversion_factor:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: uom
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_projected_qty:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bin_details:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: include_child_warehouses
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: include_child_warehouses
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_serial_no_details:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: stock_qty
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: stock_qty
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bin_details_and_serial_nos:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: has_batch_no
          in: path
          required: true
          schema:
            type: string
        - name: stock_qty
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: has_batch_no
          in: path
          required: true
          schema:
            type: string
        - name: stock_qty
          in: path
          required: true
          schema:
            type: string
        - name: serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_batch_qty_and_serial_no:
    get:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: stock_qty
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: has_serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: batch_no
          in: path
          required: true
          schema:
            type: string
        - name: stock_qty
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: has_serial_no
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/apply_price_list:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: as_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: as_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_default_bom:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_valuation_rate:
    get:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: item_code
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: warehouse
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_serial_no:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: serial_nos
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
        - name: serial_nos
          in: path
          required: true
          schema:
            type: string
        - name: sales_order
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_blanket_order_details:
    get:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_routing:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_material_detail:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: args
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/update_cost:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: update_parent
          in: path
          required: true
          schema:
            type: string
        - name: from_child_bom
          in: path
          required: true
          schema:
            type: string
        - name: update_hour_rate
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: update_parent
          in: path
          required: true
          schema:
            type: string
        - name: from_child_bom
          in: path
          required: true
          schema:
            type: string
        - name: update_hour_rate
          in: path
          required: true
          schema:
            type: string
        - name: save
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_items:
    get:
      parameters:
        - name: bom
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: fetch_exploded
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bom
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: qty
          in: path
          required: true
          schema:
            type: string
        - name: fetch_exploded
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_bom_diff:
    get:
      parameters:
        - name: bom1
          in: path
          required: true
          schema:
            type: string
        - name: bom2
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: bom1
          in: path
          required: true
          schema:
            type: string
        - name: bom2
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/item_query:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/make_variant_bom:
    get:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: bom_no
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: variant_items
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
        - name: bom_no
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
        - name: variant_items
          in: path
          required: true
          schema:
            type: string
        - name: target_doc
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_job_requisitions:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: job_reqs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
        - name: job_reqs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_designation_counts:
    get:
      parameters:
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: job_opening
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: job_opening
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_active_staffing_plan_details:
    get:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: company
          in: path
          required: true
          schema:
            type: string
        - name: designation
          in: path
          required: true
          schema:
            type: string
        - name: from_date
          in: path
          required: true
          schema:
            type: string
        - name: to_date
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/set_as_default:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_apps:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_submitted_linked_docs:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/cancel_all_linked_docs:
    get:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: ignore_doctypes_on_cancel_all
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: docs
          in: path
          required: true
          schema:
            type: string
        - name: ignore_doctypes_on_cancel_all
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_linked_doctypes:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: without_ignore_user_permissions_enabled
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: without_ignore_user_permissions_enabled
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_user_permissions:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_applicable_for_doctype_list:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: searchfield
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: path
          required: true
          schema:
            type: string
        - name: page_len
          in: path
          required: true
          schema:
            type: string
        - name: filters
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/check_applicable_doc_perm:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: docname
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/clear_user_permissions:
    get:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: for_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: for_doctype
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/add_user_permissions:
    get:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_country:
    get:
      parameters:
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: fields
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/get_list_data:
    get:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: cmd
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: doctype
          in: path
          required: true
          schema:
            type: string
        - name: txt
          in: path
          required: true
          schema:
            type: string
        - name: limit_start
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: path
          required: true
          schema:
            type: string
        - name: cmd
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: string
        - name: web_form_name
          in: path
          required: true
          schema:
            type: string
        - name: kwargs
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/reset:
    get:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: self
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/login_via_token:
    get:
      parameters:
        - name: login_token
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: login_token
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/send_login_link:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/method/login_via_key:
    get:
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
    'null':
      '200':
        description: Successful
      '401':
        $ref: '#/components/responses/UnauthorizedError'
      '403':
        $ref: '#/components/responses/Forbidden'
    post:
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      tags:
        - Whitelisted Methods
  /api/resource/Copilot Settings:
    post:
      summary: Create a new Copilot Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Copilot Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Copilot Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    get:
      summary: Get a list of Copilot Settingss
      description: Returns a list of Copilot Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Copilot Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Copilot Settings/{DocumentName}':
    get:
      summary: Get a list of Print Headings
      description: Returns a list of Print Headings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Heading'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Copilot Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Copilot Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Copilot Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Copilot Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Heading: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Heading
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Heading created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Heading'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Heading/{DocumentName}':
    get:
      summary: Get a list of LMS Batchs
      description: Returns a list of LMS Batchs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Heading'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Heading
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Heading you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Heading
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Batch: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Batch
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Batch created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Batch/{DocumentName}':
    get:
      summary: Get a list of LMS Timetable Templates
      description: Returns a list of LMS Timetable Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Timetable Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Batch
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Batch you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Batch
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Timetable Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Timetable Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Timetable Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Timetable Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Timetable Template/{DocumentName}':
    get:
      summary: Get a list of Addresss
      description: Returns a list of Addresss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Timetable Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Timetable Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Timetable Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Timetable Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Address: null
      tags:
        - DocTypes
    post:
      summary: Create a new Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Address created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Address/{DocumentName}':
    get:
      summary: Get a list of Web Forms
      description: Returns a list of Web Forms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Address
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Address you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Form: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Form
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Form created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Form/{DocumentName}':
    get:
      summary: Get a list of LMS Settingss
      description: Returns a list of LMS Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Form
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Form you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Form
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Settings/{DocumentName}':
    get:
      summary: Get a list of Integration Requests
      description: Returns a list of Integration Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Integration Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Integration Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Integration Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Integration Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Integration Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Integration Request/{DocumentName}':
    get:
      summary: Get a list of HD Tickets
      description: Returns a list of HD Tickets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Integration Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Integration Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Integration Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Integration Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket/{DocumentName}':
    get:
      summary: Get a list of LMS Assignment Submissions
      description: Returns a list of LMS Assignment Submissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Assignment Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Assignment Submission: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Assignment Submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Assignment Submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Assignment Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Assignment Submission/{DocumentName}':
    get:
      summary: Get a list of LMS Assignments
      description: Returns a list of LMS Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Assignment Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Assignment Submission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Assignment Submission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Assignment Submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Assignment/{DocumentName}':
    get:
      summary: Get a list of Contacts
      description: Returns a list of Contacts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contact: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contact created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contact/{DocumentName}':
    get:
      summary: Get a list of Inventory Dimensions
      description: Returns a list of Inventory Dimensions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Inventory Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contact
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contact you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Inventory Dimension: null
      tags:
        - DocTypes
    post:
      summary: Create a new Inventory Dimension
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Inventory Dimension created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Inventory Dimension/{DocumentName}':
    get:
      summary: Get a list of Currency Exchange Settingss
      description: Returns a list of Currency Exchange Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Currency Exchange Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inventory Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Inventory Dimension
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Inventory Dimension you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Inventory Dimension
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Currency Exchange Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Currency Exchange Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Currency Exchange Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Currency Exchange Settings/{DocumentName}':
    get:
      summary: Get a list of Employees
      description: Returns a list of Employees
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Currency Exchange Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Currency Exchange Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Currency Exchange Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee/{DocumentName}':
    get:
      summary: Get a list of Assets
      description: Returns a list of Assets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset/{DocumentName}':
    get:
      summary: Get a list of Asset Capitalizations
      description: Returns a list of Asset Capitalizations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Capitalization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Capitalization: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Capitalization
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Capitalization created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Capitalization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Capitalization/{DocumentName}':
    get:
      summary: Get a list of LMS Enrollments
      description: Returns a list of LMS Enrollments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Enrollment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Capitalization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Capitalization
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Capitalization you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Capitalization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Enrollment: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Enrollment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Enrollment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Enrollment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Enrollment/{DocumentName}':
    get:
      summary: Get a list of Purchase Invoices
      description: Returns a list of Purchase Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Enrollment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Enrollment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Enrollment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Enrollment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Invoice/{DocumentName}':
    get:
      summary: Get a list of Purchase Receipts
      description: Returns a list of Purchase Receipts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Receipt: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Receipt
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Receipt created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Receipt/{DocumentName}':
    get:
      summary: Get a list of Purchase Orders
      description: Returns a list of Purchase Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Receipt
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Receipt you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Order/{DocumentName}':
    get:
      summary: Get a list of Cohort Join Requests
      description: Returns a list of Cohort Join Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cohort Join Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cohort Join Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cohort Join Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cohort Join Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Join Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cohort Join Request/{DocumentName}':
    get:
      summary: Get a list of User Skills
      description: Returns a list of User Skills
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Join Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cohort Join Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cohort Join Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cohort Join Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Skill: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Skill
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Skill created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Skill/{DocumentName}':
    get:
      summary: Get a list of Industrys
      description: Returns a list of Industrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Industry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Skill
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Skill you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Skill
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Industry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Industry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Industry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Industry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Industry/{DocumentName}':
    get:
      summary: Get a list of Functions
      description: Returns a list of Functions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Function'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Industry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Industry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Industry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Industry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Function: null
      tags:
        - DocTypes
    post:
      summary: Create a new Function
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Function created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Function'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Function/{DocumentName}':
    get:
      summary: Get a list of Course Lessons
      description: Returns a list of Course Lessons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Course Lesson'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Function'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Function
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Function you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Function
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Course Lesson: null
      tags:
        - DocTypes
    post:
      summary: Create a new Course Lesson
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Course Lesson created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course Lesson'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Course Lesson/{DocumentName}':
    get:
      summary: Get a list of Course Chapters
      description: Returns a list of Course Chapters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Course Chapter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course Lesson'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Course Lesson
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Course Lesson you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Course Lesson
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Course Chapter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Course Chapter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Course Chapter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course Chapter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Course Chapter/{DocumentName}':
    get:
      summary: Get a list of Job Opportunitys
      description: Returns a list of Job Opportunitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course Chapter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Course Chapter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Course Chapter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Course Chapter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Opportunity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Opportunity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Opportunity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Opportunity/{DocumentName}':
    get:
      summary: Get a list of Goals
      description: Returns a list of Goals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Opportunity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Opportunity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Opportunity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Goal: null
      tags:
        - DocTypes
    post:
      summary: Create a new Goal
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Goal created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Goal/{DocumentName}':
    get:
      summary: Get a list of Production Plans
      description: Returns a list of Production Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Production Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Goal
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Goal you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Goal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Production Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Production Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Production Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Production Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Production Plan/{DocumentName}':
    get:
      summary: Get a list of Tasks
      description: Returns a list of Tasks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Production Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Production Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Production Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Production Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Task: null
      tags:
        - DocTypes
    post:
      summary: Create a new Task
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Task/{DocumentName}':
    get:
      summary: Get a list of LMS Certificate Evaluations
      description: Returns a list of LMS Certificate Evaluations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Certificate Evaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Task
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Task you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Task
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Certificate Evaluation: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Certificate Evaluation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Certificate Evaluation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Certificate Evaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Certificate Evaluation/{DocumentName}':
    get:
      summary: Get a list of Repost Payment Ledgers
      description: Returns a list of Repost Payment Ledgers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Payment Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Certificate Evaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Certificate Evaluation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Certificate Evaluation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Certificate Evaluation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Payment Ledger: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Payment Ledger
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Payment Ledger created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Payment Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Payment Ledger/{DocumentName}':
    get:
      summary: Get a list of Repost Accounting Ledgers
      description: Returns a list of Repost Accounting Ledgers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Accounting Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Payment Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Payment Ledger
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Payment Ledger you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Payment Ledger
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Accounting Ledger: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Accounting Ledger
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Accounting Ledger created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Accounting Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Accounting Ledger/{DocumentName}':
    get:
      summary: Get a list of Salary Slips
      description: Returns a list of Salary Slips
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Accounting Ledger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Accounting Ledger
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Accounting Ledger you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Accounting Ledger
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Slip: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Slip
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Slip created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Slip/{DocumentName}':
    get:
      summary: Get a list of Payroll Settingss
      description: Returns a list of Payroll Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payroll Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Slip
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Slip you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Slip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payroll Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payroll Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payroll Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payroll Settings/{DocumentName}':
    get:
      summary: Get a list of HD Ticket Comments
      description: Returns a list of HD Ticket Comments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payroll Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payroll Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payroll Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket Comment: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket Comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket Comment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket Comment/{DocumentName}':
    get:
      summary: Get a list of Inpatient Records
      description: Returns a list of Inpatient Records
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Inpatient Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket Comment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket Comment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket Comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Inpatient Record: null
      tags:
        - DocTypes
    post:
      summary: Create a new Inpatient Record
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Inpatient Record created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inpatient Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Inpatient Record/{DocumentName}':
    get:
      summary: Get a list of LMS Live Classs
      description: Returns a list of LMS Live Classs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Live Class'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inpatient Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Inpatient Record
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Inpatient Record you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Inpatient Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Live Class: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Live Class
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Live Class created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Live Class'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Live Class/{DocumentName}':
    get:
      summary: Get a list of HD Notifications
      description: Returns a list of HD Notifications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Live Class'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Live Class
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Live Class you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Live Class
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Notification: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Notification created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Notification/{DocumentName}':
    get:
      summary: Get a list of Dashboard Charts
      description: Returns a list of Dashboard Charts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Notification
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Notification you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard Chart: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard Chart
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard Chart created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard Chart/{DocumentName}':
    get:
      summary: Get a list of Material Requests
      description: Returns a list of Material Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Material Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard Chart
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard Chart you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard Chart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Material Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Material Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Material Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Material Request/{DocumentName}':
    get:
      summary: Get a list of Job Openings
      description: Returns a list of Job Openings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Opening'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Material Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Material Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Material Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Opening: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Opening
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Opening created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Opening'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Opening/{DocumentName}':
    get:
      summary: Get a list of Job Applicants
      description: Returns a list of Job Applicants
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Applicant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Opening'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Opening
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Opening you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Opening
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Applicant: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Applicant
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Applicant created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Applicant/{DocumentName}':
    get:
      summary: Get a list of System Settingss
      description: Returns a list of System Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/System Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Applicant
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Applicant you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Applicant
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/System Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new System Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: System Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/System Settings/{DocumentName}':
    get:
      summary: Get a list of LMS Certificates
      description: Returns a list of LMS Certificates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific System Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the System Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified System Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Certificate: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Certificate
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Certificate created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Certificate/{DocumentName}':
    get:
      summary: Get a list of Salary Structure Assignments
      description: Returns a list of Salary Structure Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Structure Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Certificate
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Certificate you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Certificate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Structure Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Structure Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Structure Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Structure Assignment/{DocumentName}':
    get:
      summary: Get a list of Website Items
      description: Returns a list of Website Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Structure Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Structure Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Structure Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Item/{DocumentName}':
    get:
      summary: Get a list of LMS Payments
      description: Returns a list of LMS Payments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Payment: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Payment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Payment/{DocumentName}':
    get:
      summary: Get a list of Period Closing Vouchers
      description: Returns a list of Period Closing Vouchers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Period Closing Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Payment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Payment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Period Closing Voucher: null
      tags:
        - DocTypes
    post:
      summary: Create a new Period Closing Voucher
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Period Closing Voucher created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Period Closing Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Period Closing Voucher/{DocumentName}':
    get:
      summary: Get a list of Items
      description: Returns a list of Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Period Closing Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Period Closing Voucher
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Period Closing Voucher you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Period Closing Voucher
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item/{DocumentName}':
    get:
      summary: Get a list of Raven Message Reactions
      description: Returns a list of Raven Message Reactions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Raven Message Reaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Raven Message Reaction: null
      tags:
        - DocTypes
    post:
      summary: Create a new Raven Message Reaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Raven Message Reaction created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Message Reaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Raven Message Reaction/{DocumentName}':
    get:
      summary: Get a list of Raven Users
      description: Returns a list of Raven Users
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Raven User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Message Reaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Raven Message Reaction
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Raven Message Reaction you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Raven Message Reaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Raven User: null
      tags:
        - DocTypes
    post:
      summary: Create a new Raven User
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Raven User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Raven User/{DocumentName}':
    get:
      summary: Get a list of Raven Channel Members
      description: Returns a list of Raven Channel Members
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Raven Channel Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Raven User
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Raven User you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Raven User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Raven Channel Member: null
      tags:
        - DocTypes
    post:
      summary: Create a new Raven Channel Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Raven Channel Member created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Channel Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Raven Channel Member/{DocumentName}':
    get:
      summary: Get a list of Loan Repayments
      description: Returns a list of Loan Repayments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Repayment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Channel Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Raven Channel Member
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Raven Channel Member you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Raven Channel Member
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Repayment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Repayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Repayment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Repayment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Repayment/{DocumentName}':
    get:
      summary: Get a list of Delivery Notes
      description: Returns a list of Delivery Notes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Delivery Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Repayment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Repayment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Repayment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Repayment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Delivery Note: null
      tags:
        - DocTypes
    post:
      summary: Create a new Delivery Note
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Delivery Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Delivery Note/{DocumentName}':
    get:
      summary: Get a list of Raven Channels
      description: Returns a list of Raven Channels
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Raven Channel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Delivery Note
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Delivery Note you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Delivery Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Raven Channel: null
      tags:
        - DocTypes
    post:
      summary: Create a new Raven Channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Raven Channel created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Channel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Raven Channel/{DocumentName}':
    get:
      summary: Get a list of HD Service Level Agreements
      description: Returns a list of HD Service Level Agreements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Channel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Raven Channel
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Raven Channel you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Raven Channel
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Service Level Agreement: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Service Level Agreement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Service Level Agreement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Service Level Agreement/{DocumentName}':
    get:
      summary: Get a list of HD Actions
      description: Returns a list of HD Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Service Level Agreement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Service Level Agreement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Service Level Agreement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Action/{DocumentName}':
    get:
      summary: Get a list of Quality Procedures
      description: Returns a list of Quality Procedures
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Procedure: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Procedure
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Procedure created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Procedure/{DocumentName}':
    get:
      summary: Get a list of Locations
      description: Returns a list of Locations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Procedure
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Procedure you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Procedure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Location: null
      tags:
        - DocTypes
    post:
      summary: Create a new Location
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Location created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Location/{DocumentName}':
    get:
      summary: Get a list of Unreconcile Paymentss
      description: Returns a list of Unreconcile Paymentss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Unreconcile Payments'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Location
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Location you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Location
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Unreconcile Payments: null
      tags:
        - DocTypes
    post:
      summary: Create a new Unreconcile Payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Unreconcile Payments created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unreconcile Payments'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Unreconcile Payments/{DocumentName}':
    get:
      summary: Get a list of Departments
      description: Returns a list of Departments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unreconcile Payments'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Unreconcile Payments
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Unreconcile Payments you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Unreconcile Payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Department: null
      tags:
        - DocTypes
    post:
      summary: Create a new Department
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Department created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Department/{DocumentName}':
    get:
      summary: Get a list of Process Statement Of Accountss
      description: Returns a list of Process Statement Of Accountss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Statement Of Accounts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Department
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Department you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Department
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Statement Of Accounts: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Statement Of Accounts
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Statement Of Accounts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Statement Of Accounts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Statement Of Accounts/{DocumentName}':
    get:
      summary: Get a list of LMS Courses
      description: Returns a list of LMS Courses
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Course'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Statement Of Accounts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Statement Of Accounts
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Statement Of Accounts you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Statement Of Accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Course: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Course created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Course/{DocumentName}':
    get:
      summary: Get a list of Salary Components
      description: Returns a list of Salary Components
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Component'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Course
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Course you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Course
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Component: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Component
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Component created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Component'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Component/{DocumentName}':
    get:
      summary: Get a list of HD Settingss
      description: Returns a list of HD Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Component'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Component
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Component you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Component
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Settings/{DocumentName}':
    get:
      summary: Get a list of LMS Certificate Requests
      description: Returns a list of LMS Certificate Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Certificate Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Certificate Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Certificate Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Certificate Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Certificate Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Certificate Request/{DocumentName}':
    get:
      summary: Get a list of Payment Reconciliations
      description: Returns a list of Payment Reconciliations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Certificate Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Certificate Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Certificate Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Certificate Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Reconciliation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Reconciliation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Reconciliation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Reconciliation/{DocumentName}':
    get:
      summary: Get a list of Selling Settingss
      description: Returns a list of Selling Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Selling Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Reconciliation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Reconciliation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Reconciliation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Selling Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Selling Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Selling Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Selling Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Selling Settings/{DocumentName}':
    get:
      summary: Get a list of DocTypes
      description: Returns a list of DocTypes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DocType'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Selling Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Selling Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Selling Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Selling Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DocType: null
      tags:
        - DocTypes
    post:
      summary: Create a new DocType
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DocType created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DocType/{DocumentName}':
    get:
      summary: Get a list of HD Articles
      description: Returns a list of HD Articles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DocType
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DocType you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DocType
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Article: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Article
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Article created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Article/{DocumentName}':
    get:
      summary: Get a list of HD Article Categorys
      description: Returns a list of HD Article Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Article Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Article
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Article you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Article
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Article Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Article Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Article Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Article Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Article Category/{DocumentName}':
    get:
      summary: Get a list of Shift Types
      description: Returns a list of Shift Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shift Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Article Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Article Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Article Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Article Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shift Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shift Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shift Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shift Type/{DocumentName}':
    get:
      summary: Get a list of Work Orders
      description: Returns a list of Work Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Work Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shift Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shift Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shift Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Work Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Work Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Work Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Work Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Work Order/{DocumentName}':
    get:
      summary: Get a list of HD Ticket Feedback Options
      description: Returns a list of HD Ticket Feedback Options
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket Feedback Option'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Work Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Work Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Work Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Work Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket Feedback Option: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket Feedback Option
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket Feedback Option created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Feedback Option'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket Feedback Option/{DocumentName}':
    get:
      summary: Get a list of Process Payment Reconciliations
      description: Returns a list of Process Payment Reconciliations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Feedback Option'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket Feedback Option
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket Feedback Option you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket Feedback Option
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Payment Reconciliation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Payment Reconciliation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Payment Reconciliation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Payment Reconciliation/{DocumentName}':
    get:
      summary: Get a list of Healthcare Settingss
      description: Returns a list of Healthcare Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Healthcare Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Payment Reconciliation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Payment Reconciliation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Payment Reconciliation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Healthcare Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Healthcare Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Healthcare Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Healthcare Settings/{DocumentName}':
    get:
      summary: Get a list of Journal Entrys
      description: Returns a list of Journal Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Journal Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Healthcare Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Healthcare Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Healthcare Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Journal Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Journal Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Journal Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Journal Entry/{DocumentName}':
    get:
      summary: Get a list of Request for Quotations
      description: Returns a list of Request for Quotations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Request for Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Journal Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Journal Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Journal Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Request for Quotation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Request for Quotation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Request for Quotation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Request for Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Request for Quotation/{DocumentName}':
    get:
      summary: Get a list of Vehicle Service Items
      description: Returns a list of Vehicle Service Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vehicle Service Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Request for Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Request for Quotation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Request for Quotation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Request for Quotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vehicle Service Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vehicle Service Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vehicle Service Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Service Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vehicle Service Item/{DocumentName}':
    get:
      summary: Get a list of HD Ticket Templates
      description: Returns a list of HD Ticket Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Service Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vehicle Service Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vehicle Service Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vehicle Service Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket Template/{DocumentName}':
    get:
      summary: Get a list of Leave Applications
      description: Returns a list of Leave Applications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Application: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Application
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Application created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Application/{DocumentName}':
    get:
      summary: Get a list of Non Conformances
      description: Returns a list of Non Conformances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Non Conformance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Application
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Application you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Application
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Non Conformance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Non Conformance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Non Conformance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Non Conformance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Non Conformance/{DocumentName}':
    get:
      summary: Get a list of Activity Logs
      description: Returns a list of Activity Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Activity Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Non Conformance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Non Conformance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Non Conformance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Non Conformance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Activity Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Activity Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Activity Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Activity Log/{DocumentName}':
    get:
      summary: Get a list of Accounts Settingss
      description: Returns a list of Accounts Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounts Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Activity Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Activity Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Activity Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounts Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounts Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounts Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounts Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounts Settings/{DocumentName}':
    get:
      summary: Get a list of HD Customers
      description: Returns a list of HD Customers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounts Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounts Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounts Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounts Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Customer: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Customer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Customer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Customer/{DocumentName}':
    get:
      summary: Get a list of Files
      description: Returns a list of Files
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/File'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Customer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Customer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Customer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/File: null
      tags:
        - DocTypes
    post:
      summary: Create a new File
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: File created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/File'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/File/{DocumentName}':
    get:
      summary: Get a list of HD Agents
      description: Returns a list of HD Agents
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Agent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/File'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific File
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the File you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified File
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Agent: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Agent
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Agent created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Agent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Agent/{DocumentName}':
    get:
      summary: Get a list of OAuth Clients
      description: Returns a list of OAuth Clients
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Client'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Agent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Agent
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Agent you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Agent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Client: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Client
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Client created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Client'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Client/{DocumentName}':
    get:
      summary: Get a list of Holiday Lists
      description: Returns a list of Holiday Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Client'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Client
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Client you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Client
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Holiday List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Holiday List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Holiday List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Holiday List/{DocumentName}':
    get:
      summary: Get a list of Payroll Entrys
      description: Returns a list of Payroll Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payroll Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Holiday List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Holiday List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Holiday List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payroll Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payroll Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payroll Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payroll Entry/{DocumentName}':
    get:
      summary: Get a list of Course Evaluators
      description: Returns a list of Course Evaluators
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Course Evaluator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payroll Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payroll Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payroll Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Course Evaluator: null
      tags:
        - DocTypes
    post:
      summary: Create a new Course Evaluator
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Course Evaluator created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course Evaluator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Course Evaluator/{DocumentName}':
    get:
      summary: Get a list of HD Ticket Types
      description: Returns a list of HD Ticket Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Course Evaluator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Course Evaluator
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Course Evaluator you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Course Evaluator
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket Type/{DocumentName}':
    get:
      summary: Get a list of Companys
      description: Returns a list of Companys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Company: null
      tags:
        - DocTypes
    post:
      summary: Create a new Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Company created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Company/{DocumentName}':
    get:
      summary: Get a list of Subcontracting Receipts
      description: Returns a list of Subcontracting Receipts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subcontracting Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Company
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Company you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Company
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subcontracting Receipt: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subcontracting Receipt
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subcontracting Receipt created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subcontracting Receipt/{DocumentName}':
    get:
      summary: Get a list of Console Logs
      description: Returns a list of Console Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Console Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Receipt'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subcontracting Receipt
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subcontracting Receipt you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subcontracting Receipt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Console Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Console Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Console Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Console Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Console Log/{DocumentName}':
    get:
      summary: Get a list of LMS Quizs
      description: Returns a list of LMS Quizs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Quiz'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Console Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Console Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Console Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Console Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Quiz: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Quiz
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Quiz created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Quiz'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Quiz/{DocumentName}':
    get:
      summary: Get a list of Employment Types
      description: Returns a list of Employment Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Quiz'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Quiz
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Quiz you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Quiz
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employment Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employment Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employment Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employment Type/{DocumentName}':
    get:
      summary: Get a list of Global Defaultss
      description: Returns a list of Global Defaultss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Global Defaults'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employment Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employment Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employment Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Global Defaults: null
      tags:
        - DocTypes
    post:
      summary: Create a new Global Defaults
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Global Defaults created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Defaults'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Global Defaults/{DocumentName}':
    get:
      summary: Get a list of Asset Movements
      description: Returns a list of Asset Movements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Movement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Defaults'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Global Defaults
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Global Defaults you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Global Defaults
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Movement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Movement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Movement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Movement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Movement/{DocumentName}':
    get:
      summary: Get a list of Delivery Trips
      description: Returns a list of Delivery Trips
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Delivery Trip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Movement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Movement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Movement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Movement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Delivery Trip: null
      tags:
        - DocTypes
    post:
      summary: Create a new Delivery Trip
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Delivery Trip created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Trip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Delivery Trip/{DocumentName}':
    get:
      summary: Get a list of Shift Assignments
      description: Returns a list of Shift Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shift Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Trip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Delivery Trip
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Delivery Trip you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Delivery Trip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shift Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shift Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shift Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shift Assignment/{DocumentName}':
    get:
      summary: Get a list of Lab Tests
      description: Returns a list of Lab Tests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lab Test'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shift Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shift Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shift Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lab Test: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lab Test
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lab Test created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lab Test/{DocumentName}':
    get:
      summary: Get a list of Raven Messages
      description: Returns a list of Raven Messages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Raven Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lab Test
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lab Test you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lab Test
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Raven Message: null
      tags:
        - DocTypes
    post:
      summary: Create a new Raven Message
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Raven Message created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Raven Message/{DocumentName}':
    get:
      summary: Get a list of Exchange Rate Revaluations
      description: Returns a list of Exchange Rate Revaluations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exchange Rate Revaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Raven Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Raven Message
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Raven Message you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Raven Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exchange Rate Revaluation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exchange Rate Revaluation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exchange Rate Revaluation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exchange Rate Revaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exchange Rate Revaluation/{DocumentName}':
    get:
      summary: Get a list of HD Escalation Rules
      description: Returns a list of HD Escalation Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Escalation Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exchange Rate Revaluation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exchange Rate Revaluation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exchange Rate Revaluation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exchange Rate Revaluation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Escalation Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Escalation Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Escalation Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Escalation Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Escalation Rule/{DocumentName}':
    get:
      summary: Get a list of Stock Entrys
      description: Returns a list of Stock Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Escalation Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Escalation Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Escalation Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Escalation Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Entry/{DocumentName}':
    get:
      summary: Get a list of Sales Invoices
      description: Returns a list of Sales Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Invoice/{DocumentName}':
    get:
      summary: Get a list of Payment Entrys
      description: Returns a list of Payment Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Entry/{DocumentName}':
    get:
      summary: Get a list of Attendances
      description: Returns a list of Attendances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Attendance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Attendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Attendance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Attendance/{DocumentName}':
    get:
      summary: Get a list of DocShares
      description: Returns a list of DocShares
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DocShare'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Attendance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Attendance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Attendance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DocShare: null
      tags:
        - DocTypes
    post:
      summary: Create a new DocShare
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DocShare created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocShare'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DocShare/{DocumentName}':
    get:
      summary: Get a list of LMS Categorys
      description: Returns a list of LMS Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocShare'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DocShare
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DocShare you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DocShare
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Category/{DocumentName}':
    get:
      summary: Get a list of Notification Logs
      description: Returns a list of Notification Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Notification Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Notification Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Notification Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Notification Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Notification Log/{DocumentName}':
    get:
      summary: Get a list of Salary Structures
      description: Returns a list of Salary Structures
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salary Structure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Notification Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Notification Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Notification Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salary Structure: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salary Structure
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salary Structure created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salary Structure/{DocumentName}':
    get:
      summary: Get a list of Appointment Types
      description: Returns a list of Appointment Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salary Structure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salary Structure
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salary Structure you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salary Structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Type/{DocumentName}':
    get:
      summary: Get a list of Patient Appointments
      description: Returns a list of Patient Appointments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient Appointment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient Appointment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient Appointment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient Appointment/{DocumentName}':
    get:
      summary: Get a list of Job Cards
      description: Returns a list of Job Cards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient Appointment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient Appointment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient Appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Card: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Card
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Card created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Card/{DocumentName}':
    get:
      summary: Get a list of Custom Fields
      description: Returns a list of Custom Fields
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom Field'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Card
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Card you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Card
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom Field: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom Field
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom Field created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Field'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom Field/{DocumentName}':
    get:
      summary: Get a list of Workspaces
      description: Returns a list of Workspaces
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Field'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom Field
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom Field you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom Field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workspace: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workspace created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workspace/{DocumentName}':
    get:
      summary: Get a list of Bank Transactions
      description: Returns a list of Bank Transactions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workspace
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workspace you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workspace
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Transaction: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Transaction created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Transaction/{DocumentName}':
    get:
      summary: Get a list of Users
      description: Returns a list of Users
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Transaction
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Transaction you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User: null
      tags:
        - DocTypes
    post:
      summary: Create a new User
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User/{DocumentName}':
    get:
      summary: Get a list of Stock Settingss
      description: Returns a list of Stock Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Settings/{DocumentName}':
    get:
      summary: Get a list of Employee Promotions
      description: Returns a list of Employee Promotions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Promotion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Promotion: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Promotion
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Promotion created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Promotion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Promotion/{DocumentName}':
    get:
      summary: Get a list of Custom HTML Blocks
      description: Returns a list of Custom HTML Blocks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom HTML Block'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Promotion'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Promotion
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Promotion you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Promotion
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom HTML Block: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom HTML Block
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom HTML Block created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom HTML Block'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom HTML Block/{DocumentName}':
    get:
      summary: Get a list of Warehouses
      description: Returns a list of Warehouses
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Warehouse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom HTML Block'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom HTML Block
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom HTML Block you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom HTML Block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Warehouse: null
      tags:
        - DocTypes
    post:
      summary: Create a new Warehouse
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Warehouse created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Warehouse/{DocumentName}':
    get:
      summary: Get a list of Leave Types
      description: Returns a list of Leave Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Warehouse
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Warehouse you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Warehouse
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Type/{DocumentName}':
    get:
      summary: Get a list of Form Tours
      description: Returns a list of Form Tours
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Form Tour'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Form Tour: null
      tags:
        - DocTypes
    post:
      summary: Create a new Form Tour
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Form Tour created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Form Tour'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Form Tour/{DocumentName}':
    get:
      summary: Get a list of Closing Stock Balances
      description: Returns a list of Closing Stock Balances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Closing Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Form Tour'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Form Tour
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Form Tour you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Form Tour
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Closing Stock Balance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Closing Stock Balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Closing Stock Balance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Closing Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Closing Stock Balance/{DocumentName}':
    get:
      summary: Get a list of Employee Checkins
      description: Returns a list of Employee Checkins
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Checkin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Closing Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Closing Stock Balance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Closing Stock Balance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Closing Stock Balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Checkin: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Checkin
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Checkin created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Checkin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Checkin/{DocumentName}':
    get:
      summary: Get a list of Customers
      description: Returns a list of Customers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Checkin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Checkin
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Checkin you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Checkin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customer/{DocumentName}':
    get:
      summary: Get a list of Suppliers
      description: Returns a list of Suppliers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier/{DocumentName}':
    get:
      summary: Get a list of Stock Reposting Settingss
      description: Returns a list of Stock Reposting Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Reposting Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Reposting Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Reposting Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Reposting Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reposting Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Reposting Settings/{DocumentName}':
    get:
      summary: Get a list of Attendance Requests
      description: Returns a list of Attendance Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Attendance Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reposting Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Reposting Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Reposting Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Reposting Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Attendance Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Attendance Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Attendance Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Attendance Request/{DocumentName}':
    get:
      summary: Get a list of Bins
      description: Returns a list of Bins
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attendance Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Attendance Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Attendance Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Attendance Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bin: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bin
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bin created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bin/{DocumentName}':
    get:
      summary: Get a list of Income Tax Slabs
      description: Returns a list of Income Tax Slabs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Income Tax Slab'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bin'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bin
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bin you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Income Tax Slab: null
      tags:
        - DocTypes
    post:
      summary: Create a new Income Tax Slab
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Income Tax Slab created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Income Tax Slab'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Income Tax Slab/{DocumentName}':
    get:
      summary: Get a list of Packing Slips
      description: Returns a list of Packing Slips
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Packing Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Income Tax Slab'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Income Tax Slab
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Income Tax Slab you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Income Tax Slab
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Packing Slip: null
      tags:
        - DocTypes
    post:
      summary: Create a new Packing Slip
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Packing Slip created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Packing Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Packing Slip/{DocumentName}':
    get:
      summary: Get a list of Document Naming Rules
      description: Returns a list of Document Naming Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Naming Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Packing Slip'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Packing Slip
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Packing Slip you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Packing Slip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Naming Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Naming Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Naming Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Naming Rule/{DocumentName}':
    get:
      summary: Get a list of Process Payment Reconciliation Logs
      description: Returns a list of Process Payment Reconciliation Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Payment Reconciliation Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Naming Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Naming Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Naming Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Payment Reconciliation Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Payment Reconciliation Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Payment Reconciliation Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Payment Reconciliation Log/{DocumentName}':
    get:
      summary: Get a list of Service Level Agreements
      description: Returns a list of Service Level Agreements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Payment Reconciliation Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Payment Reconciliation Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Payment Reconciliation Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Payment Reconciliation Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Service Level Agreement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Service Level Agreement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Service Level Agreement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Service Level Agreement/{DocumentName}':
    get:
      summary: Get a list of Timesheets
      description: Returns a list of Timesheets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Service Level Agreement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Service Level Agreement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Service Level Agreement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Service Level Agreement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Timesheet: null
      tags:
        - DocTypes
    post:
      summary: Create a new Timesheet
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Timesheet created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Timesheet/{DocumentName}':
    get:
      summary: Get a list of Sales Orders
      description: Returns a list of Sales Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Timesheet
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Timesheet you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Timesheet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Order/{DocumentName}':
    get:
      summary: Get a list of Lower Deduction Certificates
      description: Returns a list of Lower Deduction Certificates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lower Deduction Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lower Deduction Certificate: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lower Deduction Certificate
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lower Deduction Certificate created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lower Deduction Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lower Deduction Certificate/{DocumentName}':
    get:
      summary: Get a list of Quotations
      description: Returns a list of Quotations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lower Deduction Certificate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lower Deduction Certificate
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lower Deduction Certificate you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lower Deduction Certificate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quotation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quotation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quotation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quotation/{DocumentName}':
    get:
      summary: Get a list of Supplier Quotations
      description: Returns a list of Supplier Quotations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quotation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quotation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Quotation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Quotation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Quotation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Quotation/{DocumentName}':
    get:
      summary: Get a list of Serial Nos
      description: Returns a list of Serial Nos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Serial No'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Quotation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Quotation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Quotation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Quotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Serial No: null
      tags:
        - DocTypes
    post:
      summary: Create a new Serial No
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Serial No created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Serial No'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Serial No/{DocumentName}':
    get:
      summary: Get a list of Workflow Action Masters
      description: Returns a list of Workflow Action Masters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow Action Master'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Serial No'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Serial No
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Serial No you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Serial No
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow Action Master: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow Action Master
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow Action Master created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action Master'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow Action Master/{DocumentName}':
    get:
      summary: Get a list of Languages
      description: Returns a list of Languages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Language'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action Master'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow Action Master
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow Action Master you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow Action Master
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Language: null
      tags:
        - DocTypes
    post:
      summary: Create a new Language
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Language created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Language'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Language/{DocumentName}':
    get:
      summary: Get a list of HD Ticket Prioritys
      description: Returns a list of HD Ticket Prioritys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Language'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Language
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Language you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Language
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket Priority: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket Priority
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket Priority created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket Priority/{DocumentName}':
    get:
      summary: Get a list of Accounts
      description: Returns a list of Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket Priority
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket Priority you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket Priority
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Account/{DocumentName}':
    get:
      summary: Get a list of Shareholders
      description: Returns a list of Shareholders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shareholder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shareholder: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shareholder
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shareholder created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shareholder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shareholder/{DocumentName}':
    get:
      summary: Get a list of Fee Validitys
      description: Returns a list of Fee Validitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Fee Validity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shareholder'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shareholder
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shareholder you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shareholder
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Fee Validity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Fee Validity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Fee Validity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Fee Validity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Fee Validity/{DocumentName}':
    get:
      summary: Get a list of Reports
      description: Returns a list of Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Fee Validity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Fee Validity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Fee Validity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Fee Validity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Report/{DocumentName}':
    get:
      summary: Get a list of OAuth Bearer Tokens
      description: Returns a list of OAuth Bearer Tokens
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Bearer Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Bearer Token: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Bearer Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Bearer Token created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Bearer Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Bearer Token/{DocumentName}':
    get:
      summary: Get a list of BOMs
      description: Returns a list of BOMs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Bearer Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Bearer Token
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Bearer Token you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Bearer Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM/{DocumentName}':
    get:
      summary: Get a list of HD Ticket Activitys
      description: Returns a list of HD Ticket Activitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Ticket Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Ticket Activity: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Ticket Activity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Ticket Activity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Ticket Activity/{DocumentName}':
    get:
      summary: Get a list of Appraisals
      description: Returns a list of Appraisals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appraisal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Ticket Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Ticket Activity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Ticket Activity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Ticket Activity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appraisal: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appraisal
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appraisal created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appraisal/{DocumentName}':
    get:
      summary: Get a list of Appraisal Cycles
      description: Returns a list of Appraisal Cycles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appraisal Cycle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appraisal
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appraisal you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appraisal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appraisal Cycle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appraisal Cycle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appraisal Cycle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Cycle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appraisal Cycle/{DocumentName}':
    get:
      summary: Get a list of Employee Performance Feedbacks
      description: Returns a list of Employee Performance Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Performance Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Cycle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appraisal Cycle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appraisal Cycle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appraisal Cycle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Performance Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Performance Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Performance Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Performance Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Performance Feedback/{DocumentName}':
    get:
      summary: Get a list of HD Preset Filters
      description: Returns a list of HD Preset Filters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Preset Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Performance Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Performance Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Performance Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Performance Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Preset Filter: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Preset Filter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Preset Filter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Preset Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Preset Filter/{DocumentName}':
    get:
      summary: Get a list of HD Organizations
      description: Returns a list of HD Organizations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Organization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Preset Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Preset Filter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Preset Filter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Preset Filter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Organization: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Organization created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Organization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Organization/{DocumentName}':
    get:
      summary: Get a list of HD Service Holiday Lists
      description: Returns a list of HD Service Holiday Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Service Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Organization'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Organization
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Organization you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Service Holiday List: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Service Holiday List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Service Holiday List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Service Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Service Holiday List/{DocumentName}':
    get:
      summary: Get a list of HD Article Feedbacks
      description: Returns a list of HD Article Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Article Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Service Holiday List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Service Holiday List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Service Holiday List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Service Holiday List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Article Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Article Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Article Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Article Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Article Feedback/{DocumentName}':
    get:
      summary: Get a list of HD Teams
      description: Returns a list of HD Teams
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Article Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Article Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Article Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Article Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Team: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Team
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Team created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Team/{DocumentName}':
    get:
      summary: Get a list of Employee Advances
      description: Returns a list of Employee Advances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Advance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Team
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Team you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Team
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Advance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Advance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Advance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Advance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Advance/{DocumentName}':
    get:
      summary: Get a list of Workflow States
      description: Returns a list of Workflow States
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow State'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Advance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Advance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Advance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Advance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow State: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow State
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow State created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow State'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow State/{DocumentName}':
    get:
      summary: Get a list of Dropbox Settingss
      description: Returns a list of Dropbox Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dropbox Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow State'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow State
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow State you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow State
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dropbox Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dropbox Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dropbox Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dropbox Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dropbox Settings/{DocumentName}':
    get:
      summary: Get a list of Usage Infos
      description: Returns a list of Usage Infos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Usage Info'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dropbox Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dropbox Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dropbox Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dropbox Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Usage Info: null
      tags:
        - DocTypes
    post:
      summary: Create a new Usage Info
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Usage Info created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Usage Info'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Usage Info/{DocumentName}':
    get:
      summary: Get a list of KRAs
      description: Returns a list of KRAs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/KRA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Usage Info'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Usage Info
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Usage Info you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Usage Info
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/KRA: null
      tags:
        - DocTypes
    post:
      summary: Create a new KRA
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: KRA created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KRA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/KRA/{DocumentName}':
    get:
      summary: Get a list of Appraisal Templates
      description: Returns a list of Appraisal Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appraisal Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KRA'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific KRA
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the KRA you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified KRA
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appraisal Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appraisal Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appraisal Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appraisal Template/{DocumentName}':
    get:
      summary: Get a list of Healthcare Service Units
      description: Returns a list of Healthcare Service Units
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Healthcare Service Unit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appraisal Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appraisal Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appraisal Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appraisal Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Healthcare Service Unit: null
      tags:
        - DocTypes
    post:
      summary: Create a new Healthcare Service Unit
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Healthcare Service Unit created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Service Unit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Healthcare Service Unit/{DocumentName}':
    get:
      summary: Get a list of Employee Feedback Criterias
      description: Returns a list of Employee Feedback Criterias
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Feedback Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Service Unit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Healthcare Service Unit
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Healthcare Service Unit you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Healthcare Service Unit
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Feedback Criteria: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Feedback Criteria
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Feedback Criteria created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Feedback Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Feedback Criteria/{DocumentName}':
    get:
      summary: Get a list of Email Queues
      description: Returns a list of Email Queues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Feedback Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Feedback Criteria
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Feedback Criteria you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Feedback Criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Queue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Queue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Queue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Queue/{DocumentName}':
    get:
      summary: Get a list of Communications
      description: Returns a list of Communications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Communication'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Queue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Queue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Communication: null
      tags:
        - DocTypes
    post:
      summary: Create a new Communication
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Communication created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Communication/{DocumentName}':
    get:
      summary: Get a list of Additional Salarys
      description: Returns a list of Additional Salarys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Additional Salary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Communication
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Communication you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Communication
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Additional Salary: null
      tags:
        - DocTypes
    post:
      summary: Create a new Additional Salary
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Additional Salary created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Additional Salary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Additional Salary/{DocumentName}':
    get:
      summary: Get a list of HD Canned Responses
      description: Returns a list of HD Canned Responses
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Canned Response'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Additional Salary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Additional Salary
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Additional Salary you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Additional Salary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Canned Response: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Canned Response
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Canned Response created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Canned Response'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Canned Response/{DocumentName}':
    get:
      summary: Get a list of Bank Reconciliation Tools
      description: Returns a list of Bank Reconciliation Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Reconciliation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Canned Response'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Canned Response
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Canned Response you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Canned Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Reconciliation Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Reconciliation Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Reconciliation Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Reconciliation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Reconciliation Tool/{DocumentName}':
    get:
      summary: Get a list of Account Closing Balances
      description: Returns a list of Account Closing Balances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Account Closing Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Reconciliation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Reconciliation Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Reconciliation Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Reconciliation Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Account Closing Balance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Account Closing Balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Account Closing Balance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account Closing Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Account Closing Balance/{DocumentName}':
    get:
      summary: Get a list of Healthcare Practitioners
      description: Returns a list of Healthcare Practitioners
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Healthcare Practitioner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account Closing Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Account Closing Balance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Account Closing Balance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Account Closing Balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Healthcare Practitioner: null
      tags:
        - DocTypes
    post:
      summary: Create a new Healthcare Practitioner
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Healthcare Practitioner created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Practitioner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Healthcare Practitioner/{DocumentName}':
    get:
      summary: Get a list of Buying Settingss
      description: Returns a list of Buying Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Buying Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Practitioner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Healthcare Practitioner
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Healthcare Practitioner you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Healthcare Practitioner
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Buying Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Buying Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Buying Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Buying Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Buying Settings/{DocumentName}':
    get:
      summary: Get a list of Zoom Settingss
      description: Returns a list of Zoom Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Zoom Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Buying Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Buying Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Buying Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Buying Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Zoom Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Zoom Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Zoom Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Zoom Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Zoom Settings/{DocumentName}':
    get:
      summary: Get a list of Employee Attendance Tools
      description: Returns a list of Employee Attendance Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Attendance Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Zoom Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Zoom Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Zoom Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Zoom Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Attendance Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Attendance Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Attendance Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Attendance Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Attendance Tool/{DocumentName}':
    get:
      summary: Get a list of Webhook Request Logs
      description: Returns a list of Webhook Request Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Webhook Request Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Attendance Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Attendance Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Attendance Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Attendance Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Webhook Request Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Webhook Request Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Webhook Request Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook Request Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Webhook Request Log/{DocumentName}':
    get:
      summary: Get a list of Clinical Procedures
      description: Returns a list of Clinical Procedures
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Clinical Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook Request Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Webhook Request Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Webhook Request Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Webhook Request Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Clinical Procedure: null
      tags:
        - DocTypes
    post:
      summary: Create a new Clinical Procedure
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Clinical Procedure created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clinical Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Clinical Procedure/{DocumentName}':
    get:
      summary: Get a list of Therapy Sessions
      description: Returns a list of Therapy Sessions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Therapy Session'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clinical Procedure'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Clinical Procedure
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Clinical Procedure you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Clinical Procedure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Therapy Session: null
      tags:
        - DocTypes
    post:
      summary: Create a new Therapy Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Therapy Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Session'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Therapy Session/{DocumentName}':
    get:
      summary: Get a list of Therapy Types
      description: Returns a list of Therapy Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Therapy Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Session'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Therapy Session
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Therapy Session you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Therapy Session
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Therapy Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Therapy Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Therapy Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Therapy Type/{DocumentName}':
    get:
      summary: Get a list of Clinical Procedure Templates
      description: Returns a list of Clinical Procedure Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Clinical Procedure Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Therapy Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Therapy Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Therapy Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Clinical Procedure Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Clinical Procedure Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Clinical Procedure Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clinical Procedure Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Clinical Procedure Template/{DocumentName}':
    get:
      summary: Get a list of Lab Test Templates
      description: Returns a list of Lab Test Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lab Test Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clinical Procedure Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Clinical Procedure Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Clinical Procedure Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Clinical Procedure Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lab Test Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lab Test Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lab Test Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lab Test Template/{DocumentName}':
    get:
      summary: Get a list of Blog Posts
      description: Returns a list of Blog Posts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blog Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lab Test Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lab Test Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lab Test Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blog Post: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blog Post
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blog Post created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blog Post/{DocumentName}':
    get:
      summary: Get a list of DocType Layouts
      description: Returns a list of DocType Layouts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DocType Layout'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blog Post
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blog Post you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blog Post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DocType Layout: null
      tags:
        - DocTypes
    post:
      summary: Create a new DocType Layout
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DocType Layout created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType Layout'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DocType Layout/{DocumentName}':
    get:
      summary: Get a list of Projects
      description: Returns a list of Projects
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DocType Layout'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DocType Layout
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DocType Layout you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DocType Layout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project/{DocumentName}':
    get:
      summary: Get a list of Pricing Rules
      description: Returns a list of Pricing Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Pricing Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Pricing Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Pricing Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Pricing Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pricing Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Pricing Rule/{DocumentName}':
    get:
      summary: Get a list of Industry Types
      description: Returns a list of Industry Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Industry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pricing Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Pricing Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Pricing Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Pricing Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Industry Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Industry Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Industry Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Industry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Industry Type/{DocumentName}':
    get:
      summary: Get a list of Designations
      description: Returns a list of Designations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Designation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Industry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Industry Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Industry Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Industry Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Designation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Designation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Designation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Designation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Designation/{DocumentName}':
    get:
      summary: Get a list of Sales Stages
      description: Returns a list of Sales Stages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Stage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Designation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Designation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Designation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Designation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Stage: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Stage
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Stage created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Stage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Stage/{DocumentName}':
    get:
      summary: Get a list of Sales Partner Types
      description: Returns a list of Sales Partner Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Partner Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Stage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Stage
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Stage you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Stage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Partner Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Partner Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Partner Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Partner Type/{DocumentName}':
    get:
      summary: Get a list of Lead Sources
      description: Returns a list of Lead Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lead Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Partner Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Partner Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Partner Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lead Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lead Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lead Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lead Source/{DocumentName}':
    get:
      summary: Get a list of Terms and Conditionss
      description: Returns a list of Terms and Conditionss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Terms and Conditions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lead Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lead Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lead Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Terms and Conditions: null
      tags:
        - DocTypes
    post:
      summary: Create a new Terms and Conditions
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Terms and Conditions created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terms and Conditions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Terms and Conditions/{DocumentName}':
    get:
      summary: Get a list of DFP External Storages
      description: Returns a list of DFP External Storages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/DFP External Storage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Terms and Conditions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Terms and Conditions
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Terms and Conditions you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Terms and Conditions
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/DFP External Storage: null
      tags:
        - DocTypes
    post:
      summary: Create a new DFP External Storage
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: DFP External Storage created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DFP External Storage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/DFP External Storage/{DocumentName}':
    get:
      summary: Get a list of LDAP Settingss
      description: Returns a list of LDAP Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LDAP Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DFP External Storage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific DFP External Storage
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the DFP External Storage you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified DFP External Storage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LDAP Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new LDAP Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LDAP Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LDAP Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LDAP Settings/{DocumentName}':
    get:
      summary: Get a list of Pick Lists
      description: Returns a list of Pick Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Pick List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LDAP Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LDAP Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LDAP Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LDAP Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Pick List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Pick List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Pick List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pick List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Pick List/{DocumentName}':
    get:
      summary: Get a list of Patch Logs
      description: Returns a list of Patch Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patch Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pick List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Pick List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Pick List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Pick List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patch Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patch Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patch Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patch Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patch Log/{DocumentName}':
    get:
      summary: Get a list of Vital Signss
      description: Returns a list of Vital Signss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vital Signs'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patch Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patch Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patch Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patch Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vital Signs: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vital Signs
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vital Signs created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vital Signs'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vital Signs/{DocumentName}':
    get:
      summary: Get a list of Patient Encounters
      description: Returns a list of Patient Encounters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient Encounter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vital Signs'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vital Signs
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vital Signs you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vital Signs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient Encounter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient Encounter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient Encounter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Encounter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient Encounter/{DocumentName}':
    get:
      summary: Get a list of ABDM Settingss
      description: Returns a list of ABDM Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/ABDM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Encounter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient Encounter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient Encounter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient Encounter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/ABDM Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new ABDM Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: ABDM Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ABDM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/ABDM Settings/{DocumentName}':
    get:
      summary: Get a list of Treatment Plan Templates
      description: Returns a list of Treatment Plan Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Treatment Plan Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ABDM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific ABDM Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the ABDM Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified ABDM Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Treatment Plan Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Treatment Plan Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Treatment Plan Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Treatment Plan Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Treatment Plan Template/{DocumentName}':
    get:
      summary: Get a list of Exercise Types
      description: Returns a list of Exercise Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exercise Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Treatment Plan Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Treatment Plan Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Treatment Plan Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Treatment Plan Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exercise Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exercise Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exercise Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exercise Type/{DocumentName}':
    get:
      summary: Get a list of Patients
      description: Returns a list of Patients
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exercise Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exercise Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exercise Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient/{DocumentName}':
    get:
      summary: Get a list of Staffing Plans
      description: Returns a list of Staffing Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Staffing Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Staffing Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Staffing Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Staffing Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Staffing Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Staffing Plan/{DocumentName}':
    get:
      summary: Get a list of S3 Backup Settingss
      description: Returns a list of S3 Backup Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/S3 Backup Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Staffing Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Staffing Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Staffing Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Staffing Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/S3 Backup Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new S3 Backup Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: S3 Backup Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/S3 Backup Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/S3 Backup Settings/{DocumentName}':
    get:
      summary: Get a list of Job Requisitions
      description: Returns a list of Job Requisitions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Requisition'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/S3 Backup Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific S3 Backup Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the S3 Backup Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified S3 Backup Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Requisition: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Requisition
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Requisition created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Requisition'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Requisition/{DocumentName}':
    get:
      summary: Get a list of Retention Bonuss
      description: Returns a list of Retention Bonuss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Retention Bonus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Requisition'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Requisition
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Requisition you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Requisition
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Retention Bonus: null
      tags:
        - DocTypes
    post:
      summary: Create a new Retention Bonus
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Retention Bonus created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Retention Bonus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Retention Bonus/{DocumentName}':
    get:
      summary: Get a list of Gratuity Rules
      description: Returns a list of Gratuity Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Gratuity Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Retention Bonus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Retention Bonus
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Retention Bonus you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Retention Bonus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Gratuity Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Gratuity Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Gratuity Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Gratuity Rule/{DocumentName}':
    get:
      summary: Get a list of Item Groups
      description: Returns a list of Item Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Gratuity Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Gratuity Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Gratuity Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Group/{DocumentName}':
    get:
      summary: Get a list of Employee Incentives
      description: Returns a list of Employee Incentives
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Incentive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Incentive: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Incentive
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Incentive created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Incentive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Incentive/{DocumentName}':
    get:
      summary: Get a list of Employee Other Incomes
      description: Returns a list of Employee Other Incomes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Other Income'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Incentive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Incentive
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Incentive you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Incentive
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Other Income: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Other Income
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Other Income created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Other Income'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Other Income/{DocumentName}':
    get:
      summary: Get a list of Email Templates
      description: Returns a list of Email Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Other Income'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Other Income
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Other Income you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Other Income
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Template/{DocumentName}':
    get:
      summary: Get a list of Token Caches
      description: Returns a list of Token Caches
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Token Cache'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Token Cache: null
      tags:
        - DocTypes
    post:
      summary: Create a new Token Cache
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Token Cache created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Token Cache'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Token Cache/{DocumentName}':
    get:
      summary: Get a list of Email Accounts
      description: Returns a list of Email Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Token Cache'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Token Cache
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Token Cache you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Token Cache
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Account/{DocumentName}':
    get:
      summary: Get a list of Territorys
      description: Returns a list of Territorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Territory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Territory: null
      tags:
        - DocTypes
    post:
      summary: Create a new Territory
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Territory created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Territory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Territory/{DocumentName}':
    get:
      summary: Get a list of Supplier Groups
      description: Returns a list of Supplier Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Territory'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Territory
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Territory you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Territory
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Group/{DocumentName}':
    get:
      summary: Get a list of Customer Groups
      description: Returns a list of Customer Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customer Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customer Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customer Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customer Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customer Group/{DocumentName}':
    get:
      summary: Get a list of Payment Requests
      description: Returns a list of Payment Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customer Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customer Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customer Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customer Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Request/{DocumentName}':
    get:
      summary: Get a list of Help Articles
      description: Returns a list of Help Articles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Help Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Help Article: null
      tags:
        - DocTypes
    post:
      summary: Create a new Help Article
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Help Article created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Help Article/{DocumentName}':
    get:
      summary: Get a list of Appointments
      description: Returns a list of Appointments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Article'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Help Article
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Help Article you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Help Article
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment/{DocumentName}':
    get:
      summary: Get a list of Appointment Booking Settingss
      description: Returns a list of Appointment Booking Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Booking Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Booking Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Booking Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Booking Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Booking Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Booking Settings/{DocumentName}':
    get:
      summary: Get a list of Website Settingss
      description: Returns a list of Website Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Booking Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Booking Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Booking Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Booking Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Settings/{DocumentName}':
    get:
      summary: Get a list of Google Drives
      description: Returns a list of Google Drives
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Drive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Drive: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Drive
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Drive created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Drive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Drive/{DocumentName}':
    get:
      summary: Get a list of Bank Clearances
      description: Returns a list of Bank Clearances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Clearance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Drive'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Drive
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Drive you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Drive
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Clearance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Clearance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Clearance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Clearance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Clearance/{DocumentName}':
    get:
      summary: Get a list of Repost Item Valuations
      description: Returns a list of Repost Item Valuations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Repost Item Valuation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Clearance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Clearance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Clearance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Clearance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Repost Item Valuation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Repost Item Valuation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Repost Item Valuation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Item Valuation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Repost Item Valuation/{DocumentName}':
    get:
      summary: Get a list of RQ Workers
      description: Returns a list of RQ Workers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/RQ Worker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repost Item Valuation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Repost Item Valuation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Repost Item Valuation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Repost Item Valuation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/RQ Worker: null
      tags:
        - DocTypes
    post:
      summary: Create a new RQ Worker
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: RQ Worker created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Worker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/RQ Worker/{DocumentName}':
    get:
      summary: Get a list of Incoterms
      description: Returns a list of Incoterms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Incoterm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Worker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific RQ Worker
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the RQ Worker you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified RQ Worker
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Incoterm: null
      tags:
        - DocTypes
    post:
      summary: Create a new Incoterm
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Incoterm created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoterm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Incoterm/{DocumentName}':
    get:
      summary: Get a list of Shipments
      description: Returns a list of Shipments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoterm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Incoterm
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Incoterm you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Incoterm
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shipment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shipment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shipment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shipment/{DocumentName}':
    get:
      summary: Get a list of Workstation Types
      description: Returns a list of Workstation Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workstation Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shipment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shipment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shipment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workstation Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workstation Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workstation Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workstation Type/{DocumentName}':
    get:
      summary: Get a list of LMS Quiz Submissions
      description: Returns a list of LMS Quiz Submissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Quiz Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workstation Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workstation Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workstation Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Quiz Submission: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Quiz Submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Quiz Submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Quiz Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Quiz Submission/{DocumentName}':
    get:
      summary: Get a list of Item Prices
      description: Returns a list of Item Prices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Quiz Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Quiz Submission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Quiz Submission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Quiz Submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Price: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Price
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Price created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Price/{DocumentName}':
    get:
      summary: Get a list of Gratuitys
      description: Returns a list of Gratuitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Gratuity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Price
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Price you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Price
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Gratuity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Gratuity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Gratuity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Gratuity/{DocumentName}':
    get:
      summary: Get a list of LMS Course Progresss
      description: Returns a list of LMS Course Progresss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Course Progress'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gratuity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Gratuity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Gratuity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Gratuity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Course Progress: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Course Progress
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Course Progress created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Progress'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Course Progress/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Declarations
      description: Returns a list of Employee Tax Exemption Declarations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Declaration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Progress'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Course Progress
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Course Progress you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Course Progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Declaration: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Declaration
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Declaration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Declaration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Declaration/{DocumentName}':
    get:
      summary: Get a list of Employee Benefit Claims
      description: Returns a list of Employee Benefit Claims
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Benefit Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Declaration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Declaration
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Declaration you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Declaration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Benefit Claim: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Benefit Claim
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Benefit Claim created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Benefit Claim/{DocumentName}':
    get:
      summary: Get a list of Employee Benefit Applications
      description: Returns a list of Employee Benefit Applications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Benefit Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Benefit Claim
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Benefit Claim you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Benefit Claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Benefit Application: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Benefit Application
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Benefit Application created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Benefit Application/{DocumentName}':
    get:
      summary: Get a list of Workstations
      description: Returns a list of Workstations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workstation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Benefit Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Benefit Application
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Benefit Application you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Benefit Application
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workstation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workstation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workstation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workstation/{DocumentName}':
    get:
      summary: Get a list of Leave Block Lists
      description: Returns a list of Leave Block Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Block List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workstation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workstation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workstation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workstation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Block List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Block List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Block List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Block List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Block List/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Proof Submissions
      description: Returns a list of Employee Tax Exemption Proof Submissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Proof Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Block List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Block List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Block List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Block List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Proof Submission: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Proof Submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Proof Submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Proof Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Proof Submission/{DocumentName}':
    get:
      summary: Get a list of Loan Types
      description: Returns a list of Loan Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Proof Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Proof Submission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Proof Submission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Proof Submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Type/{DocumentName}':
    get:
      summary: Get a list of Cohorts
      description: Returns a list of Cohorts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cohort'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cohort: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cohort
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cohort created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cohort/{DocumentName}':
    get:
      summary: Get a list of Opportunitys
      description: Returns a list of Opportunitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cohort
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cohort you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cohort
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opportunity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opportunity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opportunity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opportunity/{DocumentName}':
    get:
      summary: Get a list of Leads
      description: Returns a list of Leads
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lead'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opportunity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opportunity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opportunity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lead: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lead
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lead created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lead/{DocumentName}':
    get:
      summary: Get a list of Prospects
      description: Returns a list of Prospects
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Prospect'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lead
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lead you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lead
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Prospect: null
      tags:
        - DocTypes
    post:
      summary: Create a new Prospect
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Prospect created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prospect'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Prospect/{DocumentName}':
    get:
      summary: Get a list of Budgets
      description: Returns a list of Budgets
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Budget'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prospect'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Prospect
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Prospect you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Prospect
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Budget: null
      tags:
        - DocTypes
    post:
      summary: Create a new Budget
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Budget created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Budget'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Budget/{DocumentName}':
    get:
      summary: Get a list of Quality Inspections
      description: Returns a list of Quality Inspections
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Budget'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Budget
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Budget you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Budget
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection/{DocumentName}':
    get:
      summary: Get a list of HR Settingss
      description: Returns a list of HR Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HR Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HR Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new HR Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HR Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HR Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HR Settings/{DocumentName}':
    get:
      summary: Get a list of Loans
      description: Returns a list of Loans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HR Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HR Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HR Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HR Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan/{DocumentName}':
    get:
      summary: Get a list of POS Invoices
      description: Returns a list of POS Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Invoice/{DocumentName}':
    get:
      summary: Get a list of LMS Batch Olds
      description: Returns a list of LMS Batch Olds
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Batch Old'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Batch Old: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Batch Old
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Batch Old created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Batch Old'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Batch Old/{DocumentName}':
    get:
      summary: Get a list of Energy Point Logs
      description: Returns a list of Energy Point Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Energy Point Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Batch Old'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Batch Old
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Batch Old you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Batch Old
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Energy Point Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Energy Point Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Energy Point Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Energy Point Log/{DocumentName}':
    get:
      summary: Get a list of Web Page Views
      description: Returns a list of Web Page Views
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Page View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Energy Point Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Energy Point Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Energy Point Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Page View: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Page View
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Page View created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Page View/{DocumentName}':
    get:
      summary: Get a list of RQ Jobs
      description: Returns a list of RQ Jobs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/RQ Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Page View
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Page View you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Page View
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/RQ Job: null
      tags:
        - DocTypes
    post:
      summary: Create a new RQ Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: RQ Job created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/RQ Job/{DocumentName}':
    get:
      summary: Get a list of Bank Statement Imports
      description: Returns a list of Bank Statement Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Statement Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RQ Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific RQ Job
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the RQ Job you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified RQ Job
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Statement Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Statement Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Statement Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Statement Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Statement Import/{DocumentName}':
    get:
      summary: Get a list of Customize Forms
      description: Returns a list of Customize Forms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customize Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Statement Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Statement Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Statement Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Statement Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customize Form: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customize Form
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customize Form created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customize Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customize Form/{DocumentName}':
    get:
      summary: Get a list of Task Types
      description: Returns a list of Task Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Task Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customize Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customize Form
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customize Form you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customize Form
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Task Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Task Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Task Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Task Type/{DocumentName}':
    get:
      summary: Get a list of Payment Ledger Entrys
      description: Returns a list of Payment Ledger Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Task Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Task Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Task Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Ledger Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Ledger Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Ledger Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Ledger Entry/{DocumentName}':
    get:
      summary: Get a list of Grievance Types
      description: Returns a list of Grievance Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Grievance Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Ledger Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Ledger Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Ledger Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Grievance Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Grievance Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Grievance Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Grievance Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Grievance Type/{DocumentName}':
    get:
      summary: Get a list of Email Domains
      description: Returns a list of Email Domains
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Grievance Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Grievance Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Grievance Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Grievance Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Domain: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Domain
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Domain created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Domain/{DocumentName}':
    get:
      summary: Get a list of Asset Repairs
      description: Returns a list of Asset Repairs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Repair'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Domain
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Domain you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Domain
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Repair: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Repair
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Repair created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Repair'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Repair/{DocumentName}':
    get:
      summary: Get a list of Subcontracting Orders
      description: Returns a list of Subcontracting Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subcontracting Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Repair'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Repair
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Repair you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Repair
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subcontracting Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subcontracting Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subcontracting Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subcontracting Order/{DocumentName}':
    get:
      summary: Get a list of Events
      description: Returns a list of Events
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subcontracting Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subcontracting Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subcontracting Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subcontracting Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event/{DocumentName}':
    get:
      summary: Get a list of POS Profiles
      description: Returns a list of POS Profiles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Profile: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Profile created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Profile/{DocumentName}':
    get:
      summary: Get a list of Salutations
      description: Returns a list of Salutations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Salutation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Profile
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Profile you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Salutation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Salutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Salutation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salutation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Salutation/{DocumentName}':
    get:
      summary: Get a list of Genders
      description: Returns a list of Genders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Gender'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Salutation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Salutation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Salutation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Salutation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Gender: null
      tags:
        - DocTypes
    post:
      summary: Create a new Gender
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Gender created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gender'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Gender/{DocumentName}':
    get:
      summary: Get a list of Countrys
      description: Returns a list of Countrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Gender'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Gender
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Gender you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Gender
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Country: null
      tags:
        - DocTypes
    post:
      summary: Create a new Country
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Country created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Country/{DocumentName}':
    get:
      summary: Get a list of Roles
      description: Returns a list of Roles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Country
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Country you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Country
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Role: null
      tags:
        - DocTypes
    post:
      summary: Create a new Role
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Role created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Role/{DocumentName}':
    get:
      summary: Get a list of POS Closing Entrys
      description: Returns a list of POS Closing Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Closing Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Role
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Role you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Closing Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Closing Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Closing Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Closing Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Closing Entry/{DocumentName}':
    get:
      summary: Get a list of POS Invoice Merge Logs
      description: Returns a list of POS Invoice Merge Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Invoice Merge Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Closing Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Closing Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Closing Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Closing Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Invoice Merge Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Invoice Merge Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Invoice Merge Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice Merge Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Invoice Merge Log/{DocumentName}':
    get:
      summary: Get a list of Healthcare Activitys
      description: Returns a list of Healthcare Activitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Healthcare Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Invoice Merge Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Invoice Merge Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Invoice Merge Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Invoice Merge Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Healthcare Activity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Healthcare Activity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Healthcare Activity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Healthcare Activity/{DocumentName}':
    get:
      summary: Get a list of Nursing Checklist Templates
      description: Returns a list of Nursing Checklist Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Nursing Checklist Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Healthcare Activity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Healthcare Activity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Healthcare Activity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Nursing Checklist Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Nursing Checklist Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Nursing Checklist Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Nursing Checklist Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Nursing Checklist Template/{DocumentName}':
    get:
      summary: Get a list of Payment Gateways
      description: Returns a list of Payment Gateways
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Gateway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Nursing Checklist Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Nursing Checklist Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Nursing Checklist Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Nursing Checklist Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Gateway: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Gateway
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Gateway created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Gateway/{DocumentName}':
    get:
      summary: Get a list of Razorpay Settingss
      description: Returns a list of Razorpay Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Razorpay Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Gateway
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Gateway you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Razorpay Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Razorpay Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Razorpay Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Razorpay Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Razorpay Settings/{DocumentName}':
    get:
      summary: Get a list of PayPal Settingss
      description: Returns a list of PayPal Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/PayPal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Razorpay Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Razorpay Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Razorpay Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Razorpay Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/PayPal Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new PayPal Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: PayPal Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PayPal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/PayPal Settings/{DocumentName}':
    get:
      summary: Get a list of Braintree Settingss
      description: Returns a list of Braintree Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Braintree Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PayPal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific PayPal Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the PayPal Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified PayPal Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Braintree Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Braintree Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Braintree Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Braintree Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Braintree Settings/{DocumentName}':
    get:
      summary: Get a list of Paytm Settingss
      description: Returns a list of Paytm Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Paytm Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Braintree Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Braintree Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Braintree Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Braintree Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Paytm Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Paytm Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Paytm Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Paytm Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Paytm Settings/{DocumentName}':
    get:
      summary: Get a list of Stripe Settingss
      description: Returns a list of Stripe Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stripe Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Paytm Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Paytm Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Paytm Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Paytm Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stripe Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stripe Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stripe Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stripe Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stripe Settings/{DocumentName}':
    get:
      summary: Get a list of Blog Settingss
      description: Returns a list of Blog Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blog Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stripe Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stripe Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stripe Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stripe Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blog Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blog Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blog Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blog Settings/{DocumentName}':
    get:
      summary: Get a list of Comments
      description: Returns a list of Comments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blog Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blog Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blog Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Comment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Comment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Comment/{DocumentName}':
    get:
      summary: Get a list of Email Group Members
      description: Returns a list of Email Group Members
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Group Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Comment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Comment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Group Member: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Group Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Group Member created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Group Member/{DocumentName}':
    get:
      summary: Get a list of Webhooks
      description: Returns a list of Webhooks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group Member'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Group Member
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Group Member you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Group Member
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Webhook: null
      tags:
        - DocTypes
    post:
      summary: Create a new Webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Webhook created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Webhook/{DocumentName}':
    get:
      summary: Get a list of Loan Balance Adjustments
      description: Returns a list of Loan Balance Adjustments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Balance Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Webhook
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Webhook you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Balance Adjustment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Balance Adjustment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Balance Adjustment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Balance Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Balance Adjustment/{DocumentName}':
    get:
      summary: Get a list of Currencys
      description: Returns a list of Currencys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Currency'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Balance Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Balance Adjustment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Balance Adjustment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Balance Adjustment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Currency: null
      tags:
        - DocTypes
    post:
      summary: Create a new Currency
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Currency created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Currency/{DocumentName}':
    get:
      summary: Get a list of Translations
      description: Returns a list of Translations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Translation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Currency
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Currency you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Currency
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Translation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Translation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Translation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Translation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Translation/{DocumentName}':
    get:
      summary: Get a list of Authorization Rules
      description: Returns a list of Authorization Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Authorization Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Translation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Translation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Translation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Translation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Authorization Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Authorization Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Authorization Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Authorization Rule/{DocumentName}':
    get:
      summary: Get a list of Loan Security Shortfalls
      description: Returns a list of Loan Security Shortfalls
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Security Shortfall'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Authorization Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Authorization Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Authorization Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Security Shortfall: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Security Shortfall
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Security Shortfall created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Shortfall'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Security Shortfall/{DocumentName}':
    get:
      summary: Get a list of Loan Interest Accruals
      description: Returns a list of Loan Interest Accruals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Interest Accrual'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Shortfall'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Security Shortfall
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Security Shortfall you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Security Shortfall
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Interest Accrual: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Interest Accrual
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Interest Accrual created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Interest Accrual'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Interest Accrual/{DocumentName}':
    get:
      summary: Get a list of Process Loan Interest Accruals
      description: Returns a list of Process Loan Interest Accruals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Loan Interest Accrual'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Interest Accrual'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Interest Accrual
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Interest Accrual you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Interest Accrual
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Loan Interest Accrual: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Loan Interest Accrual
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Loan Interest Accrual created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Loan Interest Accrual'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Loan Interest Accrual/{DocumentName}':
    get:
      summary: Get a list of Drivers
      description: Returns a list of Drivers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Driver'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Loan Interest Accrual'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Loan Interest Accrual
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Loan Interest Accrual you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Loan Interest Accrual
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Driver: null
      tags:
        - DocTypes
    post:
      summary: Create a new Driver
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Driver created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Driver'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Driver/{DocumentName}':
    get:
      summary: Get a list of Scheduled Job Types
      description: Returns a list of Scheduled Job Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Scheduled Job Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Driver'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Driver
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Driver you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Driver
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Scheduled Job Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Scheduled Job Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Scheduled Job Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Scheduled Job Type/{DocumentName}':
    get:
      summary: Get a list of Vehicles
      description: Returns a list of Vehicles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Scheduled Job Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Scheduled Job Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Scheduled Job Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vehicle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vehicle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vehicle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vehicle/{DocumentName}':
    get:
      summary: Get a list of Loan Refunds
      description: Returns a list of Loan Refunds
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Refund'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vehicle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vehicle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vehicle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Refund: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Refund
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Refund created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Refund'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Refund/{DocumentName}':
    get:
      summary: Get a list of BOM Update Logs
      description: Returns a list of BOM Update Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Refund'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Refund
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Refund you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Refund
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM Update Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM Update Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM Update Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM Update Log/{DocumentName}':
    get:
      summary: Get a list of Letter Heads
      description: Returns a list of Letter Heads
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Letter Head'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM Update Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM Update Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM Update Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Letter Head: null
      tags:
        - DocTypes
    post:
      summary: Create a new Letter Head
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Letter Head created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Letter Head'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Letter Head/{DocumentName}':
    get:
      summary: Get a list of Practitioner Schedules
      description: Returns a list of Practitioner Schedules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Practitioner Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Letter Head'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Letter Head
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Letter Head you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Letter Head
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Practitioner Schedule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Practitioner Schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Practitioner Schedule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Practitioner Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Practitioner Schedule/{DocumentName}':
    get:
      summary: Get a list of Error Logs
      description: Returns a list of Error Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Error Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Practitioner Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Practitioner Schedule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Practitioner Schedule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Practitioner Schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Error Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Error Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Error Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Error Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Error Log/{DocumentName}':
    get:
      summary: Get a list of Server Scripts
      description: Returns a list of Server Scripts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Server Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Error Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Error Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Error Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Error Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Server Script: null
      tags:
        - DocTypes
    post:
      summary: Create a new Server Script
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Server Script created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Server Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Server Script/{DocumentName}':
    get:
      summary: Get a list of Access Logs
      description: Returns a list of Access Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Access Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Server Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Server Script
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Server Script you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Server Script
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Access Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Access Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Access Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Access Log/{DocumentName}':
    get:
      summary: Get a list of Deleted Documents
      description: Returns a list of Deleted Documents
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Deleted Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Access Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Access Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Access Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Deleted Document: null
      tags:
        - DocTypes
    post:
      summary: Create a new Deleted Document
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Deleted Document created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Deleted Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Deleted Document/{DocumentName}':
    get:
      summary: Get a list of Route Historys
      description: Returns a list of Route Historys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Route History'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Deleted Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Deleted Document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Deleted Document you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Deleted Document
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Route History: null
      tags:
        - DocTypes
    post:
      summary: Create a new Route History
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Route History created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Route History'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Route History/{DocumentName}':
    get:
      summary: Get a list of Scheduled Job Logs
      description: Returns a list of Scheduled Job Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Scheduled Job Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Route History'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Route History
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Route History you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Route History
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Scheduled Job Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Scheduled Job Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Scheduled Job Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Scheduled Job Log/{DocumentName}':
    get:
      summary: Get a list of Number Cards
      description: Returns a list of Number Cards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Number Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Scheduled Job Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Scheduled Job Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Scheduled Job Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Scheduled Job Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Number Card: null
      tags:
        - DocTypes
    post:
      summary: Create a new Number Card
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Number Card created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Number Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Number Card/{DocumentName}':
    get:
      summary: Get a list of Log Settingss
      description: Returns a list of Log Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Log Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Number Card'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Number Card
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Number Card you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Number Card
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Log Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Log Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Log Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Log Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Log Settings/{DocumentName}':
    get:
      summary: Get a list of User Types
      description: Returns a list of User Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Log Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Log Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Log Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Log Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Type/{DocumentName}':
    get:
      summary: Get a list of CRM Settingss
      description: Returns a list of CRM Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/CRM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/CRM Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new CRM Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: CRM Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CRM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/CRM Settings/{DocumentName}':
    get:
      summary: Get a list of Therapy Plan Templates
      description: Returns a list of Therapy Plan Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Therapy Plan Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CRM Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific CRM Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the CRM Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified CRM Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Therapy Plan Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Therapy Plan Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Therapy Plan Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Plan Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Therapy Plan Template/{DocumentName}':
    get:
      summary: Get a list of Document Naming Settingss
      description: Returns a list of Document Naming Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Naming Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Plan Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Therapy Plan Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Therapy Plan Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Therapy Plan Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Naming Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Naming Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Naming Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Naming Settings/{DocumentName}':
    get:
      summary: Get a list of Purchase Taxes and Charges Templates
      description: Returns a list of Purchase Taxes and Charges Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purchase Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Naming Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Naming Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Naming Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Naming Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purchase Taxes and Charges Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purchase Taxes and Charges Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purchase Taxes and Charges Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purchase Taxes and Charges Template/{DocumentName}':
    get:
      summary: Get a list of Sales Taxes and Charges Templates
      description: Returns a list of Sales Taxes and Charges Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purchase Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purchase Taxes and Charges Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purchase Taxes and Charges Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purchase Taxes and Charges Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Taxes and Charges Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Taxes and Charges Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Taxes and Charges Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Taxes and Charges Template/{DocumentName}':
    get:
      summary: Get a list of Stock Reconciliations
      description: Returns a list of Stock Reconciliations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Taxes and Charges Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Taxes and Charges Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Taxes and Charges Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Taxes and Charges Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Reconciliation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Reconciliation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Reconciliation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Reconciliation/{DocumentName}':
    get:
      summary: Get a list of Employee Grades
      description: Returns a list of Employee Grades
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Grade'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Reconciliation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Reconciliation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Reconciliation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Reconciliation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Grade: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Grade
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Grade created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grade'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Grade/{DocumentName}':
    get:
      summary: Get a list of Bank Accounts
      description: Returns a list of Bank Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grade'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Grade
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Grade you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Grade
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Account/{DocumentName}':
    get:
      summary: Get a list of Prepared Reports
      description: Returns a list of Prepared Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Prepared Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Prepared Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Prepared Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Prepared Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prepared Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Prepared Report/{DocumentName}':
    get:
      summary: Get a list of Training Feedbacks
      description: Returns a list of Training Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prepared Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Prepared Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Prepared Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Prepared Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Feedback/{DocumentName}':
    get:
      summary: Get a list of Training Events
      description: Returns a list of Training Events
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Event: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Event
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Event/{DocumentName}':
    get:
      summary: Get a list of System Consoles
      description: Returns a list of System Consoles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/System Console'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Event'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Event
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Event you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/System Console: null
      tags:
        - DocTypes
    post:
      summary: Create a new System Console
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: System Console created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Console'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/System Console/{DocumentName}':
    get:
      summary: Get a list of Call Logs
      description: Returns a list of Call Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Call Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/System Console'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific System Console
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the System Console you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified System Console
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Call Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Call Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Call Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Call Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Call Log/{DocumentName}':
    get:
      summary: Get a list of Kanban Boards
      description: Returns a list of Kanban Boards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Kanban Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Call Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Call Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Call Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Call Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Kanban Board: null
      tags:
        - DocTypes
    post:
      summary: Create a new Kanban Board
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Kanban Board created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Kanban Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Kanban Board/{DocumentName}':
    get:
      summary: Get a list of Client Scripts
      description: Returns a list of Client Scripts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Client Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Kanban Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Kanban Board
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Kanban Board you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Kanban Board
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Client Script: null
      tags:
        - DocTypes
    post:
      summary: Create a new Client Script
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Client Script created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Client Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Client Script/{DocumentName}':
    get:
      summary: Get a list of HD Desk Account Requests
      description: Returns a list of HD Desk Account Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Desk Account Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Client Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Client Script
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Client Script you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Client Script
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Desk Account Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Desk Account Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Desk Account Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Desk Account Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Desk Account Request/{DocumentName}':
    get:
      summary: Get a list of HD Portal Signup Requests
      description: Returns a list of HD Portal Signup Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/HD Portal Signup Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Desk Account Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Desk Account Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Desk Account Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Desk Account Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/HD Portal Signup Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new HD Portal Signup Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: HD Portal Signup Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Portal Signup Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/HD Portal Signup Request/{DocumentName}':
    get:
      summary: Get a list of Leave Allocations
      description: Returns a list of Leave Allocations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HD Portal Signup Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific HD Portal Signup Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the HD Portal Signup Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified HD Portal Signup Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Allocation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Allocation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Allocation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Allocation/{DocumentName}':
    get:
      summary: Get a list of E Commerce Settingss
      description: Returns a list of E Commerce Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/E Commerce Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Allocation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Allocation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Allocation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/E Commerce Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new E Commerce Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: E Commerce Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/E Commerce Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/E Commerce Settings/{DocumentName}':
    get:
      summary: Get a list of ABDM Requests
      description: Returns a list of ABDM Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/ABDM Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/E Commerce Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific E Commerce Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the E Commerce Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified E Commerce Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/ABDM Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new ABDM Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: ABDM Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ABDM Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/ABDM Request/{DocumentName}':
    get:
      summary: Get a list of Newsletters
      description: Returns a list of Newsletters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Newsletter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ABDM Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific ABDM Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the ABDM Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified ABDM Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Newsletter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Newsletter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Newsletter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Newsletter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Newsletter/{DocumentName}':
    get:
      summary: Get a list of Web Pages
      description: Returns a list of Web Pages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Newsletter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Newsletter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Newsletter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Newsletter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Page: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Page
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Page created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Page/{DocumentName}':
    get:
      summary: Get a list of Property Setters
      description: Returns a list of Property Setters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Property Setter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Page
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Page you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Property Setter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Property Setter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Property Setter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property Setter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Property Setter/{DocumentName}':
    get:
      summary: Get a list of Skills
      description: Returns a list of Skills
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property Setter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Property Setter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Property Setter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Property Setter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Skill: null
      tags:
        - DocTypes
    post:
      summary: Create a new Skill
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Skill created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Skill/{DocumentName}':
    get:
      summary: Get a list of Telephony Call Types
      description: Returns a list of Telephony Call Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Telephony Call Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Skill
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Skill you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Skill
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Telephony Call Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Telephony Call Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Telephony Call Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Telephony Call Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Telephony Call Type/{DocumentName}':
    get:
      summary: Get a list of Workflow Actions
      description: Returns a list of Workflow Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Telephony Call Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Telephony Call Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Telephony Call Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Telephony Call Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow Action/{DocumentName}':
    get:
      summary: Get a list of Batchs
      description: Returns a list of Batchs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Batch: null
      tags:
        - DocTypes
    post:
      summary: Create a new Batch
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Batch created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Batch/{DocumentName}':
    get:
      summary: Get a list of Loan Disbursements
      description: Returns a list of Loan Disbursements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Disbursement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Batch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Batch
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Batch you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Batch
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Disbursement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Disbursement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Disbursement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Disbursement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Disbursement/{DocumentName}':
    get:
      summary: Get a list of Opportunity Lost Reasons
      description: Returns a list of Opportunity Lost Reasons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opportunity Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Disbursement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Disbursement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Disbursement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Disbursement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opportunity Lost Reason: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opportunity Lost Reason
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opportunity Lost Reason created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opportunity Lost Reason/{DocumentName}':
    get:
      summary: Get a list of Data Imports
      description: Returns a list of Data Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Data Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opportunity Lost Reason
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opportunity Lost Reason you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opportunity Lost Reason
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Data Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Data Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Data Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Data Import/{DocumentName}':
    get:
      summary: Get a list of GoCardless Settingss
      description: Returns a list of GoCardless Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/GoCardless Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Data Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Data Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Data Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/GoCardless Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new GoCardless Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: GoCardless Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/GoCardless Settings/{DocumentName}':
    get:
      summary: Get a list of Job Settingss
      description: Returns a list of Job Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific GoCardless Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the GoCardless Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified GoCardless Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Settings/{DocumentName}':
    get:
      summary: Get a list of Bulk Transaction Logs
      description: Returns a list of Bulk Transaction Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bulk Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bulk Transaction Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bulk Transaction Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bulk Transaction Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bulk Transaction Log/{DocumentName}':
    get:
      summary: Get a list of Cost Centers
      description: Returns a list of Cost Centers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cost Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bulk Transaction Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bulk Transaction Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bulk Transaction Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cost Center: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cost Center
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cost Center created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cost Center/{DocumentName}':
    get:
      summary: Get a list of Cost Center Allocations
      description: Returns a list of Cost Center Allocations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cost Center Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cost Center
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cost Center you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cost Center
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cost Center Allocation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cost Center Allocation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cost Center Allocation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cost Center Allocation/{DocumentName}':
    get:
      summary: Get a list of Employee Onboardings
      description: Returns a list of Employee Onboardings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cost Center Allocation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cost Center Allocation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cost Center Allocation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cost Center Allocation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Onboarding: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Onboarding
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Onboarding created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Onboarding/{DocumentName}':
    get:
      summary: Get a list of Diagnosiss
      description: Returns a list of Diagnosiss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Diagnosis'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Onboarding
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Onboarding you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Onboarding
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Diagnosis: null
      tags:
        - DocTypes
    post:
      summary: Create a new Diagnosis
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Diagnosis created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Diagnosis'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Diagnosis/{DocumentName}':
    get:
      summary: Get a list of Medical Codes
      description: Returns a list of Medical Codes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Medical Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Diagnosis'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Diagnosis
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Diagnosis you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Diagnosis
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Medical Code: null
      tags:
        - DocTypes
    post:
      summary: Create a new Medical Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Medical Code created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Medical Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Medical Code/{DocumentName}':
    get:
      summary: Get a list of Medical Code Standards
      description: Returns a list of Medical Code Standards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Medical Code Standard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Medical Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Medical Code
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Medical Code you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Medical Code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Medical Code Standard: null
      tags:
        - DocTypes
    post:
      summary: Create a new Medical Code Standard
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Medical Code Standard created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Medical Code Standard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Medical Code Standard/{DocumentName}':
    get:
      summary: Get a list of Nursing Tasks
      description: Returns a list of Nursing Tasks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Nursing Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Medical Code Standard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Medical Code Standard
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Medical Code Standard you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Medical Code Standard
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Nursing Task: null
      tags:
        - DocTypes
    post:
      summary: Create a new Nursing Task
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Nursing Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Nursing Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Nursing Task/{DocumentName}':
    get:
      summary: Get a list of Leave Policys
      description: Returns a list of Leave Policys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Policy'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Nursing Task'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Nursing Task
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Nursing Task you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Nursing Task
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Policy: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Policy
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Policy created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Policy/{DocumentName}':
    get:
      summary: Get a list of Tax Categorys
      description: Returns a list of Tax Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Policy
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Policy you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Policy
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tax Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tax Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tax Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tax Category/{DocumentName}':
    get:
      summary: Get a list of Item Tax Templates
      description: Returns a list of Item Tax Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Tax Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tax Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tax Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tax Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Tax Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Tax Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Tax Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Tax Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Tax Template/{DocumentName}':
    get:
      summary: Get a list of Training Results
      description: Returns a list of Training Results
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Tax Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Tax Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Tax Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Tax Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Result: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Result
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Result created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Result/{DocumentName}':
    get:
      summary: Get a list of Appointment Letters
      description: Returns a list of Appointment Letters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Letter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Result'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Result
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Result you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Letter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Letter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Letter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Letter/{DocumentName}':
    get:
      summary: Get a list of Appointment Letter Templates
      description: Returns a list of Appointment Letter Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Appointment Letter Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Letter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Letter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Letter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Appointment Letter Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Appointment Letter Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Appointment Letter Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Appointment Letter Template/{DocumentName}':
    get:
      summary: Get a list of Travel Requests
      description: Returns a list of Travel Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Travel Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Appointment Letter Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Appointment Letter Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Appointment Letter Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Appointment Letter Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Travel Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Travel Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Travel Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Travel Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Travel Request/{DocumentName}':
    get:
      summary: Get a list of Leave Encashments
      description: Returns a list of Leave Encashments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Encashment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Travel Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Travel Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Travel Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Travel Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Encashment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Encashment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Encashment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Encashment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Encashment/{DocumentName}':
    get:
      summary: Get a list of Document Share Keys
      description: Returns a list of Document Share Keys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Share Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Encashment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Encashment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Encashment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Encashment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Share Key: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Share Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Share Key created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Share Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Share Key/{DocumentName}':
    get:
      summary: Get a list of Leave Policy Assignments
      description: Returns a list of Leave Policy Assignments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Policy Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Share Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Share Key
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Share Key you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Share Key
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Policy Assignment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Policy Assignment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Policy Assignment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Policy Assignment/{DocumentName}':
    get:
      summary: Get a list of Leave Periods
      description: Returns a list of Leave Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Policy Assignment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Policy Assignment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Policy Assignment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Policy Assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Period/{DocumentName}':
    get:
      summary: Get a list of Connected Apps
      description: Returns a list of Connected Apps
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Connected App'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Connected App: null
      tags:
        - DocTypes
    post:
      summary: Create a new Connected App
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Connected App created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Connected App'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Connected App/{DocumentName}':
    get:
      summary: Get a list of Opening Invoice Creation Tools
      description: Returns a list of Opening Invoice Creation Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opening Invoice Creation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Connected App'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Connected App
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Connected App you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Connected App
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opening Invoice Creation Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opening Invoice Creation Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opening Invoice Creation Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opening Invoice Creation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opening Invoice Creation Tool/{DocumentName}':
    get:
      summary: Get a list of Module Defs
      description: Returns a list of Module Defs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Module Def'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opening Invoice Creation Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opening Invoice Creation Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opening Invoice Creation Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opening Invoice Creation Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Module Def: null
      tags:
        - DocTypes
    post:
      summary: Create a new Module Def
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Module Def created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Def'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Module Def/{DocumentName}':
    get:
      summary: Get a list of User Permissions
      description: Returns a list of User Permissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Permission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Def'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Module Def
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Module Def you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Module Def
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Permission: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Permission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Permission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Permission/{DocumentName}':
    get:
      summary: Get a list of Data Import Logs
      description: Returns a list of Data Import Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Data Import Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Permission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Permission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Permission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Permission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Data Import Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Data Import Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Data Import Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Data Import Log/{DocumentName}':
    get:
      summary: Get a list of Stock Ledger Entrys
      description: Returns a list of Stock Ledger Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Import Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Data Import Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Data Import Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Data Import Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Ledger Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Ledger Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Ledger Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Ledger Entry/{DocumentName}':
    get:
      summary: Get a list of Maintenance Visits
      description: Returns a list of Maintenance Visits
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Maintenance Visit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Ledger Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Ledger Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Ledger Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Maintenance Visit: null
      tags:
        - DocTypes
    post:
      summary: Create a new Maintenance Visit
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Maintenance Visit created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Visit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Maintenance Visit/{DocumentName}':
    get:
      summary: Get a list of Cohort Staffs
      description: Returns a list of Cohort Staffs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cohort Staff'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Visit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Maintenance Visit
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Maintenance Visit you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Maintenance Visit
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cohort Staff: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cohort Staff
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cohort Staff created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Staff'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cohort Staff/{DocumentName}':
    get:
      summary: Get a list of Cohort Subgroups
      description: Returns a list of Cohort Subgroups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cohort Subgroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Staff'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cohort Staff
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cohort Staff you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cohort Staff
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cohort Subgroup: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cohort Subgroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cohort Subgroup created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Subgroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cohort Subgroup/{DocumentName}':
    get:
      summary: Get a list of Personal Data Deletion Requests
      description: Returns a list of Personal Data Deletion Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Personal Data Deletion Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Subgroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cohort Subgroup
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cohort Subgroup you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cohort Subgroup
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Personal Data Deletion Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Personal Data Deletion Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Personal Data Deletion Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Deletion Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Personal Data Deletion Request/{DocumentName}':
    get:
      summary: Get a list of Ledger Merges
      description: Returns a list of Ledger Merges
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Ledger Merge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Deletion Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Personal Data Deletion Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Personal Data Deletion Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Personal Data Deletion Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Ledger Merge: null
      tags:
        - DocTypes
    post:
      summary: Create a new Ledger Merge
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Ledger Merge created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Ledger Merge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Ledger Merge/{DocumentName}':
    get:
      summary: Get a list of Subscription Plans
      description: Returns a list of Subscription Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subscription Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Ledger Merge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Ledger Merge
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Ledger Merge you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Ledger Merge
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subscription Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subscription Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subscription Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subscription Plan/{DocumentName}':
    get:
      summary: Get a list of Exercise Latest Submissions
      description: Returns a list of Exercise Latest Submissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exercise Latest Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subscription Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subscription Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subscription Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exercise Latest Submission: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exercise Latest Submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exercise Latest Submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Latest Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exercise Latest Submission/{DocumentName}':
    get:
      summary: Get a list of Exercise Submissions
      description: Returns a list of Exercise Submissions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exercise Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Latest Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exercise Latest Submission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exercise Latest Submission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exercise Latest Submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exercise Submission: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exercise Submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exercise Submission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exercise Submission/{DocumentName}':
    get:
      summary: Get a list of Exit Interviews
      description: Returns a list of Exit Interviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exit Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Submission'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exercise Submission
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exercise Submission you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exercise Submission
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exit Interview: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exit Interview
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exit Interview created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exit Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exit Interview/{DocumentName}':
    get:
      summary: Get a list of Module Profiles
      description: Returns a list of Module Profiles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Module Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exit Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exit Interview
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exit Interview you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exit Interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Module Profile: null
      tags:
        - DocTypes
    post:
      summary: Create a new Module Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Module Profile created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Module Profile/{DocumentName}':
    get:
      summary: Get a list of Role Profiles
      description: Returns a list of Role Profiles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Role Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Module Profile
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Module Profile you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Module Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Role Profile: null
      tags:
        - DocTypes
    post:
      summary: Create a new Role Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Role Profile created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Role Profile/{DocumentName}':
    get:
      summary: Get a list of Onboarding Steps
      description: Returns a list of Onboarding Steps
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Onboarding Step'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Profile'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Role Profile
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Role Profile you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Role Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Onboarding Step: null
      tags:
        - DocTypes
    post:
      summary: Create a new Onboarding Step
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Onboarding Step created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Onboarding Step'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Onboarding Step/{DocumentName}':
    get:
      summary: Get a list of TaxJar Settingss
      description: Returns a list of TaxJar Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/TaxJar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Onboarding Step'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Onboarding Step
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Onboarding Step you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Onboarding Step
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/TaxJar Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new TaxJar Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: TaxJar Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaxJar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/TaxJar Settings/{DocumentName}':
    get:
      summary: Get a list of Email Flag Queues
      description: Returns a list of Email Flag Queues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Flag Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaxJar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific TaxJar Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the TaxJar Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified TaxJar Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Flag Queue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Flag Queue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Flag Queue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Flag Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Flag Queue/{DocumentName}':
    get:
      summary: Get a list of Cohort Mentors
      description: Returns a list of Cohort Mentors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cohort Mentor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Flag Queue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Flag Queue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Flag Queue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Flag Queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cohort Mentor: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cohort Mentor
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cohort Mentor created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Mentor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cohort Mentor/{DocumentName}':
    get:
      summary: Get a list of Operations
      description: Returns a list of Operations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Operation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cohort Mentor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cohort Mentor
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cohort Mentor you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cohort Mentor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Operation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Operation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Operation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Operation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Operation/{DocumentName}':
    get:
      summary: Get a list of Notification Settingss
      description: Returns a list of Notification Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Notification Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Operation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Operation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Operation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Notification Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Notification Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Notification Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Notification Settings/{DocumentName}':
    get:
      summary: Get a list of Issues
      description: Returns a list of Issues
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Issue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Notification Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Notification Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Notification Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Issue: null
      tags:
        - DocTypes
    post:
      summary: Create a new Issue
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Issue created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Issue/{DocumentName}':
    get:
      summary: Get a list of Expense Claims
      description: Returns a list of Expense Claims
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Expense Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Issue
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Issue you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Issue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Expense Claim: null
      tags:
        - DocTypes
    post:
      summary: Create a new Expense Claim
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Expense Claim created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Expense Claim/{DocumentName}':
    get:
      summary: Get a list of Energy Point Settingss
      description: Returns a list of Energy Point Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Energy Point Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Expense Claim
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Expense Claim you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Expense Claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Energy Point Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Energy Point Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Energy Point Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Energy Point Settings/{DocumentName}':
    get:
      summary: Get a list of LMS Course Reviews
      description: Returns a list of LMS Course Reviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Course Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Energy Point Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Energy Point Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Energy Point Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Course Review: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Course Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Course Review created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Course Review/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Criterias
      description: Returns a list of Supplier Scorecard Criterias
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Course Review
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Course Review you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Course Review
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Criteria: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Criteria
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Criteria created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Criteria/{DocumentName}':
    get:
      summary: Get a list of Warranty Claims
      description: Returns a list of Warranty Claims
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Warranty Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Criteria'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Criteria
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Criteria you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Warranty Claim: null
      tags:
        - DocTypes
    post:
      summary: Create a new Warranty Claim
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Warranty Claim created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warranty Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Warranty Claim/{DocumentName}':
    get:
      summary: Get a list of Error Snapshots
      description: Returns a list of Error Snapshots
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Error Snapshot'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warranty Claim'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Warranty Claim
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Warranty Claim you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Warranty Claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Error Snapshot: null
      tags:
        - DocTypes
    post:
      summary: Create a new Error Snapshot
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Error Snapshot created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Error Snapshot'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Error Snapshot/{DocumentName}':
    get:
      summary: Get a list of View Logs
      description: Returns a list of View Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/View Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Error Snapshot'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Error Snapshot
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Error Snapshot you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Error Snapshot
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/View Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new View Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: View Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/View Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/View Log/{DocumentName}':
    get:
      summary: Get a list of Competitors
      description: Returns a list of Competitors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Competitor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/View Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific View Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the View Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified View Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Competitor: null
      tags:
        - DocTypes
    post:
      summary: Create a new Competitor
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Competitor created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Competitor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Competitor/{DocumentName}':
    get:
      summary: Get a list of Print Format Field Templates
      description: Returns a list of Print Format Field Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Format Field Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Competitor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Competitor
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Competitor you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Competitor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Format Field Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Format Field Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Format Field Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format Field Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Format Field Template/{DocumentName}':
    get:
      summary: Get a list of UOMs
      description: Returns a list of UOMs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format Field Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Format Field Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Format Field Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Format Field Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UOM: null
      tags:
        - DocTypes
    post:
      summary: Create a new UOM
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UOM created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UOM/{DocumentName}':
    get:
      summary: Get a list of Support Settingss
      description: Returns a list of Support Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Support Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UOM
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UOM you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UOM
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Support Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Support Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Support Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Support Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Support Settings/{DocumentName}':
    get:
      summary: Get a list of Print Formats
      description: Returns a list of Print Formats
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Format'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Support Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Support Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Support Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Support Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Format: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Format
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Format created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Format/{DocumentName}':
    get:
      summary: Get a list of Network Printer Settingss
      description: Returns a list of Network Printer Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Network Printer Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Format'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Format
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Format you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Network Printer Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Network Printer Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Network Printer Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Network Printer Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Network Printer Settings/{DocumentName}':
    get:
      summary: Get a list of Interview Feedbacks
      description: Returns a list of Interview Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Network Printer Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Network Printer Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Network Printer Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Network Printer Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview Feedback/{DocumentName}':
    get:
      summary: Get a list of Interviews
      description: Returns a list of Interviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview/{DocumentName}':
    get:
      summary: Get a list of Interview Rounds
      description: Returns a list of Interview Rounds
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview Round'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview Round: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview Round
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview Round created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Round'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview Round/{DocumentName}':
    get:
      summary: Get a list of Interview Types
      description: Returns a list of Interview Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interview Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Round'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview Round
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview Round you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview Round
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interview Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interview Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interview Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interview Type/{DocumentName}':
    get:
      summary: Get a list of LMS Exercises
      description: Returns a list of LMS Exercises
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Exercise'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interview Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interview Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interview Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Exercise: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Exercise
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Exercise created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Exercise'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Exercise/{DocumentName}':
    get:
      summary: Get a list of Discussion Topics
      description: Returns a list of Discussion Topics
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Discussion Topic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Exercise'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Exercise
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Exercise you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Exercise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Discussion Topic: null
      tags:
        - DocTypes
    post:
      summary: Create a new Discussion Topic
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Discussion Topic created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Topic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Discussion Topic/{DocumentName}':
    get:
      summary: Get a list of Discussion Replys
      description: Returns a list of Discussion Replys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Discussion Reply'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Topic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Discussion Topic
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Discussion Topic you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Discussion Topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Discussion Reply: null
      tags:
        - DocTypes
    post:
      summary: Create a new Discussion Reply
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Discussion Reply created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Reply'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Discussion Reply/{DocumentName}':
    get:
      summary: Get a list of SMS Settingss
      description: Returns a list of SMS Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Discussion Reply'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Discussion Reply
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Discussion Reply you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Discussion Reply
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/SMS Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new SMS Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: SMS Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/SMS Settings/{DocumentName}':
    get:
      summary: Get a list of Tag Links
      description: Returns a list of Tag Links
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tag Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific SMS Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the SMS Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified SMS Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tag Link: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tag Link
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tag Link created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tag Link/{DocumentName}':
    get:
      summary: Get a list of Notes
      description: Returns a list of Notes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tag Link
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tag Link you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tag Link
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Note: null
      tags:
        - DocTypes
    post:
      summary: Create a new Note
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Note/{DocumentName}':
    get:
      summary: Get a list of Print Settingss
      description: Returns a list of Print Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Note
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Note you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Settings/{DocumentName}':
    get:
      summary: Get a list of ToDos
      description: Returns a list of ToDos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/ToDo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/ToDo: null
      tags:
        - DocTypes
    post:
      summary: Create a new ToDo
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: ToDo created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ToDo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/ToDo/{DocumentName}':
    get:
      summary: Get a list of Party Specific Items
      description: Returns a list of Party Specific Items
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Party Specific Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ToDo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific ToDo
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the ToDo you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified ToDo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Party Specific Item: null
      tags:
        - DocTypes
    post:
      summary: Create a new Party Specific Item
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Party Specific Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Specific Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Party Specific Item/{DocumentName}':
    get:
      summary: Get a list of Manufacturing Settingss
      description: Returns a list of Manufacturing Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Manufacturing Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Specific Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Party Specific Item
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Party Specific Item you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Party Specific Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Manufacturing Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Manufacturing Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Manufacturing Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturing Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Manufacturing Settings/{DocumentName}':
    get:
      summary: Get a list of Package Imports
      description: Returns a list of Package Imports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Package Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturing Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Manufacturing Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Manufacturing Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Manufacturing Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Package Import: null
      tags:
        - DocTypes
    post:
      summary: Create a new Package Import
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Package Import created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Package Import/{DocumentName}':
    get:
      summary: Get a list of Package Releases
      description: Returns a list of Package Releases
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Package Release'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Import'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Package Import
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Package Import you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Package Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Package Release: null
      tags:
        - DocTypes
    post:
      summary: Create a new Package Release
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Package Release created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Release'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Package Release/{DocumentName}':
    get:
      summary: Get a list of Packages
      description: Returns a list of Packages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package Release'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Package Release
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Package Release you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Package Release
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Package: null
      tags:
        - DocTypes
    post:
      summary: Create a new Package
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Package created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Package/{DocumentName}':
    get:
      summary: Get a list of Web Templates
      description: Returns a list of Web Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Web Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Package
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Package you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Package
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Web Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Web Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Web Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Web Template/{DocumentName}':
    get:
      summary: Get a list of Full and Final Statements
      description: Returns a list of Full and Final Statements
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Full and Final Statement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Web Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Web Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Web Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Web Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Full and Final Statement: null
      tags:
        - DocTypes
    post:
      summary: Create a new Full and Final Statement
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Full and Final Statement created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Full and Final Statement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Full and Final Statement/{DocumentName}':
    get:
      summary: Get a list of KSA VAT Settings
      description: Returns a list of KSA VAT Settings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/KSA VAT Setting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Full and Final Statement'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Full and Final Statement
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Full and Final Statement you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Full and Final Statement
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/KSA VAT Setting: null
      tags:
        - DocTypes
    post:
      summary: Create a new KSA VAT Setting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: KSA VAT Setting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KSA VAT Setting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/KSA VAT Setting/{DocumentName}':
    get:
      summary: Get a list of Party Links
      description: Returns a list of Party Links
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Party Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/KSA VAT Setting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific KSA VAT Setting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the KSA VAT Setting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified KSA VAT Setting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Party Link: null
      tags:
        - DocTypes
    post:
      summary: Create a new Party Link
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Party Link created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Party Link/{DocumentName}':
    get:
      summary: Get a list of Product Tax Categorys
      description: Returns a list of Product Tax Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Product Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Link'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Party Link
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Party Link you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Party Link
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Product Tax Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Product Tax Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Product Tax Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Product Tax Category/{DocumentName}':
    get:
      summary: Get a list of Healthcare Service Unit Types
      description: Returns a list of Healthcare Service Unit Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Healthcare Service Unit Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product Tax Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Product Tax Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Product Tax Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Product Tax Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Healthcare Service Unit Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Healthcare Service Unit Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Healthcare Service Unit Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Service Unit Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Healthcare Service Unit Type/{DocumentName}':
    get:
      summary: Get a list of Item Reviews
      description: Returns a list of Item Reviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcare Service Unit Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Healthcare Service Unit Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Healthcare Service Unit Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Healthcare Service Unit Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Review: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Review created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Review/{DocumentName}':
    get:
      summary: Get a list of LMS Course Interests
      description: Returns a list of LMS Course Interests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Course Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Review
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Review you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Review
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Course Interest: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Course Interest
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Course Interest created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Course Interest/{DocumentName}':
    get:
      summary: Get a list of Transaction Deletion Records
      description: Returns a list of Transaction Deletion Records
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Transaction Deletion Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Course Interest
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Course Interest you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Course Interest
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Transaction Deletion Record: null
      tags:
        - DocTypes
    post:
      summary: Create a new Transaction Deletion Record
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Transaction Deletion Record created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Deletion Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Transaction Deletion Record/{DocumentName}':
    get:
      summary: Get a list of Employee Separations
      description: Returns a list of Employee Separations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Separation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Deletion Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Transaction Deletion Record
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Transaction Deletion Record you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Transaction Deletion Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Separation: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Separation
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Separation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Separation/{DocumentName}':
    get:
      summary: Get a list of Tax Withholding Categorys
      description: Returns a list of Tax Withholding Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tax Withholding Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Separation
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Separation you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Separation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tax Withholding Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tax Withholding Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tax Withholding Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Withholding Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tax Withholding Category/{DocumentName}':
    get:
      summary: Get a list of Assignment Rules
      description: Returns a list of Assignment Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Assignment Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Withholding Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tax Withholding Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tax Withholding Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tax Withholding Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Assignment Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Assignment Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Assignment Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Assignment Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Assignment Rule/{DocumentName}':
    get:
      summary: Get a list of South Africa VAT Settingss
      description: Returns a list of South Africa VAT Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/South Africa VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Assignment Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Assignment Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Assignment Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Assignment Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/South Africa VAT Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new South Africa VAT Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: South Africa VAT Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/South Africa VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/South Africa VAT Settings/{DocumentName}':
    get:
      summary: Get a list of Wishlists
      description: Returns a list of Wishlists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Wishlist'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/South Africa VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific South Africa VAT Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the South Africa VAT Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified South Africa VAT Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Wishlist: null
      tags:
        - DocTypes
    post:
      summary: Create a new Wishlist
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Wishlist created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Wishlist'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Wishlist/{DocumentName}':
    get:
      summary: Get a list of Campaigns
      description: Returns a list of Campaigns
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Wishlist'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Wishlist
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Wishlist you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Wishlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Campaign: null
      tags:
        - DocTypes
    post:
      summary: Create a new Campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Campaign created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Campaign/{DocumentName}':
    get:
      summary: Get a list of Google Settingss
      description: Returns a list of Google Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Campaign
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Campaign you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Settings/{DocumentName}':
    get:
      summary: Get a list of Loan Security Pledges
      description: Returns a list of Loan Security Pledges
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Security Pledge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Security Pledge: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Security Pledge
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Security Pledge created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Pledge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Security Pledge/{DocumentName}':
    get:
      summary: Get a list of Blanket Orders
      description: Returns a list of Blanket Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blanket Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Pledge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Security Pledge
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Security Pledge you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Security Pledge
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blanket Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blanket Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blanket Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blanket Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blanket Order/{DocumentName}':
    get:
      summary: Get a list of Employee Grievances
      description: Returns a list of Employee Grievances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Grievance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blanket Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blanket Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blanket Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blanket Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Grievance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Grievance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Grievance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grievance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Grievance/{DocumentName}':
    get:
      summary: Get a list of Email Groups
      description: Returns a list of Email Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Grievance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Grievance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Grievance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Grievance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Group/{DocumentName}':
    get:
      summary: Get a list of Tax Rules
      description: Returns a list of Tax Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tax Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tax Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tax Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tax Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tax Rule/{DocumentName}':
    get:
      summary: Get a list of Maintenance Schedules
      description: Returns a list of Maintenance Schedules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Maintenance Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tax Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tax Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tax Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tax Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Maintenance Schedule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Maintenance Schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Maintenance Schedule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Maintenance Schedule/{DocumentName}':
    get:
      summary: Get a list of LMS Mentor Requests
      description: Returns a list of LMS Mentor Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Mentor Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Maintenance Schedule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Maintenance Schedule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Maintenance Schedule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Maintenance Schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Mentor Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Mentor Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Mentor Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Mentor Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Mentor Request/{DocumentName}':
    get:
      summary: Get a list of LMS Course Mentor Mappings
      description: Returns a list of LMS Course Mentor Mappings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LMS Course Mentor Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Mentor Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Mentor Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Mentor Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Mentor Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LMS Course Mentor Mapping: null
      tags:
        - DocTypes
    post:
      summary: Create a new LMS Course Mentor Mapping
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LMS Course Mentor Mapping created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Mentor Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LMS Course Mentor Mapping/{DocumentName}':
    get:
      summary: Get a list of Stock Entry Types
      description: Returns a list of Stock Entry Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Stock Entry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LMS Course Mentor Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LMS Course Mentor Mapping
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LMS Course Mentor Mapping you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LMS Course Mentor Mapping
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Stock Entry Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Stock Entry Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Stock Entry Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Stock Entry Type/{DocumentName}':
    get:
      summary: Get a list of Vehicle Logs
      description: Returns a list of Vehicle Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Vehicle Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stock Entry Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Stock Entry Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Stock Entry Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Stock Entry Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Vehicle Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Vehicle Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Vehicle Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Vehicle Log/{DocumentName}':
    get:
      summary: Get a list of Slack Webhook URLs
      description: Returns a list of Slack Webhook URLs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Slack Webhook URL'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vehicle Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Vehicle Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Vehicle Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Vehicle Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Slack Webhook URL: null
      tags:
        - DocTypes
    post:
      summary: Create a new Slack Webhook URL
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Slack Webhook URL created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Slack Webhook URL'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Slack Webhook URL/{DocumentName}':
    get:
      summary: Get a list of Promotional Schemes
      description: Returns a list of Promotional Schemes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Promotional Scheme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Slack Webhook URL'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Slack Webhook URL
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Slack Webhook URL you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Slack Webhook URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Promotional Scheme: null
      tags:
        - DocTypes
    post:
      summary: Create a new Promotional Scheme
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Promotional Scheme created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Promotional Scheme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Promotional Scheme/{DocumentName}':
    get:
      summary: Get a list of Employee Referrals
      description: Returns a list of Employee Referrals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Referral'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Promotional Scheme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Promotional Scheme
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Promotional Scheme you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Promotional Scheme
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Referral: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Referral
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Referral created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Referral'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Referral/{DocumentName}':
    get:
      summary: Get a list of Notifications
      description: Returns a list of Notifications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Referral'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Referral
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Referral you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Referral
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Notification: null
      tags:
        - DocTypes
    post:
      summary: Create a new Notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Notification created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Notification/{DocumentName}':
    get:
      summary: Get a list of Invite Requests
      description: Returns a list of Invite Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Invite Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notification'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Notification
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Notification you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Invite Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Invite Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Invite Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invite Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Invite Request/{DocumentName}':
    get:
      summary: Get a list of OAuth Authorization Codes
      description: Returns a list of OAuth Authorization Codes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Authorization Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invite Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Invite Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Invite Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Invite Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Authorization Code: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Authorization Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Authorization Code created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Authorization Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Authorization Code/{DocumentName}':
    get:
      summary: Get a list of Import Supplier Invoices
      description: Returns a list of Import Supplier Invoices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Import Supplier Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Authorization Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Authorization Code
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Authorization Code you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Authorization Code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Import Supplier Invoice: null
      tags:
        - DocTypes
    post:
      summary: Create a new Import Supplier Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Import Supplier Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Import Supplier Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Import Supplier Invoice/{DocumentName}':
    get:
      summary: Get a list of Loan Applications
      description: Returns a list of Loan Applications
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Import Supplier Invoice'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Import Supplier Invoice
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Import Supplier Invoice you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Import Supplier Invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Application: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Application
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Application created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Application/{DocumentName}':
    get:
      summary: Get a list of Loan Security Unpledges
      description: Returns a list of Loan Security Unpledges
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Security Unpledge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Application
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Application you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Application
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Security Unpledge: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Security Unpledge
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Security Unpledge created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Unpledge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Security Unpledge/{DocumentName}':
    get:
      summary: Get a list of Loan Write Offs
      description: Returns a list of Loan Write Offs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Write Off'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Unpledge'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Security Unpledge
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Security Unpledge you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Security Unpledge
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Write Off: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Write Off
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Write Off created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Write Off'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Write Off/{DocumentName}':
    get:
      summary: Get a list of Subscriptions
      description: Returns a list of Subscriptions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Write Off'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Write Off
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Write Off you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Write Off
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subscription: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subscription
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subscription created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subscription/{DocumentName}':
    get:
      summary: Get a list of POS Settingss
      description: Returns a list of POS Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subscription
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subscription you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subscription
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Settings/{DocumentName}':
    get:
      summary: Get a list of User Groups
      description: Returns a list of User Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/User Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/User Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new User Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: User Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/User Group/{DocumentName}':
    get:
      summary: Get a list of Social Media Posts
      description: Returns a list of Social Media Posts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Social Media Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific User Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the User Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified User Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Social Media Post: null
      tags:
        - DocTypes
    post:
      summary: Create a new Social Media Post
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Social Media Post created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Social Media Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Social Media Post/{DocumentName}':
    get:
      summary: Get a list of Contact Us Settingss
      description: Returns a list of Contact Us Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contact Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Social Media Post'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Social Media Post
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Social Media Post you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Social Media Post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contact Us Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contact Us Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contact Us Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contact Us Settings/{DocumentName}':
    get:
      summary: Get a list of Plaid Settingss
      description: Returns a list of Plaid Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Plaid Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contact Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contact Us Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contact Us Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contact Us Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Plaid Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Plaid Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Plaid Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Plaid Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Plaid Settings/{DocumentName}':
    get:
      summary: Get a list of Mpesa Settingss
      description: Returns a list of Mpesa Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Mpesa Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Plaid Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Plaid Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Plaid Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Plaid Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Mpesa Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Mpesa Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Mpesa Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mpesa Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Mpesa Settings/{DocumentName}':
    get:
      summary: Get a list of Brands
      description: Returns a list of Brands
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mpesa Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Mpesa Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Mpesa Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Mpesa Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Brand: null
      tags:
        - DocTypes
    post:
      summary: Create a new Brand
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Brand created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Brand/{DocumentName}':
    get:
      summary: Get a list of Quality Meetings
      description: Returns a list of Quality Meetings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Meeting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Brand
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Brand you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Brand
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Meeting: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Meeting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Meeting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Meeting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Meeting/{DocumentName}':
    get:
      summary: Get a list of Asset Categorys
      description: Returns a list of Asset Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Meeting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Meeting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Meeting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Meeting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Category/{DocumentName}':
    get:
      summary: Get a list of Quality Inspection Parameters
      description: Returns a list of Quality Inspection Parameters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection Parameter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection Parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection Parameter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection Parameter/{DocumentName}':
    get:
      summary: Get a list of LinkedIn Settingss
      description: Returns a list of LinkedIn Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/LinkedIn Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection Parameter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection Parameter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection Parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/LinkedIn Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new LinkedIn Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: LinkedIn Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LinkedIn Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/LinkedIn Settings/{DocumentName}':
    get:
      summary: Get a list of Twitter Settingss
      description: Returns a list of Twitter Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Twitter Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LinkedIn Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific LinkedIn Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the LinkedIn Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified LinkedIn Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Twitter Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Twitter Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Twitter Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Twitter Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Twitter Settings/{DocumentName}':
    get:
      summary: Get a list of Homepages
      description: Returns a list of Homepages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Homepage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Twitter Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Twitter Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Twitter Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Twitter Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Homepage: null
      tags:
        - DocTypes
    post:
      summary: Create a new Homepage
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Homepage created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Homepage/{DocumentName}':
    get:
      summary: Get a list of Payment Terms
      description: Returns a list of Payment Terms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Homepage
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Homepage you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Homepage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Term: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Term
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Term created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Term/{DocumentName}':
    get:
      summary: Get a list of Accounting Dimensions
      description: Returns a list of Accounting Dimensions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounting Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Term
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Term you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Term
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounting Dimension: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounting Dimension
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounting Dimension created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounting Dimension/{DocumentName}':
    get:
      summary: Get a list of Quality Inspection Parameter Groups
      description: Returns a list of Quality Inspection Parameter Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection Parameter Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounting Dimension
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounting Dimension you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounting Dimension
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection Parameter Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection Parameter Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection Parameter Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection Parameter Group/{DocumentName}':
    get:
      summary: Get a list of Accounting Dimension Filters
      description: Returns a list of Accounting Dimension Filters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounting Dimension Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Parameter Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection Parameter Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection Parameter Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection Parameter Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounting Dimension Filter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounting Dimension Filter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounting Dimension Filter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounting Dimension Filter/{DocumentName}':
    get:
      summary: Get a list of Auto Email Reports
      description: Returns a list of Auto Email Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Auto Email Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Dimension Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounting Dimension Filter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounting Dimension Filter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounting Dimension Filter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Auto Email Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Auto Email Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Auto Email Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Email Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Auto Email Report/{DocumentName}':
    get:
      summary: Get a list of Landed Cost Vouchers
      description: Returns a list of Landed Cost Vouchers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Landed Cost Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Email Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Auto Email Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Auto Email Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Auto Email Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Landed Cost Voucher: null
      tags:
        - DocTypes
    post:
      summary: Create a new Landed Cost Voucher
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Landed Cost Voucher created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Landed Cost Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Landed Cost Voucher/{DocumentName}':
    get:
      summary: Get a list of Asset Maintenance Teams
      description: Returns a list of Asset Maintenance Teams
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Maintenance Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Landed Cost Voucher'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Landed Cost Voucher
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Landed Cost Voucher you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Landed Cost Voucher
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Maintenance Team: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Maintenance Team
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Maintenance Team created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Maintenance Team/{DocumentName}':
    get:
      summary: Get a list of Asset Value Adjustments
      description: Returns a list of Asset Value Adjustments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Value Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Team'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Maintenance Team
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Maintenance Team you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Maintenance Team
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Value Adjustment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Value Adjustment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Value Adjustment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Value Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Value Adjustment/{DocumentName}':
    get:
      summary: Get a list of Asset Maintenance Logs
      description: Returns a list of Asset Maintenance Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Maintenance Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Value Adjustment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Value Adjustment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Value Adjustment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Value Adjustment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Maintenance Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Maintenance Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Maintenance Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Maintenance Log/{DocumentName}':
    get:
      summary: Get a list of Website Themes
      description: Returns a list of Website Themes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Theme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Maintenance Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Maintenance Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Maintenance Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Theme: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Theme
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Theme created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Theme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Theme/{DocumentName}':
    get:
      summary: Get a list of Loan Security Prices
      description: Returns a list of Loan Security Prices
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Security Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Theme'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Theme
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Theme you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Theme
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Security Price: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Security Price
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Security Price created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Security Price/{DocumentName}':
    get:
      summary: Get a list of Process Loan Security Shortfalls
      description: Returns a list of Process Loan Security Shortfalls
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Loan Security Shortfall'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Price'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Security Price
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Security Price you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Security Price
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Loan Security Shortfall: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Loan Security Shortfall
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Loan Security Shortfall created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Loan Security Shortfall'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Loan Security Shortfall/{DocumentName}':
    get:
      summary: Get a list of Auto Repeats
      description: Returns a list of Auto Repeats
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Auto Repeat'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Loan Security Shortfall'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Loan Security Shortfall
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Loan Security Shortfall you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Loan Security Shortfall
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Auto Repeat: null
      tags:
        - DocTypes
    post:
      summary: Create a new Auto Repeat
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Auto Repeat created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Repeat'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Auto Repeat/{DocumentName}':
    get:
      summary: Get a list of Inpatient Medication Entrys
      description: Returns a list of Inpatient Medication Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Inpatient Medication Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auto Repeat'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Auto Repeat
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Auto Repeat you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Auto Repeat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Inpatient Medication Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Inpatient Medication Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Inpatient Medication Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inpatient Medication Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Inpatient Medication Entry/{DocumentName}':
    get:
      summary: Get a list of Leave Ledger Entrys
      description: Returns a list of Leave Ledger Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inpatient Medication Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Inpatient Medication Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Inpatient Medication Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Inpatient Medication Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Ledger Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Ledger Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Ledger Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Ledger Entry/{DocumentName}':
    get:
      summary: Get a list of UAE VAT Settingss
      description: Returns a list of UAE VAT Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UAE VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Ledger Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Ledger Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Ledger Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Ledger Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UAE VAT Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new UAE VAT Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UAE VAT Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UAE VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UAE VAT Settings/{DocumentName}':
    get:
      summary: Get a list of Workflows
      description: Returns a list of Workflows
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Workflow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UAE VAT Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UAE VAT Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UAE VAT Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UAE VAT Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Workflow: null
      tags:
        - DocTypes
    post:
      summary: Create a new Workflow
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Workflow created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Workflow/{DocumentName}':
    get:
      summary: Get a list of Voice Call Settingss
      description: Returns a list of Voice Call Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Voice Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workflow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Workflow
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Workflow you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Workflow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Voice Call Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Voice Call Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Voice Call Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Voice Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Voice Call Settings/{DocumentName}':
    get:
      summary: Get a list of Contracts
      description: Returns a list of Contracts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Voice Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Voice Call Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Voice Call Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Voice Call Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contract: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contract
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contract created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contract/{DocumentName}':
    get:
      summary: Get a list of Contract Templates
      description: Returns a list of Contract Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Contract Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contract
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contract you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contract
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Contract Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Contract Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Contract Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Contract Template/{DocumentName}':
    get:
      summary: Get a list of Custom DocPerms
      description: Returns a list of Custom DocPerms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom DocPerm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Contract Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Contract Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Contract Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom DocPerm: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom DocPerm
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom DocPerm created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom DocPerm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom DocPerm/{DocumentName}':
    get:
      summary: Get a list of Putaway Rules
      description: Returns a list of Putaway Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Putaway Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom DocPerm'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom DocPerm
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom DocPerm you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom DocPerm
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Putaway Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Putaway Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Putaway Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Putaway Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Putaway Rule/{DocumentName}':
    get:
      summary: Get a list of Patient History Settingss
      description: Returns a list of Patient History Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient History Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Putaway Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Putaway Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Putaway Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Putaway Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient History Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient History Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient History Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient History Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient History Settings/{DocumentName}':
    get:
      summary: Get a list of Incoming Call Settingss
      description: Returns a list of Incoming Call Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Incoming Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient History Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient History Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient History Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient History Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Incoming Call Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Incoming Call Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Incoming Call Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoming Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Incoming Call Settings/{DocumentName}':
    get:
      summary: Get a list of Fiscal Years
      description: Returns a list of Fiscal Years
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Fiscal Year'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Incoming Call Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Incoming Call Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Incoming Call Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Incoming Call Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Fiscal Year: null
      tags:
        - DocTypes
    post:
      summary: Create a new Fiscal Year
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Fiscal Year created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Fiscal Year'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Fiscal Year/{DocumentName}':
    get:
      summary: Get a list of Therapy Plans
      description: Returns a list of Therapy Plans
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Therapy Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Fiscal Year'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Fiscal Year
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Fiscal Year you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Fiscal Year
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Therapy Plan: null
      tags:
        - DocTypes
    post:
      summary: Create a new Therapy Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Therapy Plan created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Therapy Plan/{DocumentName}':
    get:
      summary: Get a list of Communication Mediums
      description: Returns a list of Communication Mediums
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Communication Medium'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Therapy Plan'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Therapy Plan
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Therapy Plan you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Therapy Plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Communication Medium: null
      tags:
        - DocTypes
    post:
      summary: Create a new Communication Medium
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Communication Medium created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication Medium'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Communication Medium/{DocumentName}':
    get:
      summary: Get a list of Quality Actions
      description: Returns a list of Quality Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Communication Medium'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Communication Medium
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Communication Medium you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Communication Medium
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Action/{DocumentName}':
    get:
      summary: Get a list of Quality Feedbacks
      description: Returns a list of Quality Feedbacks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Feedback: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Feedback created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Feedback/{DocumentName}':
    get:
      summary: Get a list of Quality Feedback Templates
      description: Returns a list of Quality Feedback Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Feedback Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Feedback
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Feedback you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Feedback Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Feedback Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Feedback Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Feedback Template/{DocumentName}':
    get:
      summary: Get a list of Quality Goals
      description: Returns a list of Quality Goals
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Feedback Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Feedback Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Feedback Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Feedback Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Goal: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Goal
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Goal created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Goal/{DocumentName}':
    get:
      summary: Get a list of Event Producer Last Updates
      description: Returns a list of Event Producer Last Updates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event Producer Last Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Goal'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Goal
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Goal you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Goal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event Producer Last Update: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event Producer Last Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event Producer Last Update created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Producer Last Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event Producer Last Update/{DocumentName}':
    get:
      summary: Get a list of Event Producers
      description: Returns a list of Event Producers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event Producer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Producer Last Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event Producer Last Update
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event Producer Last Update you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event Producer Last Update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event Producer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event Producer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event Producer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Producer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event Producer/{DocumentName}':
    get:
      summary: Get a list of Loan Securitys
      description: Returns a list of Loan Securitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Security'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Producer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event Producer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event Producer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event Producer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Security: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Security created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Security/{DocumentName}':
    get:
      summary: Get a list of Quality Reviews
      description: Returns a list of Quality Reviews
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Security
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Security you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Security
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Review: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Review created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Review/{DocumentName}':
    get:
      summary: Get a list of About Us Settingss
      description: Returns a list of About Us Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/About Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Review'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Review
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Review you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Review
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/About Us Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new About Us Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: About Us Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/About Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/About Us Settings/{DocumentName}':
    get:
      summary: Get a list of Item Attributes
      description: Returns a list of Item Attributes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Attribute'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/About Us Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific About Us Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the About Us Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified About Us Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Attribute: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Attribute
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Attribute created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Attribute'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Attribute/{DocumentName}':
    get:
      summary: Get a list of Inpatient Medication Orders
      description: Returns a list of Inpatient Medication Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Inpatient Medication Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Attribute'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Attribute
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Attribute you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Attribute
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Inpatient Medication Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Inpatient Medication Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Inpatient Medication Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inpatient Medication Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Inpatient Medication Order/{DocumentName}':
    get:
      summary: Get a list of Social Login Keys
      description: Returns a list of Social Login Keys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Social Login Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Inpatient Medication Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Inpatient Medication Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Inpatient Medication Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Inpatient Medication Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Social Login Key: null
      tags:
        - DocTypes
    post:
      summary: Create a new Social Login Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Social Login Key created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Social Login Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Social Login Key/{DocumentName}':
    get:
      summary: Get a list of Blog Categorys
      description: Returns a list of Blog Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blog Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Social Login Key'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Social Login Key
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Social Login Key you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Social Login Key
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blog Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blog Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blog Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blog Category/{DocumentName}':
    get:
      summary: Get a list of Shipment Parcel Templates
      description: Returns a list of Shipment Parcel Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shipment Parcel Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blog Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blog Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blog Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shipment Parcel Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shipment Parcel Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shipment Parcel Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment Parcel Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shipment Parcel Template/{DocumentName}':
    get:
      summary: Get a list of Payment Gateway Accounts
      description: Returns a list of Payment Gateway Accounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Gateway Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipment Parcel Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shipment Parcel Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shipment Parcel Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shipment Parcel Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Gateway Account: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Gateway Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Gateway Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Gateway Account/{DocumentName}':
    get:
      summary: Get a list of Mode of Payments
      description: Returns a list of Mode of Payments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Mode of Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Gateway Account'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Gateway Account
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Gateway Account you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Gateway Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Mode of Payment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Mode of Payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Mode of Payment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mode of Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Mode of Payment/{DocumentName}':
    get:
      summary: Get a list of Domains
      description: Returns a list of Domains
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mode of Payment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Mode of Payment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Mode of Payment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Mode of Payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Domain: null
      tags:
        - DocTypes
    post:
      summary: Create a new Domain
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Domain created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Domain/{DocumentName}':
    get:
      summary: Get a list of Calendar Views
      description: Returns a list of Calendar Views
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Calendar View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Domain
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Domain you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Domain
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Calendar View: null
      tags:
        - DocTypes
    post:
      summary: Create a new Calendar View
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Calendar View created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Calendar View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Calendar View/{DocumentName}':
    get:
      summary: Get a list of Product Bundles
      description: Returns a list of Product Bundles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Product Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Calendar View'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Calendar View
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Calendar View you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Calendar View
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Product Bundle: null
      tags:
        - DocTypes
    post:
      summary: Create a new Product Bundle
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Product Bundle created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Product Bundle/{DocumentName}':
    get:
      summary: Get a list of Google Contactss
      description: Returns a list of Google Contactss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Contacts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product Bundle'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Product Bundle
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Product Bundle you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Product Bundle
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Contacts: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Contacts
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Contacts created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Contacts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Contacts/{DocumentName}':
    get:
      summary: Get a list of Upload Attendances
      description: Returns a list of Upload Attendances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Upload Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Contacts'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Contacts
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Contacts you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Upload Attendance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Upload Attendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Upload Attendance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Upload Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Upload Attendance/{DocumentName}':
    get:
      summary: Get a list of Expense Claim Types
      description: Returns a list of Expense Claim Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Expense Claim Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Upload Attendance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Upload Attendance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Upload Attendance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Upload Attendance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Expense Claim Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Expense Claim Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Expense Claim Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Expense Claim Type/{DocumentName}':
    get:
      summary: Get a list of Document Follows
      description: Returns a list of Document Follows
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Follow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Expense Claim Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Expense Claim Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Expense Claim Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Expense Claim Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Follow: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Follow
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Follow created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Follow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Follow/{DocumentName}':
    get:
      summary: Get a list of Event Consumers
      description: Returns a list of Event Consumers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event Consumer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Follow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Follow
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Follow you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Follow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event Consumer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event Consumer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event Consumer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Consumer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event Consumer/{DocumentName}':
    get:
      summary: Get a list of Videos
      description: Returns a list of Videos
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Video'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Consumer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event Consumer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event Consumer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event Consumer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Video: null
      tags:
        - DocTypes
    post:
      summary: Create a new Video
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Video created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Video/{DocumentName}':
    get:
      summary: Get a list of Video Settingss
      description: Returns a list of Video Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Video Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Video
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Video you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Video
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Video Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Video Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Video Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Video Settings/{DocumentName}':
    get:
      summary: Get a list of Event Update Logs
      description: Returns a list of Event Update Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Video Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Video Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Video Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Video Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event Update Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event Update Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event Update Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event Update Log/{DocumentName}':
    get:
      summary: Get a list of Process Deferred Accountings
      description: Returns a list of Process Deferred Accountings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Process Deferred Accounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Update Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event Update Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event Update Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event Update Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Process Deferred Accounting: null
      tags:
        - DocTypes
    post:
      summary: Create a new Process Deferred Accounting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Process Deferred Accounting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Deferred Accounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Process Deferred Accounting/{DocumentName}':
    get:
      summary: Get a list of Email Digests
      description: Returns a list of Email Digests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Digest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Process Deferred Accounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Process Deferred Accounting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Process Deferred Accounting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Process Deferred Accounting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Digest: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Digest
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Digest created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Digest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Digest/{DocumentName}':
    get:
      summary: Get a list of Shift Requests
      description: Returns a list of Shift Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shift Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Digest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Digest
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Digest you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Digest
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shift Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shift Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shift Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shift Request/{DocumentName}':
    get:
      summary: Get a list of Navbar Settingss
      description: Returns a list of Navbar Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Navbar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shift Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shift Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shift Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shift Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Navbar Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Navbar Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Navbar Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Navbar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Navbar Settings/{DocumentName}':
    get:
      summary: Get a list of Portal Settingss
      description: Returns a list of Portal Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Portal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Navbar Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Navbar Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Navbar Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Navbar Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Portal Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Portal Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Portal Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Portal Settings/{DocumentName}':
    get:
      summary: Get a list of Dunnings
      description: Returns a list of Dunnings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dunning'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portal Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Portal Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Portal Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Portal Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dunning: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dunning
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dunning created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dunning/{DocumentName}':
    get:
      summary: Get a list of Sample Collections
      description: Returns a list of Sample Collections
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sample Collection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dunning
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dunning you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dunning
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sample Collection: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sample Collection
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sample Collection created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sample Collection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sample Collection/{DocumentName}':
    get:
      summary: Get a list of Dashboards
      description: Returns a list of Dashboards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sample Collection'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sample Collection
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sample Collection you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sample Collection
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard/{DocumentName}':
    get:
      summary: Get a list of Banks
      description: Returns a list of Banks
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank/{DocumentName}':
    get:
      summary: Get a list of Dunning Types
      description: Returns a list of Dunning Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dunning Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dunning Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dunning Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dunning Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dunning Type/{DocumentName}':
    get:
      summary: Get a list of Email Campaigns
      description: Returns a list of Email Campaigns
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dunning Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dunning Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dunning Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dunning Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Campaign: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Campaign
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Campaign created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Campaign/{DocumentName}':
    get:
      summary: Get a list of Payroll Periods
      description: Returns a list of Payroll Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payroll Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Campaign'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Campaign
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Campaign you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Campaign
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payroll Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payroll Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payroll Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payroll Period/{DocumentName}':
    get:
      summary: Get a list of Dashboard Chart Sources
      description: Returns a list of Dashboard Chart Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard Chart Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payroll Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payroll Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payroll Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payroll Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard Chart Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard Chart Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard Chart Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard Chart Source/{DocumentName}':
    get:
      summary: Get a list of Customs Tariff Numbers
      description: Returns a list of Customs Tariff Numbers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Customs Tariff Number'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Chart Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard Chart Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard Chart Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard Chart Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Customs Tariff Number: null
      tags:
        - DocTypes
    post:
      summary: Create a new Customs Tariff Number
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Customs Tariff Number created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customs Tariff Number'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Customs Tariff Number/{DocumentName}':
    get:
      summary: Get a list of Job Offers
      description: Returns a list of Job Offers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Offer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Customs Tariff Number'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Customs Tariff Number
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Customs Tariff Number you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Customs Tariff Number
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Offer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Offer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Offer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Offer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Offer/{DocumentName}':
    get:
      summary: Get a list of Patient Assessments
      description: Returns a list of Patient Assessments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient Assessment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Offer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Offer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Offer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Offer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient Assessment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient Assessment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient Assessment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Assessment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient Assessment/{DocumentName}':
    get:
      summary: Get a list of Subscription Settingss
      description: Returns a list of Subscription Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Subscription Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Assessment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient Assessment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient Assessment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient Assessment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Subscription Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Subscription Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Subscription Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Subscription Settings/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Sub Categorys
      description: Returns a list of Employee Tax Exemption Sub Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Sub Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Subscription Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Subscription Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Subscription Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Sub Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Sub Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Sub Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Sub Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Sub Category/{DocumentName}':
    get:
      summary: Get a list of Employee Tax Exemption Categorys
      description: Returns a list of Employee Tax Exemption Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Tax Exemption Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Sub Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Sub Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Sub Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Sub Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Tax Exemption Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Tax Exemption Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Tax Exemption Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Tax Exemption Category/{DocumentName}':
    get:
      summary: Get a list of Module Onboardings
      description: Returns a list of Module Onboardings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Module Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Tax Exemption Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Tax Exemption Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Tax Exemption Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Tax Exemption Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Module Onboarding: null
      tags:
        - DocTypes
    post:
      summary: Create a new Module Onboarding
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Module Onboarding created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Module Onboarding/{DocumentName}':
    get:
      summary: Get a list of POS Opening Entrys
      description: Returns a list of POS Opening Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/POS Opening Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Module Onboarding'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Module Onboarding
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Module Onboarding you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Module Onboarding
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/POS Opening Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new POS Opening Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: POS Opening Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Opening Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/POS Opening Entry/{DocumentName}':
    get:
      summary: Get a list of Asset Maintenances
      description: Returns a list of Asset Maintenances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Asset Maintenance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/POS Opening Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific POS Opening Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the POS Opening Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified POS Opening Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Asset Maintenance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Asset Maintenance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Asset Maintenance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Asset Maintenance/{DocumentName}':
    get:
      summary: Get a list of Bloggers
      description: Returns a list of Bloggers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Blogger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Asset Maintenance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Asset Maintenance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Asset Maintenance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Asset Maintenance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Blogger: null
      tags:
        - DocTypes
    post:
      summary: Create a new Blogger
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Blogger created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blogger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Blogger/{DocumentName}':
    get:
      summary: Get a list of Downtime Entrys
      description: Returns a list of Downtime Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Downtime Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blogger'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Blogger
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Blogger you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Blogger
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Downtime Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Downtime Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Downtime Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Downtime Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Downtime Entry/{DocumentName}':
    get:
      summary: Get a list of Loan Security Types
      description: Returns a list of Loan Security Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loan Security Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Downtime Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Downtime Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Downtime Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Downtime Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loan Security Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loan Security Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loan Security Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loan Security Type/{DocumentName}':
    get:
      summary: Get a list of List View Settingss
      description: Returns a list of List View Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/List View Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loan Security Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loan Security Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loan Security Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loan Security Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/List View Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new List View Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: List View Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List View Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/List View Settings/{DocumentName}':
    get:
      summary: Get a list of Installed Applicationss
      description: Returns a list of Installed Applicationss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Installed Applications'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List View Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific List View Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the List View Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified List View Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Installed Applications: null
      tags:
        - DocTypes
    post:
      summary: Create a new Installed Applications
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Installed Applications created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installed Applications'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Installed Applications/{DocumentName}':
    get:
      summary: Get a list of Journal Entry Templates
      description: Returns a list of Journal Entry Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Journal Entry Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installed Applications'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Installed Applications
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Installed Applications you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Installed Applications
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Journal Entry Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Journal Entry Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Journal Entry Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Journal Entry Template/{DocumentName}':
    get:
      summary: Get a list of Patient Medical Records
      description: Returns a list of Patient Medical Records
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient Medical Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Journal Entry Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Journal Entry Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Journal Entry Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Journal Entry Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient Medical Record: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient Medical Record
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient Medical Record created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Medical Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient Medical Record/{DocumentName}':
    get:
      summary: Get a list of Tally Migrations
      description: Returns a list of Tally Migrations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tally Migration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Medical Record'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient Medical Record
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient Medical Record you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient Medical Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tally Migration: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tally Migration
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tally Migration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tally Migration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tally Migration/{DocumentName}':
    get:
      summary: Get a list of Quality Inspection Templates
      description: Returns a list of Quality Inspection Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quality Inspection Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tally Migration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tally Migration
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tally Migration you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tally Migration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quality Inspection Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quality Inspection Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quality Inspection Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quality Inspection Template/{DocumentName}':
    get:
      summary: Get a list of Project Templates
      description: Returns a list of Project Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quality Inspection Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quality Inspection Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quality Inspection Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quality Inspection Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project Template/{DocumentName}':
    get:
      summary: Get a list of Patient Assessment Templates
      description: Returns a list of Patient Assessment Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient Assessment Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient Assessment Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient Assessment Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient Assessment Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Assessment Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient Assessment Template/{DocumentName}':
    get:
      summary: Get a list of Patient Assessment Parameters
      description: Returns a list of Patient Assessment Parameters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Patient Assessment Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Assessment Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient Assessment Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient Assessment Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient Assessment Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Patient Assessment Parameter: null
      tags:
        - DocTypes
    post:
      summary: Create a new Patient Assessment Parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Patient Assessment Parameter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Assessment Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Patient Assessment Parameter/{DocumentName}':
    get:
      summary: Get a list of Colors
      description: Returns a list of Colors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Color'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient Assessment Parameter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Patient Assessment Parameter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Patient Assessment Parameter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Patient Assessment Parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Color: null
      tags:
        - DocTypes
    post:
      summary: Create a new Color
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Color created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Color'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Color/{DocumentName}':
    get:
      summary: Get a list of Bank Account Types
      description: Returns a list of Bank Account Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Account Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Color'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Color
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Color you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Color
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Account Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Account Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Account Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Account Type/{DocumentName}':
    get:
      summary: Get a list of Body Parts
      description: Returns a list of Body Parts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Body Part'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Account Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Account Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Account Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Body Part: null
      tags:
        - DocTypes
    post:
      summary: Create a new Body Part
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Body Part created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Body Part'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Body Part/{DocumentName}':
    get:
      summary: Get a list of Item Manufacturers
      description: Returns a list of Item Manufacturers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Body Part'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Body Part
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Body Part you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Body Part
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Manufacturer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Manufacturer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Manufacturer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Manufacturer/{DocumentName}':
    get:
      summary: Get a list of GL Entrys
      description: Returns a list of GL Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/GL Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Manufacturer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Manufacturer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Manufacturer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/GL Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new GL Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: GL Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GL Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/GL Entry/{DocumentName}':
    get:
      summary: Get a list of Payment Orders
      description: Returns a list of Payment Orders
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GL Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific GL Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the GL Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified GL Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Order: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Order/{DocumentName}':
    get:
      summary: Get a list of Payment Terms Templates
      description: Returns a list of Payment Terms Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Payment Terms Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Order'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Order
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Order you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Payment Terms Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Payment Terms Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Payment Terms Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Terms Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Payment Terms Template/{DocumentName}':
    get:
      summary: Get a list of Dashboard Settingss
      description: Returns a list of Dashboard Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dashboard Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment Terms Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Payment Terms Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Payment Terms Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Payment Terms Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dashboard Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dashboard Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dashboard Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dashboard Settings/{DocumentName}':
    get:
      summary: Get a list of Exercise Difficulty Levels
      description: Returns a list of Exercise Difficulty Levels
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exercise Difficulty Level'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dashboard Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dashboard Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dashboard Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dashboard Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exercise Difficulty Level: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exercise Difficulty Level
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exercise Difficulty Level created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Difficulty Level'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exercise Difficulty Level/{DocumentName}':
    get:
      summary: Get a list of Sales Persons
      description: Returns a list of Sales Persons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Person'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exercise Difficulty Level'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exercise Difficulty Level
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exercise Difficulty Level you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exercise Difficulty Level
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Person: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Person
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Person created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Person'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Person/{DocumentName}':
    get:
      summary: Get a list of Chart of Accounts Importers
      description: Returns a list of Chart of Accounts Importers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Chart of Accounts Importer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Person'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Person
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Person you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Person
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Chart of Accounts Importer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Chart of Accounts Importer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Chart of Accounts Importer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Chart of Accounts Importer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Chart of Accounts Importer/{DocumentName}':
    get:
      summary: Get a list of Sanctioned Loan Amounts
      description: Returns a list of Sanctioned Loan Amounts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sanctioned Loan Amount'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Chart of Accounts Importer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Chart of Accounts Importer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Chart of Accounts Importer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Chart of Accounts Importer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sanctioned Loan Amount: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sanctioned Loan Amount
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sanctioned Loan Amount created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sanctioned Loan Amount'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sanctioned Loan Amount/{DocumentName}':
    get:
      summary: Get a list of Loyalty Point Entrys
      description: Returns a list of Loyalty Point Entrys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loyalty Point Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sanctioned Loan Amount'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sanctioned Loan Amount
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sanctioned Loan Amount you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sanctioned Loan Amount
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loyalty Point Entry: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loyalty Point Entry
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loyalty Point Entry created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Point Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loyalty Point Entry/{DocumentName}':
    get:
      summary: Get a list of Lab Test Samples
      description: Returns a list of Lab Test Samples
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lab Test Sample'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Point Entry'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loyalty Point Entry
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loyalty Point Entry you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loyalty Point Entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lab Test Sample: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lab Test Sample
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lab Test Sample created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test Sample'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lab Test Sample/{DocumentName}':
    get:
      summary: Get a list of Share Transfers
      description: Returns a list of Share Transfers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Share Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test Sample'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lab Test Sample
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lab Test Sample you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lab Test Sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Share Transfer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Share Transfer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Share Transfer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Share Transfer/{DocumentName}':
    get:
      summary: Get a list of Employee Skill Maps
      description: Returns a list of Employee Skill Maps
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Skill Map'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Share Transfer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Share Transfer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Share Transfer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Skill Map: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Skill Map
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Skill Map created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Skill Map'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Skill Map/{DocumentName}':
    get:
      summary: Get a list of Leave Control Panels
      description: Returns a list of Leave Control Panels
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Leave Control Panel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Skill Map'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Skill Map
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Skill Map you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Skill Map
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Leave Control Panel: null
      tags:
        - DocTypes
    post:
      summary: Create a new Leave Control Panel
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Leave Control Panel created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Control Panel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Leave Control Panel/{DocumentName}':
    get:
      summary: Get a list of Website Route Metas
      description: Returns a list of Website Route Metas
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Route Meta'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Leave Control Panel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Leave Control Panel
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Leave Control Panel you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Leave Control Panel
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Route Meta: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Route Meta
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Route Meta created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Route Meta'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Route Meta/{DocumentName}':
    get:
      summary: Get a list of Woocommerce Settingss
      description: Returns a list of Woocommerce Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Woocommerce Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Route Meta'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Route Meta
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Route Meta you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Route Meta
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Woocommerce Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Woocommerce Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Woocommerce Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Woocommerce Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Woocommerce Settings/{DocumentName}':
    get:
      summary: Get a list of Energy Point Rules
      description: Returns a list of Energy Point Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Energy Point Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Woocommerce Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Woocommerce Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Woocommerce Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Woocommerce Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Energy Point Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Energy Point Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Energy Point Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Energy Point Rule/{DocumentName}':
    get:
      summary: Get a list of Coupon Codes
      description: Returns a list of Coupon Codes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Coupon Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Energy Point Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Energy Point Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Energy Point Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Energy Point Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Coupon Code: null
      tags:
        - DocTypes
    post:
      summary: Create a new Coupon Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Coupon Code created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Coupon Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Coupon Code/{DocumentName}':
    get:
      summary: Get a list of Sales Partners
      description: Returns a list of Sales Partners
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sales Partner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Coupon Code'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Coupon Code
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Coupon Code you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Coupon Code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sales Partner: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sales Partner
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sales Partner created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sales Partner/{DocumentName}':
    get:
      summary: Get a list of Global Search Settingss
      description: Returns a list of Global Search Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Global Search Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sales Partner'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sales Partner
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sales Partner you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sales Partner
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Global Search Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Global Search Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Global Search Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Search Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Global Search Settings/{DocumentName}':
    get:
      summary: Get a list of Document Type Mappings
      description: Returns a list of Document Type Mappings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Document Type Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Global Search Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Global Search Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Global Search Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Global Search Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Document Type Mapping: null
      tags:
        - DocTypes
    post:
      summary: Create a new Document Type Mapping
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Document Type Mapping created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Type Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Document Type Mapping/{DocumentName}':
    get:
      summary: Get a list of Event Sync Logs
      description: Returns a list of Event Sync Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Event Sync Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Document Type Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Document Type Mapping
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Document Type Mapping you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Document Type Mapping
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Event Sync Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Event Sync Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Event Sync Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Sync Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Event Sync Log/{DocumentName}':
    get:
      summary: Get a list of Quick Stock Balances
      description: Returns a list of Quick Stock Balances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quick Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event Sync Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Event Sync Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Event Sync Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Event Sync Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quick Stock Balance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quick Stock Balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quick Stock Balance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quick Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quick Stock Balance/{DocumentName}':
    get:
      summary: Get a list of Organisms
      description: Returns a list of Organisms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Organism'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quick Stock Balance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quick Stock Balance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quick Stock Balance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quick Stock Balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Organism: null
      tags:
        - DocTypes
    post:
      summary: Create a new Organism
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Organism created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Organism'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Organism/{DocumentName}':
    get:
      summary: Get a list of Antibiotics
      description: Returns a list of Antibiotics
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Antibiotic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Organism'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Organism
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Organism you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Organism
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Antibiotic: null
      tags:
        - DocTypes
    post:
      summary: Create a new Antibiotic
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Antibiotic created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Antibiotic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Antibiotic/{DocumentName}':
    get:
      summary: Get a list of Tags
      description: Returns a list of Tags
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Tag'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Antibiotic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Antibiotic
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Antibiotic you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Antibiotic
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Tag: null
      tags:
        - DocTypes
    post:
      summary: Create a new Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Tag created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Tag/{DocumentName}':
    get:
      summary: Get a list of Custom Roles
      description: Returns a list of Custom Roles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Custom Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Tag
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Tag you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Tag
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Custom Role: null
      tags:
        - DocTypes
    post:
      summary: Create a new Custom Role
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Custom Role created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Custom Role/{DocumentName}':
    get:
      summary: Get a list of List Filters
      description: Returns a list of List Filters
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/List Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Custom Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Custom Role
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Custom Role you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Custom Role
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/List Filter: null
      tags:
        - DocTypes
    post:
      summary: Create a new List Filter
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: List Filter created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/List Filter/{DocumentName}':
    get:
      summary: Get a list of Success Actions
      description: Returns a list of Success Actions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Success Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/List Filter'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific List Filter
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the List Filter you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified List Filter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Success Action: null
      tags:
        - DocTypes
    post:
      summary: Create a new Success Action
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Success Action created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Success Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Success Action/{DocumentName}':
    get:
      summary: Get a list of Transaction Logs
      description: Returns a list of Transaction Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Success Action'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Success Action
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Success Action you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Success Action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Transaction Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new Transaction Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Transaction Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Transaction Log/{DocumentName}':
    get:
      summary: Get a list of Email Unsubscribes
      description: Returns a list of Email Unsubscribes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Unsubscribe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Transaction Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Transaction Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Transaction Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Unsubscribe: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Unsubscribe
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Unsubscribe created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Unsubscribe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Unsubscribe/{DocumentName}':
    get:
      summary: Get a list of Google Calendars
      description: Returns a list of Google Calendars
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Google Calendar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Unsubscribe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Unsubscribe
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Unsubscribe you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Unsubscribe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Google Calendar: null
      tags:
        - DocTypes
    post:
      summary: Create a new Google Calendar
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Google Calendar created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Calendar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Google Calendar/{DocumentName}':
    get:
      summary: Get a list of QuickBooks Migrators
      description: Returns a list of QuickBooks Migrators
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/QuickBooks Migrator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Google Calendar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Google Calendar
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Google Calendar you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Google Calendar
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/QuickBooks Migrator: null
      tags:
        - DocTypes
    post:
      summary: Create a new QuickBooks Migrator
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: QuickBooks Migrator created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/QuickBooks Migrator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/QuickBooks Migrator/{DocumentName}':
    get:
      summary: Get a list of Accounting Periods
      description: Returns a list of Accounting Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Accounting Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/QuickBooks Migrator'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific QuickBooks Migrator
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the QuickBooks Migrator you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified QuickBooks Migrator
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Accounting Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Accounting Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Accounting Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Accounting Period/{DocumentName}':
    get:
      summary: Get a list of Session Default Settingss
      description: Returns a list of Session Default Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Session Default Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Accounting Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Accounting Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Accounting Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Accounting Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Session Default Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Session Default Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Session Default Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Session Default Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Session Default Settings/{DocumentName}':
    get:
      summary: Get a list of Manufacturers
      description: Returns a list of Manufacturers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Session Default Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Session Default Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Session Default Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Session Default Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Manufacturer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Manufacturer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Manufacturer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Manufacturer/{DocumentName}':
    get:
      summary: Get a list of Issue Types
      description: Returns a list of Issue Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Issue Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Manufacturer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Manufacturer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Manufacturer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Issue Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Issue Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Issue Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Issue Type/{DocumentName}':
    get:
      summary: Get a list of Price Lists
      description: Returns a list of Price Lists
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Price List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Issue Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Issue Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Issue Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Price List: null
      tags:
        - DocTypes
    post:
      summary: Create a new Price List
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Price List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Price List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Price List/{DocumentName}':
    get:
      summary: Get a list of Invoice Discountings
      description: Returns a list of Invoice Discountings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Invoice Discounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Price List'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Price List
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Price List you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Price List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Invoice Discounting: null
      tags:
        - DocTypes
    post:
      summary: Create a new Invoice Discounting
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Invoice Discounting created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invoice Discounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Invoice Discounting/{DocumentName}':
    get:
      summary: Get a list of Warehouse Types
      description: Returns a list of Warehouse Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Warehouse Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invoice Discounting'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Invoice Discounting
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Invoice Discounting you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Invoice Discounting
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Warehouse Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Warehouse Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Warehouse Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Warehouse Type/{DocumentName}':
    get:
      summary: Get a list of Loyalty Programs
      description: Returns a list of Loyalty Programs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Loyalty Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Warehouse Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Warehouse Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Warehouse Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Warehouse Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Loyalty Program: null
      tags:
        - DocTypes
    post:
      summary: Create a new Loyalty Program
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Loyalty Program created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Loyalty Program/{DocumentName}':
    get:
      summary: Get a list of Shipping Rules
      description: Returns a list of Shipping Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Shipping Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Loyalty Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Loyalty Program
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Loyalty Program you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Loyalty Program
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Shipping Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Shipping Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Shipping Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipping Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Shipping Rule/{DocumentName}':
    get:
      summary: Get a list of Exotel Settingss
      description: Returns a list of Exotel Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Exotel Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Shipping Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Shipping Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Shipping Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Shipping Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Exotel Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Exotel Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Exotel Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exotel Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Exotel Settings/{DocumentName}':
    get:
      summary: Get a list of Issue Prioritys
      description: Returns a list of Issue Prioritys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Issue Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Exotel Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Exotel Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Exotel Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Exotel Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Issue Priority: null
      tags:
        - DocTypes
    post:
      summary: Create a new Issue Priority
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Issue Priority created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Issue Priority/{DocumentName}':
    get:
      summary: Get a list of Personal Data Download Requests
      description: Returns a list of Personal Data Download Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Personal Data Download Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Issue Priority'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Issue Priority
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Issue Priority you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Issue Priority
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Personal Data Download Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Personal Data Download Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Personal Data Download Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Download Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Personal Data Download Request/{DocumentName}':
    get:
      summary: Get a list of Milestone Trackers
      description: Returns a list of Milestone Trackers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Milestone Tracker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Personal Data Download Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Personal Data Download Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Personal Data Download Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Personal Data Download Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Milestone Tracker: null
      tags:
        - DocTypes
    post:
      summary: Create a new Milestone Tracker
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Milestone Tracker created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone Tracker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Milestone Tracker/{DocumentName}':
    get:
      summary: Get a list of Milestones
      description: Returns a list of Milestones
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Milestone'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone Tracker'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Milestone Tracker
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Milestone Tracker you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Milestone Tracker
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Milestone: null
      tags:
        - DocTypes
    post:
      summary: Create a new Milestone
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Milestone created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Milestone/{DocumentName}':
    get:
      summary: Get a list of Homepage Sections
      description: Returns a list of Homepage Sections
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Homepage Section'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Milestone'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Milestone
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Milestone you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Milestone
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Homepage Section: null
      tags:
        - DocTypes
    post:
      summary: Create a new Homepage Section
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Homepage Section created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage Section'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Homepage Section/{DocumentName}':
    get:
      summary: Get a list of Website Slideshows
      description: Returns a list of Website Slideshows
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Slideshow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Homepage Section'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Homepage Section
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Homepage Section you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Homepage Section
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Slideshow: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Slideshow
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Slideshow created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Slideshow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Slideshow/{DocumentName}':
    get:
      summary: Get a list of Cashier Closings
      description: Returns a list of Cashier Closings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cashier Closing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Slideshow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Slideshow
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Slideshow you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Slideshow
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cashier Closing: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cashier Closing
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cashier Closing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cashier Closing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cashier Closing/{DocumentName}':
    get:
      summary: Get a list of Activity Costs
      description: Returns a list of Activity Costs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Activity Cost'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cashier Closing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cashier Closing
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cashier Closing you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cashier Closing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Activity Cost: null
      tags:
        - DocTypes
    post:
      summary: Create a new Activity Cost
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Activity Cost created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Cost'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Activity Cost/{DocumentName}':
    get:
      summary: Get a list of Role Permission for Page and Reports
      description: Returns a list of Role Permission for Page and Reports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Role Permission for Page and Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Cost'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Activity Cost
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Activity Cost you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Activity Cost
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Role Permission for Page and Report: null
      tags:
        - DocTypes
    post:
      summary: Create a new Role Permission for Page and Report
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Role Permission for Page and Report created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Permission for Page and Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Role Permission for Page and Report/{DocumentName}':
    get:
      summary: Get a list of Desktop Icons
      description: Returns a list of Desktop Icons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Desktop Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Role Permission for Page and Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Role Permission for Page and Report
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Role Permission for Page and Report you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Role Permission for Page and Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Desktop Icon: null
      tags:
        - DocTypes
    post:
      summary: Create a new Desktop Icon
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Desktop Icon created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Desktop Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Desktop Icon/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Periods
      description: Returns a list of Supplier Scorecard Periods
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Desktop Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Desktop Icon
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Desktop Icon you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Desktop Icon
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Period: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Period
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Period created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Period/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Variables
      description: Returns a list of Supplier Scorecard Variables
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Variable'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Period'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Period
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Period you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Period
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Variable: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Variable
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Variable created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Variable'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Variable/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecards
      description: Returns a list of Supplier Scorecards
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Variable'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Variable
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Variable you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Variable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard/{DocumentName}':
    get:
      summary: Get a list of Supplier Scorecard Standings
      description: Returns a list of Supplier Scorecard Standings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Supplier Scorecard Standing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Supplier Scorecard Standing: null
      tags:
        - DocTypes
    post:
      summary: Create a new Supplier Scorecard Standing
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Supplier Scorecard Standing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Standing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Supplier Scorecard Standing/{DocumentName}':
    get:
      summary: Get a list of Project Updates
      description: Returns a list of Project Updates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Supplier Scorecard Standing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Supplier Scorecard Standing
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Supplier Scorecard Standing you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Supplier Scorecard Standing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project Update: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project Update created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project Update/{DocumentName}':
    get:
      summary: Get a list of Employee Groups
      description: Returns a list of Employee Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project Update
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project Update you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project Update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Group/{DocumentName}':
    get:
      summary: Get a list of Bank Account Subtypes
      description: Returns a list of Bank Account Subtypes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Account Subtype'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Account Subtype: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Account Subtype
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Account Subtype created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Subtype'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Account Subtype/{DocumentName}':
    get:
      summary: Get a list of Market Segments
      description: Returns a list of Market Segments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Market Segment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Account Subtype'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Account Subtype
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Account Subtype you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Account Subtype
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Market Segment: null
      tags:
        - DocTypes
    post:
      summary: Create a new Market Segment
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Market Segment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Market Segment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Market Segment/{DocumentName}':
    get:
      summary: Get a list of Delivery Settingss
      description: Returns a list of Delivery Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Delivery Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Market Segment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Market Segment
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Market Segment you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Market Segment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Delivery Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Delivery Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Delivery Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Delivery Settings/{DocumentName}':
    get:
      summary: Get a list of Lab Test UOMs
      description: Returns a list of Lab Test UOMs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Lab Test UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Delivery Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Delivery Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Delivery Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Delivery Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Lab Test UOM: null
      tags:
        - DocTypes
    post:
      summary: Create a new Lab Test UOM
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Lab Test UOM created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Lab Test UOM/{DocumentName}':
    get:
      summary: Get a list of Email Rules
      description: Returns a list of Email Rules
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Email Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lab Test UOM'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Lab Test UOM
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Lab Test UOM you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Lab Test UOM
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Email Rule: null
      tags:
        - DocTypes
    post:
      summary: Create a new Email Rule
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Email Rule created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Email Rule/{DocumentName}':
    get:
      summary: Get a list of Employee Separation Templates
      description: Returns a list of Employee Separation Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Separation Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Email Rule'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Email Rule
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Email Rule you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Email Rule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Separation Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Separation Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Separation Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Separation Template/{DocumentName}':
    get:
      summary: Get a list of Employee Onboarding Templates
      description: Returns a list of Employee Onboarding Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Onboarding Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Separation Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Separation Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Separation Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Separation Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Onboarding Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Onboarding Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Onboarding Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Onboarding Template/{DocumentName}':
    get:
      summary: Get a list of Bank Guarantees
      description: Returns a list of Bank Guarantees
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bank Guarantee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Onboarding Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Onboarding Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Onboarding Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Onboarding Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bank Guarantee: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bank Guarantee
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bank Guarantee created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Guarantee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bank Guarantee/{DocumentName}':
    get:
      summary: Get a list of UOM Conversion Factors
      description: Returns a list of UOM Conversion Factors
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UOM Conversion Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bank Guarantee'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bank Guarantee
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bank Guarantee you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bank Guarantee
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UOM Conversion Factor: null
      tags:
        - DocTypes
    post:
      summary: Create a new UOM Conversion Factor
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UOM Conversion Factor created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Conversion Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UOM Conversion Factor/{DocumentName}':
    get:
      summary: Get a list of SMS Logs
      description: Returns a list of SMS Logs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SMS Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Conversion Factor'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UOM Conversion Factor
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UOM Conversion Factor you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UOM Conversion Factor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/SMS Log: null
      tags:
        - DocTypes
    post:
      summary: Create a new SMS Log
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: SMS Log created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/SMS Log/{DocumentName}':
    get:
      summary: Get a list of Employee Transfers
      description: Returns a list of Employee Transfers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Log'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific SMS Log
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the SMS Log you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified SMS Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Transfer: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Transfer
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Transfer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Transfer/{DocumentName}':
    get:
      summary: Get a list of Compensatory Leave Requests
      description: Returns a list of Compensatory Leave Requests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Compensatory Leave Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Transfer'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Transfer
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Transfer you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Transfer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Compensatory Leave Request: null
      tags:
        - DocTypes
    post:
      summary: Create a new Compensatory Leave Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Compensatory Leave Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Compensatory Leave Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Compensatory Leave Request/{DocumentName}':
    get:
      summary: Get a list of Installation Notes
      description: Returns a list of Installation Notes
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Installation Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Compensatory Leave Request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Compensatory Leave Request
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Compensatory Leave Request you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Compensatory Leave Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Installation Note: null
      tags:
        - DocTypes
    post:
      summary: Create a new Installation Note
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Installation Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installation Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Installation Note/{DocumentName}':
    get:
      summary: Get a list of Routings
      description: Returns a list of Routings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Routing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Installation Note'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Installation Note
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Installation Note you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Installation Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Routing: null
      tags:
        - DocTypes
    post:
      summary: Create a new Routing
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Routing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Routing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Routing/{DocumentName}':
    get:
      summary: Get a list of Share Types
      description: Returns a list of Share Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Share Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Routing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Routing
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Routing you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Routing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Share Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Share Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Share Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Share Type/{DocumentName}':
    get:
      summary: Get a list of BOM Update Tools
      description: Returns a list of BOM Update Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/BOM Update Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Share Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Share Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Share Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Share Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/BOM Update Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new BOM Update Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: BOM Update Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/BOM Update Tool/{DocumentName}':
    get:
      summary: Get a list of Job Applicant Sources
      description: Returns a list of Job Applicant Sources
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Job Applicant Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BOM Update Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific BOM Update Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the BOM Update Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified BOM Update Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Job Applicant Source: null
      tags:
        - DocTypes
    post:
      summary: Create a new Job Applicant Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Job Applicant Source created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Job Applicant Source/{DocumentName}':
    get:
      summary: Get a list of Item Alternatives
      description: Returns a list of Item Alternatives
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Alternative'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Job Applicant Source'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Job Applicant Source
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Job Applicant Source you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Job Applicant Source
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Alternative: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Alternative
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Alternative created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Alternative'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Alternative/{DocumentName}':
    get:
      summary: Get a list of Identification Document Types
      description: Returns a list of Identification Document Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Identification Document Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Alternative'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Alternative
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Alternative you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Alternative
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Identification Document Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Identification Document Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Identification Document Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Identification Document Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Identification Document Type/{DocumentName}':
    get:
      summary: Get a list of Currency Exchanges
      description: Returns a list of Currency Exchanges
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Currency Exchange'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Identification Document Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Identification Document Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Identification Document Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Identification Document Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Currency Exchange: null
      tags:
        - DocTypes
    post:
      summary: Create a new Currency Exchange
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Currency Exchange created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Currency Exchange/{DocumentName}':
    get:
      summary: Get a list of Purpose of Travels
      description: Returns a list of Purpose of Travels
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Purpose of Travel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Currency Exchange'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Currency Exchange
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Currency Exchange you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Currency Exchange
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Purpose of Travel: null
      tags:
        - DocTypes
    post:
      summary: Create a new Purpose of Travel
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Purpose of Travel created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purpose of Travel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Purpose of Travel/{DocumentName}':
    get:
      summary: Get a list of Finance Books
      description: Returns a list of Finance Books
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Finance Book'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Purpose of Travel'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Purpose of Travel
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Purpose of Travel you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Purpose of Travel
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Finance Book: null
      tags:
        - DocTypes
    post:
      summary: Create a new Finance Book
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Finance Book created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Finance Book'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Finance Book/{DocumentName}':
    get:
      summary: Get a list of UOM Categorys
      description: Returns a list of UOM Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UOM Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Finance Book'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Finance Book
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Finance Book you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Finance Book
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/UOM Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new UOM Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: UOM Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/UOM Category/{DocumentName}':
    get:
      summary: Get a list of Party Types
      description: Returns a list of Party Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Party Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UOM Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific UOM Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the UOM Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified UOM Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Party Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Party Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Party Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Party Type/{DocumentName}':
    get:
      summary: Get a list of Employee Health Insurances
      description: Returns a list of Employee Health Insurances
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Employee Health Insurance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Party Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Party Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Party Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Party Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Employee Health Insurance: null
      tags:
        - DocTypes
    post:
      summary: Create a new Employee Health Insurance
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Employee Health Insurance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Health Insurance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Employee Health Insurance/{DocumentName}':
    get:
      summary: Get a list of Versions
      description: Returns a list of Versions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Version'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee Health Insurance'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Employee Health Insurance
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Employee Health Insurance you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Employee Health Insurance
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Version: null
      tags:
        - DocTypes
    post:
      summary: Create a new Version
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Version created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Version'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Version/{DocumentName}':
    get:
      summary: Get a list of Data Exports
      description: Returns a list of Data Exports
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Data Export'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Version'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Version
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Version you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Version
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Data Export: null
      tags:
        - DocTypes
    post:
      summary: Create a new Data Export
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Data Export created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Export'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Data Export/{DocumentName}':
    get:
      summary: Get a list of Projects Settingss
      description: Returns a list of Projects Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Projects Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Data Export'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Data Export
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Data Export you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Data Export
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Projects Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Projects Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Projects Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Projects Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Projects Settings/{DocumentName}':
    get:
      summary: Get a list of Item Variant Settingss
      description: Returns a list of Item Variant Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Item Variant Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Projects Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Projects Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Projects Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Projects Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Item Variant Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Item Variant Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Item Variant Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Variant Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Item Variant Settings/{DocumentName}':
    get:
      summary: Get a list of Daily Work Summarys
      description: Returns a list of Daily Work Summarys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Daily Work Summary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item Variant Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Item Variant Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Item Variant Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Item Variant Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Daily Work Summary: null
      tags:
        - DocTypes
    post:
      summary: Create a new Daily Work Summary
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Daily Work Summary created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Daily Work Summary/{DocumentName}':
    get:
      summary: Get a list of Daily Work Summary Groups
      description: Returns a list of Daily Work Summary Groups
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Daily Work Summary Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Daily Work Summary
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Daily Work Summary you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Daily Work Summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Daily Work Summary Group: null
      tags:
        - DocTypes
    post:
      summary: Create a new Daily Work Summary Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Daily Work Summary Group created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Daily Work Summary Group/{DocumentName}':
    get:
      summary: Get a list of Cash Flow Mappers
      description: Returns a list of Cash Flow Mappers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cash Flow Mapper'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Daily Work Summary Group'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Daily Work Summary Group
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Daily Work Summary Group you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Daily Work Summary Group
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cash Flow Mapper: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cash Flow Mapper
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cash Flow Mapper created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cash Flow Mapper'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cash Flow Mapper/{DocumentName}':
    get:
      summary: Get a list of Cash Flow Mappings
      description: Returns a list of Cash Flow Mappings
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cash Flow Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cash Flow Mapper'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cash Flow Mapper
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cash Flow Mapper you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cash Flow Mapper
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cash Flow Mapping: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cash Flow Mapping
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cash Flow Mapping created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cash Flow Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cash Flow Mapping/{DocumentName}':
    get:
      summary: Get a list of GoCardless Mandates
      description: Returns a list of GoCardless Mandates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/GoCardless Mandate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cash Flow Mapping'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cash Flow Mapping
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cash Flow Mapping you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cash Flow Mapping
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/GoCardless Mandate: null
      tags:
        - DocTypes
    post:
      summary: Create a new GoCardless Mandate
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: GoCardless Mandate created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Mandate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/GoCardless Mandate/{DocumentName}':
    get:
      summary: Get a list of Cash Flow Mapping Templates
      description: Returns a list of Cash Flow Mapping Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cash Flow Mapping Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GoCardless Mandate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific GoCardless Mandate
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the GoCardless Mandate you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified GoCardless Mandate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cash Flow Mapping Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cash Flow Mapping Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cash Flow Mapping Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cash Flow Mapping Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cash Flow Mapping Template/{DocumentName}':
    get:
      summary: Get a list of Domain Settingss
      description: Returns a list of Domain Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Domain Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cash Flow Mapping Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cash Flow Mapping Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cash Flow Mapping Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cash Flow Mapping Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Domain Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new Domain Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Domain Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Domain Settings/{DocumentName}':
    get:
      summary: Get a list of Training Programs
      description: Returns a list of Training Programs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Training Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Domain Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Domain Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Domain Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Domain Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Training Program: null
      tags:
        - DocTypes
    post:
      summary: Create a new Training Program
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Training Program created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Training Program/{DocumentName}':
    get:
      summary: Get a list of Opportunity Types
      description: Returns a list of Opportunity Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Opportunity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Training Program'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Training Program
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Training Program you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Training Program
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Opportunity Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Opportunity Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Opportunity Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Opportunity Type/{DocumentName}':
    get:
      summary: Get a list of Pages
      description: Returns a list of Pages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Opportunity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Opportunity Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Opportunity Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Opportunity Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Page: null
      tags:
        - DocTypes
    post:
      summary: Create a new Page
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Page created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Page/{DocumentName}':
    get:
      summary: Get a list of SMS Centers
      description: Returns a list of SMS Centers
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/SMS Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Page'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Page
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Page you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/SMS Center: null
      tags:
        - DocTypes
    post:
      summary: Create a new SMS Center
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: SMS Center created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/SMS Center/{DocumentName}':
    get:
      summary: Get a list of Dosage Forms
      description: Returns a list of Dosage Forms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Dosage Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SMS Center'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific SMS Center
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the SMS Center you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified SMS Center
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Dosage Form: null
      tags:
        - DocTypes
    post:
      summary: Create a new Dosage Form
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Dosage Form created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dosage Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Dosage Form/{DocumentName}':
    get:
      summary: Get a list of Prescription Dosages
      description: Returns a list of Prescription Dosages
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Prescription Dosage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Dosage Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Dosage Form
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Dosage Form you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Dosage Form
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Prescription Dosage: null
      tags:
        - DocTypes
    post:
      summary: Create a new Prescription Dosage
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Prescription Dosage created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prescription Dosage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Prescription Dosage/{DocumentName}':
    get:
      summary: Get a list of Sensitivitys
      description: Returns a list of Sensitivitys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Sensitivity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prescription Dosage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Prescription Dosage
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Prescription Dosage you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Prescription Dosage
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Sensitivity: null
      tags:
        - DocTypes
    post:
      summary: Create a new Sensitivity
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Sensitivity created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sensitivity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Sensitivity/{DocumentName}':
    get:
      summary: Get a list of Complaints
      description: Returns a list of Complaints
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Complaint'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Sensitivity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Sensitivity
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Sensitivity you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Sensitivity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Complaint: null
      tags:
        - DocTypes
    post:
      summary: Create a new Complaint
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Complaint created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Complaint'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Complaint/{DocumentName}':
    get:
      summary: Get a list of Unhandled Emails
      description: Returns a list of Unhandled Emails
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Unhandled Email'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Complaint'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Complaint
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Complaint you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Complaint
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Unhandled Email: null
      tags:
        - DocTypes
    post:
      summary: Create a new Unhandled Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Unhandled Email created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unhandled Email'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Unhandled Email/{DocumentName}':
    get:
      summary: Get a list of Prescription Durations
      description: Returns a list of Prescription Durations
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Prescription Duration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Unhandled Email'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Unhandled Email
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Unhandled Email you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Unhandled Email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Prescription Duration: null
      tags:
        - DocTypes
    post:
      summary: Create a new Prescription Duration
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Prescription Duration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prescription Duration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Prescription Duration/{DocumentName}':
    get:
      summary: Get a list of Medical Departments
      description: Returns a list of Medical Departments
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Medical Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prescription Duration'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Prescription Duration
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Prescription Duration you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Prescription Duration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Medical Department: null
      tags:
        - DocTypes
    post:
      summary: Create a new Medical Department
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Medical Department created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Medical Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Medical Department/{DocumentName}':
    get:
      summary: Get a list of Print Styles
      description: Returns a list of Print Styles
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Print Style'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Medical Department'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Medical Department
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Medical Department you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Medical Department
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Print Style: null
      tags:
        - DocTypes
    post:
      summary: Create a new Print Style
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Print Style created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Style'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Print Style/{DocumentName}':
    get:
      summary: Get a list of Project Types
      description: Returns a list of Project Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Project Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Print Style'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Print Style
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Print Style you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Print Style
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Project Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Project Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Project Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Project Type/{DocumentName}':
    get:
      summary: Get a list of Activity Types
      description: Returns a list of Activity Types
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Activity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Project Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Project Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Project Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Activity Type: null
      tags:
        - DocTypes
    post:
      summary: Create a new Activity Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Activity Type created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Activity Type/{DocumentName}':
    get:
      summary: Get a list of Address Templates
      description: Returns a list of Address Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Address Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity Type'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Activity Type
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Activity Type you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Activity Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Address Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Address Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Address Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Address Template/{DocumentName}':
    get:
      summary: Get a list of Website Scripts
      description: Returns a list of Website Scripts
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Address Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Address Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Address Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Address Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Script: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Script
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Script created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Script/{DocumentName}':
    get:
      summary: Get a list of Bulk Updates
      description: Returns a list of Bulk Updates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Bulk Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Script'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Script
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Script you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Script
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Bulk Update: null
      tags:
        - DocTypes
    post:
      summary: Create a new Bulk Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Bulk Update created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Bulk Update/{DocumentName}':
    get:
      summary: Get a list of OAuth Provider Settingss
      description: Returns a list of OAuth Provider Settingss
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/OAuth Provider Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bulk Update'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Bulk Update
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Bulk Update you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Bulk Update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/OAuth Provider Settings: null
      tags:
        - DocTypes
    post:
      summary: Create a new OAuth Provider Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OAuth Provider Settings created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Provider Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/OAuth Provider Settings/{DocumentName}':
    get:
      summary: Get a list of Help Categorys
      description: Returns a list of Help Categorys
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Help Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OAuth Provider Settings'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific OAuth Provider Settings
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the OAuth Provider Settings you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified OAuth Provider Settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Help Category: null
      tags:
        - DocTypes
    post:
      summary: Create a new Help Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Help Category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Help Category/{DocumentName}':
    get:
      summary: Get a list of Website Sidebars
      description: Returns a list of Website Sidebars
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Website Sidebar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Help Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Help Category
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Help Category you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Help Category
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Website Sidebar: null
      tags:
        - DocTypes
    post:
      summary: Create a new Website Sidebar
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Website Sidebar created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Sidebar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Website Sidebar/{DocumentName}':
    get:
      summary: Get a list of Monthly Distributions
      description: Returns a list of Monthly Distributions
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Monthly Distribution'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Website Sidebar'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Website Sidebar
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Website Sidebar you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Website Sidebar
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Monthly Distribution: null
      tags:
        - DocTypes
    post:
      summary: Create a new Monthly Distribution
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Monthly Distribution created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Monthly Distribution'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Monthly Distribution/{DocumentName}':
    get:
      summary: Get a list of Interests
      description: Returns a list of Interests
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Monthly Distribution'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Monthly Distribution
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Monthly Distribution you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Monthly Distribution
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Interest: null
      tags:
        - DocTypes
    post:
      summary: Create a new Interest
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Interest created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Interest/{DocumentName}':
    get:
      summary: Get a list of Branchs
      description: Returns a list of Branchs
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Branch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Interest
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Interest you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Interest
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Branch: null
      tags:
        - DocTypes
    post:
      summary: Create a new Branch
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Branch created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Branch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Branch/{DocumentName}':
    get:
      summary: Get a list of Offer Terms
      description: Returns a list of Offer Terms
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Offer Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Branch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Branch
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Branch you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Branch
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Offer Term: null
      tags:
        - DocTypes
    post:
      summary: Create a new Offer Term
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Offer Term created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Offer Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Offer Term/{DocumentName}':
    get:
      summary: Get a list of Quotation Lost Reasons
      description: Returns a list of Quotation Lost Reasons
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Quotation Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Offer Term'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Offer Term
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Offer Term you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Offer Term
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Quotation Lost Reason: null
      tags:
        - DocTypes
    post:
      summary: Create a new Quotation Lost Reason
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Quotation Lost Reason created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Quotation Lost Reason/{DocumentName}':
    get:
      summary: Get a list of Cheque Print Templates
      description: Returns a list of Cheque Print Templates
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Cheque Print Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Quotation Lost Reason'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Quotation Lost Reason
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Quotation Lost Reason you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Quotation Lost Reason
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Cheque Print Template: null
      tags:
        - DocTypes
    post:
      summary: Create a new Cheque Print Template
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Cheque Print Template created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cheque Print Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Cheque Print Template/{DocumentName}':
    get:
      summary: Get a list of Rename Tools
      description: Returns a list of Rename Tools
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Rename Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cheque Print Template'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Cheque Print Template
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Cheque Print Template you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Cheque Print Template
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Rename Tool: null
      tags:
        - DocTypes
    post:
      summary: Create a new Rename Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Rename Tool created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Rename Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Rename Tool/{DocumentName}':
    get:
      summary: Get a list of Authorization Controls
      description: Returns a list of Authorization Controls
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
        - $ref: '#/components/parameters/PageLength'
        - $ref: '#/components/parameters/PageStart'
      responses:
        '200':
          description: |
            By default, only the "name" field is included in the listing,
            to add more fields, you can pass the fields param to GET request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Rename Tool'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Rename Tool
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Rename Tool you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Rename Tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
          /api/resource/Authorization Control: null
      tags:
        - DocTypes
    post:
      summary: Create a new Authorization Control
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                data:
                  type: object
      responses:
        '200':
          description: Authorization Control created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
  '/api/resource/Authorization Control/{DocumentName}':
    get:
      summary: Get a specific Authorization Control
      description: Get a Authorization Control by it's name
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Authorization Control you'd like to receive.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Filters'
      responses:
        '200':
          description: Found requested document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    put:
      summary: Update a specific document
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the document you'd like to update. For example EMP001 (of type Employee).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated specified document
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Authorization Control'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
    delete:
      summary: Delete a specific Authorization Control
      description: TBD
      parameters:
        - name: DocumentName
          in: path
          description: |
            The name (ID) of the Authorization Control you'd like to delete.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Deleted specified Authorization Control
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - DocTypes
components:
  parameters:
    Fields:
      in: query
      name: fields
      schema:
        type: array
        items:
          type: string
        default:
          - name
      description: |
        By default, only the "name" field is included in the listing, to add more fields,
        you can pass the fields param to GET request. For example, fields=["name","country"]
    Filters:
      in: query
      name: filters
      schema:
        type: array
        items:
          type: array
          items:
            type: string
      description: |
        You can filter the listing using sql conditions by passing them as the filters GET param.
        Each condition is an array of the format, [{doctype}, {field}, {operator}, {value}].
        For example, filters=[["Customer", "country", "=", "India"]]
    PageLength:
      in: query
      name: limit_page_length
      schema:
        type: integer
        default: 20
      description: |
        By default, all listings are returned paginated. With this parameter you can change the
        page size (how many items are teturned at once).
    PageStart:
      in: query
      name: limit_start
      schema:
        type: integer
        default: 0
      description: |
        To request successive pages, pass a multiple of your limit_page_length as limit_start.
        For Example, to request the second page, pass limit_start as 20.
  schemas:
    Copilot Settings:
      type: object
      properties: null
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              exc:
                type: string
                example: Traceback (most recent call last) ...
              _server_messages:
                type: string
                example: '[{"message": "Not permitted"}]'
        text/html:
          schema:
            type: string
    Forbidden:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              locals:
                type: string
              exc:
                type: string
                example: Traceback (most recent call last) ...
              _server_messages:
                type: string
                example: Incorrect password
        text/html:
          schema:
            type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Get your API keys at User -> Api Access -> Generate Keys.
        "headers = {'Authorization': 'token <api_key>:<api_secret>'}"
    basicAuth:
      type: http
      scheme: basic
      description: |
        Get your API keys at User -> Api Access -> Generate Keys.
        username = api_key; password = api_secret
        [More info](https://frappe.io/docs/user/en/guides/integration/token_based_auth)
    oAuth2:
      type: oauth2
      description: |
        This API uses OAuth 2 with the authorization code flow.
        [More info]https://frappe.io/docs/user/en/guides/integration/using_oauth)
      flows:
        authorizationCode:
          authorizationUrl: /method/frappe.integrations.oauth2.authorize
          tokenUrl: /method/frappe.integrations.oauth2.get_token
          refreshUrl: /method/frappe.integrations.oauth2.get_token
          scopes:
            all: Same permissions as the user who created the oAuth client
tags:
  - name: DocTypes
    description: 'Create, read, update or delete any document'
  - name: Whitelisted Methods
    description: Call a server method
externalDocs:
  url: 'https://frappe.io/docs/user/en/api/rest'
